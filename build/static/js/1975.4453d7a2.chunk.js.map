{"version":3,"file":"static/js/1975.4453d7a2.chunk.js","mappings":"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","sources":["components/BoQPopup.jsx","components/VerifyBoqSpecificTaskBody.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState, forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nlet rateCardData = [];\r\n\r\nexport default function BoQPopup(props) {\r\n  const [filteredData, setFilteredData] = useState(rateCardData);\r\n  const [rateCard, setRateCard] = useState(\"all\");\r\n  const { openPopup, setOpenPopup } = props;\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    rateCardData = [];\r\n    axiosInstance\r\n      .get(\"projonline/allRateCards\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        const filter = res.data.filter(\r\n          (task) =>\r\n            task.rateCardSubcon._id ===\r\n              JSON.parse(localStorage.getItem(\"user\")).company._id &&\r\n            task.rateCardValidTo >= props.acceptedDate &&\r\n            task.rateCardValidFrom <= props.acceptedDate\r\n        );\r\n        // console.log(filter)\r\n        filter.forEach((card) => {\r\n          card.rateCardItems.forEach((item) => {\r\n            item[\"rateCardDiv\"] = card.rateCardDiv;\r\n            rateCardData.push(item);\r\n          });\r\n        });\r\n\r\n        // console.log(rateCardData)\r\n        //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      cellStyle: { width: 400, minWidth: 400, maxWidth: 400, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      cellStyle: { width: 200, minWidth: 200, maxWidth: 200, height: 1 },\r\n    },\r\n  ];\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const handleRowsSelect = () => {\r\n    if (Array.isArray(selectedRows) && selectedRows.length) {\r\n      props.callBk(filteredData.filter((row) => selectedRows.includes(row)));\r\n    }\r\n\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleRowsSelectClose = () => {\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      rateCard === \"all\"\r\n        ? rateCardData\r\n        : rateCardData.filter((dt) => dt.rateCard === rateCard)\r\n    );\r\n  }, [rateCard]);\r\n\r\n  return (\r\n    <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n      <DialogContent>\r\n        <MaterialTable\r\n          title=\"BOQ Line Items\"\r\n          columns={columns}\r\n          data={filteredData}\r\n          icons={tableIcons}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          options={{\r\n            exportButton: true,\r\n            pageSizeOptions: [5, 10, 20],\r\n            paginationType: \"stepped\",\r\n            showTextRowsSelected: false,\r\n            actionsColumnIndex: -1,\r\n            filtering: true,\r\n            selection: true,\r\n            tableLayout: \"auto\",\r\n            selectionProps: {},\r\n            rowStyle: {\r\n              backgroundColor: \"#EEE\",\r\n            },\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              color: \"#FFF\",\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => (\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={rateCard}\r\n                  onChange={(e) => setRateCard(e.target.value)}\r\n                  style={{ width: 100 }}\r\n                >\r\n                  <MenuItem value={\"all\"}>\r\n                    <em>All</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                  <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                  <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                </Select>\r\n              ),\r\n              tooltip: \"Select Rate Card\",\r\n              isFreeAction: true,\r\n            },\r\n          ]}\r\n          components={{\r\n            Pagination: (props) => (\r\n              <div>\r\n                <Grid container style={{ pading: 15, background: \"#f5f5f5\" }}>\r\n                  <Grid sm={11} align=\"right\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        onClick={handleRowsSelect}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                  <Grid sm={1} align=\"center\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        onClick={handleRowsSelectClose}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                </Grid>\r\n                <TablePagination {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MaterialTable, { MTablePagination } from \"material-table\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\nimport BoQPopup from \"./BoQPopup\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction VerifyBoqSpecificTaskBody(props) {\r\n  let [users, setUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [boqData, setBoqData] = useState([]);\r\n  // const [boqData, setBoqData] = useState(updatedData); // Test Code\r\n  const [totalCost, setTotalCost] = useState();\r\n  const [totalCapexOpexCost, setTotalCapexOpexCost] = useState();\r\n  const [approvalHistory, setApproalHistory] = useState([]);\r\n  let [severity, setSeverity] = useState(\"\");\r\n  let [alart, setAlart] = useState(\"\");\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  // Capex/Opex amount variable create\r\n  const [CapexPrAmount, setTotalCapexCost] = useState(0);\r\n  const [OpexPrAmount, setTotalOpexCost] = useState(0);\r\n\r\n  //const {id} = useParams();\r\n  //value={mapname.name}\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { boqVerifiedComment } = form;\r\n    const newErrors = {};\r\n\r\n    switch (true) {\r\n      case (!boqVerifiedComment || boqVerifiedComment === \"\") &&\r\n        getBoqCapexTotal() + getBoqOpexTotal() !== getBoqCapexOpexTotal():\r\n        newErrors.boqVerifiedComment =\r\n          \"Capex/Opex type and Comment cannot be blank!\";\r\n        break;\r\n      case !boqVerifiedComment || boqVerifiedComment === \"\":\r\n        newErrors.boqVerifiedComment = \"Comment cannot be blank!\";\r\n        break;\r\n      case getBoqCapexTotal() + getBoqOpexTotal() !== getBoqCapexOpexTotal():\r\n        newErrors.boqVerifiedComment = \"Capex/Opex type cannot be blank!\";\r\n        break;\r\n    }\r\n\r\n    // name errors\r\n    // if (!boqVerifiedComment || boqVerifiedComment === '')newErrors.boqVerifiedComment = 'Comment cannot be blank!'                         //Test Code\r\n    // if (getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal())newErrors.boqVerifiedComment = 'Capex/Opex type cannot be blank!'  //Test Code\r\n    // if ((!boqVerifiedComment || boqVerifiedComment === '')||(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal()))newErrors.boqVerifiedComment = 'Capex/Opex type and Comment cannot be blank!'\r\n    // console.log(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal());\r\n    // console.log(!boqVerifiedComment || boqVerifiedComment === '');\r\n    // console.log((!boqVerifiedComment || boqVerifiedComment === '')&&(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal()));\r\n    return newErrors;\r\n  };\r\n\r\n  const findFormErrorsForReject = () => {\r\n    const { boqVerifiedComment } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n\r\n    if (!boqVerifiedComment || boqVerifiedComment === \"\")\r\n      newErrors.boqVerifiedComment = \"cannot be blank!\";\r\n    return newErrors;\r\n  };\r\n  // To apply All Capex when click the button\r\n  const handleAllCapexClick = () => {\r\n    const updatedData = boqData.map((item) => ({\r\n      ...item,\r\n      capexopexLine: \"Capex\", // added\r\n      // itemCapexOpexType: 'Capex'\r\n    }));\r\n    setBoqData(updatedData);\r\n    // console.log(updatedData)\r\n    // console.log(updatedRows)\r\n  };\r\n  // To apply All Opex when click the button\r\n  const handleAllOpexClick = () => {\r\n    const updatedData = boqData.map((item) => ({\r\n      ...item,\r\n      capexopexLine: \"Opex\", // added\r\n      // itemCapexOpexType: 'Opex'\r\n    }));\r\n    setBoqData(updatedData);\r\n    // console.log(updatedData)\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      filtering: false,\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      filtering: false,\r\n      editable: false,\r\n      cellStyle: { width: 300, minWidth: 300, maxWidth: 300, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      editable: false,\r\n      cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      editable: false,\r\n      filtering: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Quantity\",\r\n      field: \"itemQty\",\r\n      editable: false,\r\n      cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Total\",\r\n      field: \"itemTotal\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    // { title: 'Capex/Opex', field: 'itemCapexOpexType', lookup: { Capex: \"Capex\", Opex: \"Opex\" }, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 }, editable: 'onUpdate' }, // Working Code\r\n    {\r\n      title: \"Capex/Opex\",\r\n      field: \"capexopexLine\",\r\n      lookup: { Capex: \"Capex\", Opex: \"Opex\" },\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    }, // Test Code\r\n\r\n    {\r\n      title: \"Comment\",\r\n      field: \"itemComment\",\r\n      editable: \"onUpdate\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n  ];\r\n  // To calculate total Amount\r\n  function getBoqCapexOpexTotal() {\r\n    var capexOpexTotal = 0;\r\n    for (let i = 0; i < boqData.length; i++) {\r\n      capexOpexTotal = capexOpexTotal + boqData[i].itemTotal;\r\n    }\r\n    setTotalCapexOpexCost(capexOpexTotal);\r\n    return capexOpexTotal;\r\n  }\r\n  // To calculate total CapexAmount\r\n  function getBoqCapexTotal() {\r\n    let capexTotal = 0;\r\n    for (let i = 0; i < boqData.length; i++) {\r\n      const capexopexLine = boqData[i].capexopexLine;\r\n      if (capexopexLine === \"Capex\") {\r\n        capexTotal += boqData[i].itemTotal;\r\n      }\r\n    }\r\n    setTotalCapexCost(capexTotal);\r\n    return capexTotal;\r\n  }\r\n\r\n  // To calculate total OpexAmount\r\n  function getBoqOpexTotal() {\r\n    var opexTotal = 0;\r\n    for (let i = 0; i < boqData.length; i++) {\r\n      const capexopexLine = boqData[i].capexopexLine;\r\n      if (capexopexLine === \"Opex\") {\r\n        opexTotal += boqData[i].itemTotal;\r\n      }\r\n    }\r\n    setTotalOpexCost(opexTotal);\r\n    return opexTotal;\r\n  }\r\n  //Approal History download table\r\n  const columns_AH = [\r\n    { field: \"taskStatus\", headerName: \"Status\", width: 250 },\r\n    {\r\n      field: \"performedDate\",\r\n      headerName: \"Performed Date\",\r\n      width: 200,\r\n      valueGetter: (params) => params.row.performedDate.split(\"T\")[0],\r\n    },\r\n    {\r\n      field: \"performedBy\",\r\n      headerName: \"Performed by\",\r\n      width: 200,\r\n      valueGetter: (params) => params.row.performedBy.name,\r\n    },\r\n    { field: \"comment\", headerName: \"Comment\", width: 500 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // console.log(props.location.data.row)\r\n    setUsers([{ name: props.location.data.row.assignedMobitelOfficer.name }]);\r\n    setCompanies([\r\n      { companyName: props.location.data.row.assignedSubcon.companyName },\r\n    ]);\r\n    setForm({\r\n      taskRef: props.location.data.row.taskRef,\r\n      siteID: props.location.data.row.siteID,\r\n      siteName: props.location.data.row.siteName,\r\n      actualTaskStartDate: props.location.data.row.taskHistory\r\n        .find((x) => x.taskStatus === \"Task commenced\")\r\n        .performedDate.split(\"T\")[0],\r\n      actualTaskCompletedDate: props.location.data.row.taskHistory\r\n        .find((x) => x.taskStatus === \"Task completed\")\r\n        .performedDate.split(\"T\")[0],\r\n      taskAssignedDiv: props.location.data.row.taskAssignedDiv,\r\n      assignedMobitelOfficer:\r\n        props.location.data.row.assignedMobitelOfficer.name,\r\n      workScope: props.location.data.row.workScope,\r\n      assignedSubcon: props.location.data.row.assignedSubcon.companyName,\r\n    });\r\n\r\n    setBoqData(\r\n      props.location.data.row.boqs[props.location.data.row.boqs.length - 1]\r\n        .boqData\r\n    ); // original code\r\n    setTotalCost(\r\n      props.location.data.row.boqs[props.location.data.row.boqs.length - 1]\r\n        .totalCost\r\n    );\r\n    setApproalHistory(\r\n      props.location.data.row.taskHistory.filter(\r\n        (e) =>\r\n          e.taskStatus === \"BOQ Verified_0\" ||\r\n          e.taskStatus === \"BOQ Verified_1\" ||\r\n          e.taskStatus === \"BOQ Verified_2\" ||\r\n          e.taskStatus === \"BOQ Rejected\" ||\r\n          e.taskStatus === \"BOQ submitted\"\r\n      )\r\n    );\r\n    //console.log(props.location.data.row.boqs[props.location.data.row.boqs.length-1].totalCost)\r\n  }, []);\r\n\r\n  const smsFetch = async (mobileNo) => {\r\n    // console.log(mobileNo)\r\n    //console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\r\n    const url =\r\n      \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\";\r\n    const Body = {\r\n      username: \"smsdigisvc_sci\",\r\n      password: \"Sci@#25\",\r\n      from: \"Mobitel-PMS\",\r\n      to: \"0\" + mobileNo,\r\n      text: \"You have new BOQ to review. Please login to https://projectonline.mobitel.lk/\",\r\n      mesageType: 0,\r\n    };\r\n    //console.log(JSON.parse(localStorage.getItem(\"user\")))\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Body),\r\n      mode: \"no-cors\",\r\n    };\r\n    const response = await fetch(url, requestOptions);\r\n    // console.log(response)\r\n  };\r\n\r\n  const onAccept = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n      // console.log(boqData)\r\n    } else {\r\n      var taskObject;\r\n      // console.log(props.location.data.row)\r\n\r\n      if (props.location.data.row.taskStatus === \"BOQ submitted\") {\r\n        taskObject = {\r\n          taskStatus: \"BOQ Verified_0\",\r\n        };\r\n        smsFetch(\r\n          props.location.data.row.approvalPath[1].assignedOfficer.mobileNo\r\n        );\r\n      } else if (\r\n        props.location.data.row.taskStatus === \"BOQ Verified_0\" &&\r\n        props.location.data.row.approvalPath.length === 4\r\n      ) {\r\n        taskObject = {\r\n          taskStatus: \"BOQ Verified_1\",\r\n        };\r\n        smsFetch(\r\n          props.location.data.row.approvalPath[2].assignedOfficer.mobileNo\r\n        );\r\n      } else if (\r\n        props.location.data.row.taskStatus === \"BOQ Verified_1\" ||\r\n        (props.location.data.row.taskStatus === \"BOQ Verified_0\" &&\r\n          props.location.data.row.approvalPath.length === 3)\r\n      ) {\r\n        taskObject = {\r\n          taskStatus: \"BOQ Verified_2\",\r\n        };\r\n        if (props.location.data.row.taskStatus === \"BOQ Verified_1\") {\r\n          smsFetch(\r\n            props.location.data.row.approvalPath[3].assignedOfficer.mobileNo\r\n          );\r\n        } else {\r\n          smsFetch(\r\n            props.location.data.row.approvalPath[2].assignedOfficer.mobileNo\r\n          );\r\n        }\r\n      }\r\n\r\n      // console.log(form.assignedMobitelOfficer)\r\n\r\n      axiosInstance\r\n        .put(\r\n          \"projonline/update/\" + props.location.data.row._id,\r\n          {\r\n            CapexPrAmount,\r\n            OpexPrAmount,\r\n            totalCost,\r\n            boqData,\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: taskObject.taskStatus,\r\n              comment: form.boqVerifiedComment,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          // console.log(props.location.data.row._id)\r\n          // console.log(\">>>>>>>>>>>>>>>>>\")\r\n          // console.log(boqData)\r\n          // console.log(\"CapexPrAmount=\" + CapexPrAmount)\r\n          // console.log(\"OpexPrAmount=\" + OpexPrAmount)\r\n          // console.log(\"totalCost=\" + totalCost)\r\n          // console.log(res.data)\r\n          // console.log(\">>>>>>>>>>>>>>>>>\")\r\n\r\n          setOpenDialog(true);\r\n\r\n          setTimeout(() => {\r\n            setAlart(res.data.alart);\r\n            setSeverity(res.data.severity);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            props.history.push({ pathname: \"/verifyBoqTasks\" });\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onReject = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrorsForReject();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      const taskObject = {\r\n        taskStatus: \"BOQ Rejected\",\r\n      };\r\n\r\n      // console.log(form.assignedMobitelOfficer)\r\n\r\n      axiosInstance\r\n        .put(\r\n          \"projonline/update/\" + props.location.data.row._id,\r\n          {\r\n            totalCost,\r\n            boqData,\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: \"BOQ Rejected\",\r\n              comment: form.boqVerifiedComment,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n\r\n          setOpenDialog(true);\r\n\r\n          setTimeout(() => {\r\n            setAlart(res.data.alart);\r\n            setSeverity(res.data.severity);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            props.history.push({ pathname: \"/verifyBoqTasks\" });\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Verify BOQ Task ID: {form.taskRef} </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <Form>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Site ID</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteID}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site ID\"\r\n                    isInvalid={!!errors.siteID}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteID}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Site Name</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteName}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site Name\"\r\n                    isInvalid={!!errors.siteName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"\"></Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Actual Work Commencement Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.actualTaskStartDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.actualTaskStartDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.actualTaskStartDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Actual Work Completed Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.actualTaskCompletedDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.actualTaskCompletedDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.actualTaskCompletedDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Division</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned Mobitel Officer</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    as=\"select\"\r\n                    value={form.assignedMobitelOfficer}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedMobitelOfficer}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedMobitelOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned subcontractor</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.assignedSubcon}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedSubcon}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {companies.map((opt) => (\r\n                      <option value={opt._id}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedSubcon}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>High level work scope</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.workScope}\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"\"\r\n                    isInvalid={!!errors.workScope}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.workScope}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n            </Form>\r\n            <MaterialTable\r\n              title={\"Verify BOQ-\" + form.siteID + \"_\" + form.taskRef}\r\n              data={boqData}\r\n              columns={columns}\r\n              icons={tableIcons}\r\n              editable={{\r\n                onRowUpdate: (updatedRow, oldRow) =>\r\n                  new Promise((resolve, reject) => {\r\n                    const index = oldRow.tableData.id;\r\n                    const updatedRows = [...boqData];\r\n\r\n                    // console.log(updatedRow.capexopexLine);\r\n\r\n                    // switch (updatedRow.itemCapexOpexType) {\r\n                    //     case \"Capex\":\r\n                    //         updatedRow.capexopex = \"Capex\";\r\n                    //         break;\r\n                    //     case \"Opex\":\r\n                    //         updatedRow.capexopex = \"Opex\";\r\n                    //         break;\r\n                    //     default:\r\n                    //         updatedRow.capexopex = \"\";\r\n                    // }\r\n                    updatedRow.itemTotal =\r\n                      updatedRow.itemRate * updatedRow.itemQty;\r\n                    updatedRows[index] = updatedRow;\r\n                    setTimeout(() => {\r\n                      setBoqData(updatedRows);\r\n                      resolve();\r\n                    }, 1000);\r\n                  }),\r\n              }}\r\n              options={{\r\n                exportButton: true,\r\n                pageSizeOptions: [boqData.length, 5, 10, 20],\r\n                // pageSizeOptions: [All,5, 10, 20], // On Test\r\n\r\n                paginationType: \"stepped\",\r\n                showTextRowsSelected: false,\r\n                actionsColumnIndex: -1,\r\n                filtering: false,\r\n                tableLayout: \"auto\",\r\n                rowStyle: {\r\n                  backgroundColor: \"#EEE\",\r\n                },\r\n                headerStyle: {\r\n                  backgroundColor: \"#01579b\",\r\n                  color: \"#FFF\",\r\n                },\r\n              }}\r\n              components={{\r\n                Pagination: (props) => (\r\n                  <>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        style={{ marginRight: \"8px\" }}\r\n                        onClick={handleAllCapexClick}\r\n                      >\r\n                        All Capex\r\n                      </Button>\r\n                      <Button variant=\"primary\" onClick={handleAllOpexClick}>\r\n                        All Opex\r\n                      </Button>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      container\r\n                      style={{ pading: 300, background: \"#f5f5f5\" }}\r\n                    >\r\n                      <Grid sm={9} item>\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          Capex Amount\r\n                        </Typography>\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          Opex Amount\r\n                        </Typography>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          fontWeight=\"bold\"\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          Total Amount\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid sm={3} align=\"center\">\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          {\"LKR \" +\r\n                            getBoqCapexTotal().toLocaleString(undefined, {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                        </Typography>\r\n                        {/* // Test Code */}\r\n                        {/* <Typography align='right' variant='subtitle1'>  \r\n                                                {\"LKR \" + (getBoqCapexTotal() ? getBoqCapexTotal() : boqData.CapexPrAmount)}\r\n                                                </Typography> */}\r\n\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          {\"LKR \" +\r\n                            getBoqOpexTotal().toLocaleString(undefined, {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                        </Typography>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          variant=\"subtitle1\"\r\n                          fontWeight=\"bold\"\r\n                        >\r\n                          {\"LKR \" +\r\n                            getBoqCapexOpexTotal().toLocaleString(undefined, {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <TablePagination {...props} />\r\n                  </>\r\n                ),\r\n              }}\r\n            ></MaterialTable>\r\n            <br />\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Approval History</Form.Label>\r\n                <div style={{ height: 250, width: \"100%\" }}>\r\n                  <DataGrid\r\n                    getRowId={(history) => history._id}\r\n                    rows={approvalHistory}\r\n                    columns={columns_AH}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    rowHeight={30}\r\n                    headerHeight={40}\r\n                  />\r\n                </div>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Comments</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    setField(\"boqVerifiedComment\", e.target.value)\r\n                  }\r\n                  as=\"textarea\"\r\n                  rows={2}\r\n                  value={form.boqVerifiedComment}\r\n                  placeholder=\"Enter your comments\"\r\n                  isInvalid={!!errors.boqVerifiedComment}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.boqVerifiedComment}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Button variant=\"warning\" onClick={onReject}>\r\n              Reject BOQ\r\n            </Button>{\" \"}\r\n            <Button variant=\"primary\" onClick={onAccept}>\r\n              BOQ Verified\r\n            </Button>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {alart}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(VerifyBoqSpecificTaskBody);\r\n"],"names":["rateCardData","BoQPopup","props","useState","filteredData","setFilteredData","rateCard","setRateCard","openPopup","setOpenPopup","selectedRows","setSelectedRows","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","filter","task","rateCardSubcon","_id","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","item","rateCardDiv","push","catch","err","console","log","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","handleRowsSelect","Array","isArray","length","callBk","row","includes","newData","map","tableData","checked","handleRowsSelectClose","dt","open","fullWidth","maxWidth","title","columns","field","cellStyle","width","minWidth","height","type","currencySetting","currencyCode","icons","onSelectionChange","rows","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","filtering","selection","tableLayout","selectionProps","rowStyle","backgroundColor","headerStyle","color","actions","icon","labelId","id","value","onChange","e","target","style","tooltip","isFreeAction","components","Pagination","container","pading","background","sm","align","variant","onClick","Alert","React","elevation","withRouter","users","setUsers","companies","setCompanies","boqData","setBoqData","totalCost","setTotalCost","setTotalCapexOpexCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","form","setForm","errors","setErrors","setOpen","openDialog","setOpenDialog","CapexPrAmount","setTotalCapexCost","OpexPrAmount","setTotalOpexCost","handleAllCapexClick","updatedData","capexopexLine","handleAllOpexClick","getBoqCapexOpexTotal","capexOpexTotal","i","itemTotal","getBoqCapexTotal","capexTotal","getBoqOpexTotal","opexTotal","name","location","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","actualTaskStartDate","taskHistory","find","x","taskStatus","performedDate","split","actualTaskCompletedDate","taskAssignedDiv","workScope","boqs","smsFetch","mobileNo","Body","username","password","from","to","text","mesageType","requestOptions","method","body","stringify","mode","fetch","handleClose","event","reason","className","as","Col","disabled","placeholder","isInvalid","controlId","defaultValue","opt","editable","lookup","Capex","Opex","onRowUpdate","updatedRow","oldRow","Promise","resolve","reject","index","updatedRows","itemRate","itemQty","setTimeout","justifyContent","marginRight","fontWeight","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getRowId","history","headerName","valueGetter","params","performedBy","pageSize","rowsPerPageOptions","rowHeight","headerHeight","boqVerifiedComment","preventDefault","newErrors","findFormErrorsForReject","Object","keys","put","taskObject","comment","pathname","error","findFormErrors","approvalPath","assignedOfficer","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display"],"sourceRoot":""}