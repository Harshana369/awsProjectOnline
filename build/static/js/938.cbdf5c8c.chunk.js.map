{"version":3,"file":"static/js/938.cbdf5c8c.chunk.js","mappings":"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","sources":["components/AllApprovedChangesBody.jsx","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Button, Modal, Form, Row, Col } from 'react-bootstrap';\n\n\nfunction AllApprovedChangesBody() {\n\n    let [items, setItems] = useState([])\n    let [item, setItem] = useState([])\n    let [properties, setProperties] = useState([])\n    let [headerProperties, setHeaderProperties] = useState([])\n\n\n    const handleChange = (e, index) => {\n        setProperties({ ...properties, [index]: e.target.value });\n    };\n\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = (row) => {\n        setItem(row)\n        setProperties(row.newProperties)\n        setHeaderProperties(row.headerProperties)\n        setShow(true);\n    }\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    const getData = () => {\n        axiosInstance.get('projonline/allhandoverchanges/all', {headers:{token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken}}).then(res => {\n            setItems(res.data)\n            console.log(res.data)\n            return\n        }).catch(err => {\n            console.log(err)\n        })\n    };\n\n    const columns = [\n        { field: 'taskRef', headerName: 'TaskID', width: 250 },\n        { field: 'siteID', headerName: 'SiteID', width: 150 },\n        { field: 'siteName', headerName: 'Site Name', width: 175 },\n        { field: 'project', headerName: 'Project', width: 250 },\n        { field: 'subProject', headerName: 'Sub Project', width: 250 },\n        {\n            field: \"All Approved Handover Changes\", width: 250, align: 'center',\n            renderCell: (cellValues) => {\n                return (\n                    <Button\n                        variant=\"primary\"\n                        style={{ width: 100 }}\n                        onClick={() => handleShow(cellValues.row)}\n                    >\n                        Show\n                    </Button>\n                );\n            }\n        }\n\n    ];\n\n    return (\n        <div>\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n\n                <div className=\"content-header\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>All Approved Handover Changes</h1>\n                                </div>\n                            </div>\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n\n                <div style={{ height: 610, width: '100%' }}>\n                    <DataGrid\n                        getRowId={(item) => item._id}\n                        rows={items}\n                        columns={columns}\n                        pageSize={15}\n                        rowsPerPageOptions={[15]}\n                        rowHeight={30}\n                        headerHeight={40}\n                        components={{ Toolbar: GridToolbar, }}\n                    />\n\n                </div>\n\n\n            </div>\n            <Modal show={show} onHide={handleClose} size=\"lg\" animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Handover</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleClose}>\n                        {\n                            headerProperties?.map((headerProperty, index) => {\n                                if (index < 3) {\n                                    return (\n                                        <Row>\n                                            <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\n                                                <Form.Label>{headerProperty}</Form.Label>\n                                                <Form.Control\n                                                    className='mr-1 ml-1'\n                                                    value={properties[index]}\n                                                    onChange={(e) => handleChange(e, index)}\n                                                    type=\"text\"\n                                                    readOnly\n                                                />\n                                            </Form.Group>\n                                        </Row>\n                                    )\n                                } else {\n                                    return (\n                                        <Row>\n                                            <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\n                                                <Form.Label>{headerProperty}</Form.Label>\n                                                <div className=\"d-flex flex-row\">\n                                                    <Form.Control\n                                                        className='mr-1 ml-1'\n                                                        value={item.existingProperties[index]}\n                                                        type=\"text\"\n                                                        readOnly\n                                                    />\n                                                    <Form.Control\n                                                        className={`mr-1 ml-1 ${item.existingProperties[index] != properties[index] ? 'text-danger' : \"\"}`}\n                                                        value={properties[index]}\n                                                        onChange={(e) => handleChange(e, index)}\n                                                        type=\"text\"\n                                                        readOnly\n                                                    />\n                                                </div>\n                                            </Form.Group>\n                                        </Row>\n                                    )\n                                }\n\n                            })}\n                        <Row>\n                            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\n                                <Form.Label>Reason for the change request</Form.Label>\n                                <Form.Control as=\"textarea\" rows={3} required value={item.comment} readonly />\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\n                                <Form.Label>Approve Comment</Form.Label>\n                                <Form.Control as=\"textarea\" rows={3} readonly value={item.approveComment}  />\n                            </Form.Group>\n                        </Row>\n                       \n                    </Form>\n                </Modal.Body>\n\n                \n            </Modal>\n\n           \n        </div>\n\n    );\n}\n\nexport default withRouter(AllApprovedChangesBody)","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["withRouter","useState","items","setItems","item","setItem","properties","setProperties","headerProperties","setHeaderProperties","handleChange","e","index","target","value","show","setShow","handleClose","axiosInstance","axios","baseURL","process","useEffect","getData","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","console","log","catch","err","columns","field","headerName","width","align","renderCell","cellValues","variant","style","onClick","row","newProperties","className","height","getRowId","_id","rows","pageSize","rowsPerPageOptions","rowHeight","headerHeight","components","Toolbar","GridToolbar","onHide","size","animation","closeButton","onSubmit","map","headerProperty","controlId","as","Col","onChange","type","readOnly","existingProperties","required","comment","readonly","approveComment","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","_excluded","DEVICE_SIZES","Row","React","_ref","ref","bsPrefix","noGutters","_ref$as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_extends","classNames","concat","displayName","defaultProps","_assertThisInitialized","self","ReferenceError","_iterableToArray","iter","Symbol","iterator","from","_toConsumableArray","arr","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}