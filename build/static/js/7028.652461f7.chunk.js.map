{"version":3,"file":"static/js/7028.652461f7.chunk.js","mappings":"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","sources":["components/BoQPopup.jsx","components/RaisePrSpecificTaskBody.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState, forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nlet rateCardData = [];\r\n\r\nexport default function BoQPopup(props) {\r\n  const [filteredData, setFilteredData] = useState(rateCardData);\r\n  const [rateCard, setRateCard] = useState(\"all\");\r\n  const { openPopup, setOpenPopup } = props;\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    rateCardData = [];\r\n    axiosInstance\r\n      .get(\"projonline/allRateCards\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        const filter = res.data.filter(\r\n          (task) =>\r\n            task.rateCardSubcon._id ===\r\n              JSON.parse(localStorage.getItem(\"user\")).company._id &&\r\n            task.rateCardValidTo >= props.acceptedDate &&\r\n            task.rateCardValidFrom <= props.acceptedDate\r\n        );\r\n        // console.log(filter)\r\n        filter.forEach((card) => {\r\n          card.rateCardItems.forEach((item) => {\r\n            item[\"rateCardDiv\"] = card.rateCardDiv;\r\n            rateCardData.push(item);\r\n          });\r\n        });\r\n\r\n        // console.log(rateCardData)\r\n        //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      cellStyle: { width: 400, minWidth: 400, maxWidth: 400, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      cellStyle: { width: 200, minWidth: 200, maxWidth: 200, height: 1 },\r\n    },\r\n  ];\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const handleRowsSelect = () => {\r\n    if (Array.isArray(selectedRows) && selectedRows.length) {\r\n      props.callBk(filteredData.filter((row) => selectedRows.includes(row)));\r\n    }\r\n\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleRowsSelectClose = () => {\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      rateCard === \"all\"\r\n        ? rateCardData\r\n        : rateCardData.filter((dt) => dt.rateCard === rateCard)\r\n    );\r\n  }, [rateCard]);\r\n\r\n  return (\r\n    <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n      <DialogContent>\r\n        <MaterialTable\r\n          title=\"BOQ Line Items\"\r\n          columns={columns}\r\n          data={filteredData}\r\n          icons={tableIcons}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          options={{\r\n            exportButton: true,\r\n            pageSizeOptions: [5, 10, 20],\r\n            paginationType: \"stepped\",\r\n            showTextRowsSelected: false,\r\n            actionsColumnIndex: -1,\r\n            filtering: true,\r\n            selection: true,\r\n            tableLayout: \"auto\",\r\n            selectionProps: {},\r\n            rowStyle: {\r\n              backgroundColor: \"#EEE\",\r\n            },\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              color: \"#FFF\",\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => (\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={rateCard}\r\n                  onChange={(e) => setRateCard(e.target.value)}\r\n                  style={{ width: 100 }}\r\n                >\r\n                  <MenuItem value={\"all\"}>\r\n                    <em>All</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                  <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                  <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                </Select>\r\n              ),\r\n              tooltip: \"Select Rate Card\",\r\n              isFreeAction: true,\r\n            },\r\n          ]}\r\n          components={{\r\n            Pagination: (props) => (\r\n              <div>\r\n                <Grid container style={{ pading: 15, background: \"#f5f5f5\" }}>\r\n                  <Grid sm={11} align=\"right\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        onClick={handleRowsSelect}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                  <Grid sm={1} align=\"center\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        onClick={handleRowsSelectClose}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                </Grid>\r\n                <TablePagination {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MaterialTable, { MTablePagination } from \"material-table\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\nimport BoQPopup from \"./BoQPopup\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction RaisePrSpecificTaskBody(props) {\r\n  let [users, setUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [boqData, setBoqData] = useState([]);\r\n  const [totalCost, setTotalCost] = useState();\r\n  const [approvalHistory, setApproalHistory] = useState([]);\r\n  let [severity, setSeverity] = useState(\"\");\r\n  let [alart, setAlart] = useState(\"\");\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  const [CapexPrAmount, setTotalCapexCost] = useState(0);\r\n  const [OpexPrAmount, setTotalOpexCost] = useState(0);\r\n\r\n  // Test Code to default capex opex\r\n  const [capexOpexDefaultValue, setCapexOpexDefaultValue] =\r\n    useState(\"Choose...\");\r\n\r\n  useEffect(() => {\r\n    if (CapexPrAmount > 0 && OpexPrAmount === 0) {\r\n      setCapexOpexDefaultValue(\"Copex\");\r\n    } else if (OpexPrAmount > 0 && CapexPrAmount === 0) {\r\n      setCapexOpexDefaultValue(\"Opex\");\r\n    } else if (CapexPrAmount > 0 && OpexPrAmount > 0) {\r\n      setCapexOpexDefaultValue(\"Capex+Opex\");\r\n    } else if (\r\n      (!OpexPrAmount || OpexPrAmount === \"\") &&\r\n      (!CapexPrAmount || CapexPrAmount === \"\")\r\n    ) {\r\n      setCapexOpexDefaultValue(form.capexopex);\r\n      // setCapexOpexDefaultValue(\"Oooops\");\r\n    }\r\n  }, [CapexPrAmount, OpexPrAmount]);\r\n\r\n  // console.log(\">>>>>\")\r\n  // console.log(\"capexOpexDefaultValue=\"+ capexOpexDefaultValue)\r\n  // console.log(\"capexopex=\"+form.capexopex)\r\n  // console.log(\"CapexPrAmount=\"+CapexPrAmount)\r\n  // console.log(\"OpexPrAmount=\"+OpexPrAmount)\r\n  // console.log(\">>>>>\")\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { comment, PRnumber, capexopex, budgetCodeCapex, budgetCodeOpex } =\r\n      form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!comment || comment === \"\") newErrors.comment = \"cannot be blank!\";\r\n    if (!PRnumber || PRnumber === \"\") newErrors.PRnumber = \"cannot be blank!\";\r\n    if (\r\n      capexOpexDefaultValue === \"Copex\" &&\r\n      (!budgetCodeCapex || budgetCodeCapex === \"\")\r\n    )\r\n      newErrors.budgetCodeCapex = \"cannot be blank!\";\r\n    if (\r\n      capexOpexDefaultValue === \"Opex\" &&\r\n      (!budgetCodeOpex || budgetCodeOpex === \"\")\r\n    )\r\n      newErrors.budgetCodeOpex = \"cannot be blank!\";\r\n    if (\r\n      capexOpexDefaultValue === \"Capex+Opex\" &&\r\n      (!budgetCodeCapex || budgetCodeCapex === \"\")\r\n    )\r\n      newErrors.budgetCodeCapex = \"cannot be blank!\";\r\n    if (\r\n      capexOpexDefaultValue === \"Capex+Opex\" &&\r\n      (!budgetCodeOpex || budgetCodeOpex === \"\")\r\n    )\r\n      newErrors.budgetCodeOpex = \"cannot be blank!\";\r\n\r\n    if (\r\n      (!form.capexopex || form.capexopex === \"\") &&\r\n      (!capexOpexDefaultValue || capexOpexDefaultValue === \"\")\r\n    )\r\n      newErrors.capexopex = \"cannot be blank!\";\r\n\r\n    if (\r\n      form.capexopex === \"Copex\" &&\r\n      (!budgetCodeCapex || budgetCodeCapex === \"\")\r\n    )\r\n      newErrors.budgetCodeCapex = \"cannot be blank!\";\r\n    if (form.capexopex === \"Opex\" && (!budgetCodeOpex || budgetCodeOpex === \"\"))\r\n      newErrors.budgetCodeOpex = \"cannot be blank!\";\r\n\r\n    if (\r\n      form.capexopex === \"Capex+Opex\" &&\r\n      (!budgetCodeCapex || budgetCodeCapex === \"\")\r\n    )\r\n      newErrors.budgetCodeCapex = \"cannot be blank!\";\r\n    if (\r\n      form.capexopex === \"Capex+Opex\" &&\r\n      (!budgetCodeOpex || budgetCodeOpex === \"\")\r\n    )\r\n      newErrors.budgetCodeOpex = \"cannot be blank!\";\r\n\r\n    if (form.capexopex === \"Opex\" && Number(form.OpexPrAmount) !== totalCost)\r\n      newErrors.OpexPrAmount = \"Check Opex PR Amount!\";\r\n    if (form.capexopex === \"Copex\" && Number(form.CapexPrAmount) !== totalCost)\r\n      newErrors.CapexPrAmount = \"Check Capex PR Amount!\";\r\n    if (\r\n      form.capexopex === \"Capex+Opex\" &&\r\n      Number(form.CapexPrAmount) + Number(form.OpexPrAmount) !== totalCost\r\n    )\r\n      newErrors.CapexPrAmount = \"Check Capex & Opex PR Amounts!\";\r\n    if (\r\n      form.capexopex === \"Capex+Opex\" &&\r\n      Number(form.CapexPrAmount) + Number(form.OpexPrAmount) !== totalCost\r\n    )\r\n      newErrors.OpexPrAmount = \"Check Capex & Opex PR Amounts!\";\r\n\r\n    // console.log(\"CAP>>\"+form.CapexPrAmount)\r\n    // console.log(\"OPE>>\"+form.OpexPrAmount)\r\n    // console.log(\"TOT>>\"+totalCost)\r\n    // console.log(\"Cal=\"+(Number(form.CapexPrAmount)+Number(form.OpexPrAmount)))\r\n\r\n    // if ((capexopex===\"Copex\")&&(!budgetCodeCapex || budgetCodeCapex === '')) newErrors.budgetCodeCapex = 'cannot be blank!' //\r\n    // // if ((capexopex===\"Copex\")&&(!CapexPrAmount || CapexPrAmount === '')) newErrors.CapexPrAmount = 'cannot be blank!'\r\n    // if ((capexopex===\"Opex\")&&(!budgetCodeOpex || budgetCodeOpex === '')) newErrors.budgetCodeOpex = 'cannot be blank!'  //\r\n    // // if ((capexopex===\"Opex\")&&(!OpexPrAmount || OpexPrAmount === '')) newErrors.OpexPrAmount = 'cannot be blank!'\r\n\r\n    // // if ((capexopex===\"Capex+Opex\")&&(!CapexPrAmount || CapexPrAmount === '')) newErrors.CapexPrAmount = 'cannot be blank!'\r\n    // if ((capexopex===\"Capex+Opex\")&&(!budgetCodeCapex || budgetCodeCapex === '')) newErrors.budgetCodeCapex = 'cannot be blank!' //\r\n    // // if ((capexopex===\"Capex+Opex\")&&(!OpexPrAmount || OpexPrAmount === '')) newErrors.OpexPrAmount = 'cannot be blank!'\r\n    // if ((capexopex===\"Capex+Opex\")&&(!budgetCodeOpex || budgetCodeOpex === '')) newErrors.budgetCodeOpex = 'cannot be blank!'  //\r\n\r\n    // if (CapexPrAmount+OpexPrAmount!==totalCost)newErrors.CapexPrAmount = 'Capex + Opex must be equel to Total Value'\r\n    // if (CapexPrAmount+OpexPrAmount!==totalCost)newErrors.OpexPrAmount = 'Capex + Opex must be equel to Total Value'\r\n    return newErrors;\r\n  };\r\n\r\n  // Disable unwanted data forms according to the default capex/opex category\r\n  if (CapexPrAmount > 0 && OpexPrAmount === 0) {\r\n    document.getElementById(\"txtCapOpe\").disabled = true;\r\n    document.getElementById(\"txtOpeBud\").disabled = true;\r\n    document.getElementById(\"txtOpeAmo\").disabled = true;\r\n    // document.getElementById('txtCapAmo').disabled = true;\r\n  }\r\n  if (CapexPrAmount === 0 && OpexPrAmount > 0) {\r\n    document.getElementById(\"txtCapOpe\").disabled = true;\r\n    document.getElementById(\"txtCapBud\").disabled = true;\r\n    document.getElementById(\"txtCapAmo\").disabled = true;\r\n    // document.getElementById('txtOpeAmo').disabled = true;\r\n  }\r\n  if (CapexPrAmount > 0 && OpexPrAmount > 0) {\r\n    document.getElementById(\"txtCapOpe\").disabled = true;\r\n    // document.getElementById('txtOpeAmo').disabled = true;\r\n    // document.getElementById('txtCapAmo').disabled = true;\r\n  }\r\n  // Disable unwanted data forms according to the Capex/Opex selection\r\n  if (form.capexopex === \"Copex\") {\r\n    document.getElementById(\"txtOpeBud\").disabled = true;\r\n    document.getElementById(\"txtOpeAmo\").disabled = true;\r\n    document.getElementById(\"txtCapBud\").disabled = false;\r\n    document.getElementById(\"txtCapAmo\").disabled = false;\r\n  }\r\n  if (form.capexopex === \"Opex\") {\r\n    document.getElementById(\"txtOpeBud\").disabled = false;\r\n    document.getElementById(\"txtOpeAmo\").disabled = false;\r\n    document.getElementById(\"txtCapBud\").disabled = true;\r\n    document.getElementById(\"txtCapAmo\").disabled = true;\r\n  }\r\n  if (form.capexopex === \"Capex+Opex\") {\r\n    document.getElementById(\"txtOpeBud\").disabled = false;\r\n    document.getElementById(\"txtOpeAmo\").disabled = false;\r\n    document.getElementById(\"txtCapBud\").disabled = false;\r\n    document.getElementById(\"txtCapAmo\").disabled = false;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      filtering: false,\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      filtering: false,\r\n      editable: false,\r\n      cellStyle: { width: 300, minWidth: 300, maxWidth: 300, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      editable: false,\r\n      cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      editable: false,\r\n      filtering: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Quantity\",\r\n      field: \"itemQty\",\r\n      editable: false,\r\n      cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Total\",\r\n      field: \"itemTotal\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      editable: false,\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Capex/Opex\",\r\n      field: \"capexopexLine\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n      editable: false,\r\n    }, // Running Code\r\n    {\r\n      title: \"Comment\",\r\n      field: \"itemComment\",\r\n      editable: \"onUpdate\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n  ];\r\n\r\n  //Approal History download table\r\n  const columns_AH = [\r\n    { field: \"taskStatus\", headerName: \"Status\", width: 250 },\r\n    {\r\n      field: \"performedDate\",\r\n      headerName: \"Performed Date\",\r\n      width: 200,\r\n      valueGetter: (params) => params.row.performedDate.split(\"T\")[0],\r\n    },\r\n    {\r\n      field: \"performedBy\",\r\n      headerName: \"Performed by\",\r\n      width: 200,\r\n      valueGetter: (params) => params.row.performedBy.name,\r\n    },\r\n    { field: \"comment\", headerName: \"Comment\", width: 500 },\r\n  ];\r\n\r\n  const columns_PDF_SITEDATA = [\r\n    { dataKey: \"siteID\", header: \"Site ID\" },\r\n    { dataKey: \"siteName\", header: \"Site Name\" },\r\n    { dataKey: \"assignedMobitelOfficer\", header: \"Assinged Mobitel officer\" },\r\n    { dataKey: \"assignedSubcon\", header: \"Assigned Subcon\" },\r\n  ];\r\n\r\n  const columns_PDF_APPROVAL = [\r\n    { dataKey: \"taskStatus\", header: \"Status\" },\r\n    { dataKey: \"performedDate\", header: \"Performed Date\" },\r\n    { dataKey: \"performedBy\", header: \"Performed by\" },\r\n    { dataKey: \"comment\", header: \"Comment\" },\r\n  ];\r\n\r\n  const columns_PDF_BOQ = [\r\n    { header: \"ERP Code\", dataKey: \"erpCode\" },\r\n    { header: \"Rate Card Div\", dataKey: \"rateCardDiv\" },\r\n    { header: \"Item Discreption\", dataKey: \"itemDiscreption\" },\r\n    { header: \"UoM\", dataKey: \"itemUom\" },\r\n    { header: \"Unit Rate\", dataKey: \"itemRate\" },\r\n    { header: \"Quantity\", dataKey: \"itemQty\" },\r\n    { header: \"Item Total\", dataKey: \"itemTotal\" },\r\n    { header: \"Capex/Opex\", dataKey: \"capexopexLine\" },\r\n    { header: \"Comment\", dataKey: \"itemComment\" },\r\n  ];\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // console.log(props)\r\n    if (!props.location.data) {\r\n      history.push(\"/raisePrTasks\");\r\n    } else {\r\n      // console.log(props.location.data.row)\r\n      setUsers([{ name: props.location.data.assignedMobitelOfficer.name }]);\r\n      setCompanies([\r\n        { companyName: props.location.data.assignedSubcon.companyName },\r\n      ]);\r\n      setForm({\r\n        taskRef: props.location.data.taskRef,\r\n        siteID: props.location.data.siteID,\r\n        siteName: props.location.data.siteName,\r\n        actualTaskStartDate: props.location.data.taskHistory\r\n          .find((x) => x.taskStatus === \"Task commenced\")\r\n          .performedDate.split(\"T\")[0],\r\n        actualTaskCompletedDate: props.location.data.taskHistory\r\n          .find((x) => x.taskStatus === \"Task completed\")\r\n          .performedDate.split(\"T\")[0],\r\n        taskAssignedDiv: props.location.data.taskAssignedDiv,\r\n        assignedMobitelOfficer: props.location.data.assignedMobitelOfficer.name,\r\n        workScope: props.location.data.workScope,\r\n        assignedSubcon: props.location.data.assignedSubcon.companyName,\r\n        verificationOneId: props.location.data.approvalPath[0].name,\r\n        verificationTwoId: props.location.data.approvalPath[1].name,\r\n        approvalId: props.location.data.approvalPath[2].name,\r\n      });\r\n\r\n      setBoqData(\r\n        props.location.data.boqs[props.location.data.boqs.length - 1].boqData\r\n      );\r\n      setTotalCost(\r\n        props.location.data.boqs[props.location.data.boqs.length - 1].totalCost\r\n      );\r\n      setApproalHistory(\r\n        props.location.data.taskHistory.filter(\r\n          (e) =>\r\n            e.taskStatus === \"BOQ Verified_0\" ||\r\n            e.taskStatus === \"BOQ Verified_1\" ||\r\n            e.taskStatus === \"BOQ Verified_2\" ||\r\n            e.taskStatus === \"BOQ Approved\" ||\r\n            e.taskStatus === \"BOQ submitted\" ||\r\n            e.taskStatus === \"BOQ Rejected\"\r\n        )\r\n      );\r\n\r\n      // to set capex/opex amounts from backend\r\n      setTotalCapexCost(\r\n        props.location.data.boqs[props.location.data.boqs.length - 1]\r\n          .CapexPrAmount\r\n      );\r\n      setTotalOpexCost(\r\n        props.location.data.boqs[props.location.data.boqs.length - 1]\r\n          .OpexPrAmount\r\n      );\r\n\r\n      // console.log(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].totalCost)\r\n    }\r\n  }, []);\r\n\r\n  const onAccept = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      let taskObject = {\r\n        taskStatus: \"PR Raised\",\r\n        PRnumber: form.PRnumber,\r\n        capexopex: form.capexopex || capexOpexDefaultValue,\r\n        budgetCodeCapex: form.budgetCodeCapex,\r\n        budgetCodeOpex: form.budgetCodeOpex,\r\n        CapexPrAmount: form.CapexPrAmount || CapexPrAmount,\r\n        OpexPrAmount: form.OpexPrAmount || OpexPrAmount,\r\n        totalCost: totalCost,\r\n      };\r\n      // console.log(form.assignedMobitelOfficer)\r\n      // console.log(\"PRnumber=\"+form.PRnumber)\r\n      // console.log(\"capexopex=\"+form.capexopex)\r\n      // console.log(\"budgetCodeCapex=\"+form.budgetCodeCapex)\r\n      // console.log(\"budgetCodeOpex=\"+form.budgetCodeOpex)\r\n      // console.log(\"form.CapexPrAmount=\"+form.CapexPrAmount)\r\n      // console.log(\"form.OpexPrAmount=\"+form.OpexPrAmount)\r\n      // console.log(\"CapexPrAmount=\"+CapexPrAmount)\r\n      // console.log(\"OpexPrAmount=\"+OpexPrAmount)\r\n      // console.log(\"|CAP|\"+ form.CapexPrAmount || CapexPrAmount)\r\n      // console.log(\"|OPE|\"+ form.OpexPrAmount || OpexPrAmount)\r\n\r\n      axiosInstance\r\n        .put(\r\n          \"projonline/update/\" + props.location.data.row._id,\r\n          {\r\n            totalCost,\r\n            boqData,\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: taskObject.taskStatus,\r\n              comment: form.comment,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n\r\n          setOpenDialog(true);\r\n\r\n          setTimeout(() => {\r\n            setAlart(res.data.alart);\r\n            setSeverity(res.data.severity);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            props.history.push({ pathname: \"/raisePrTasks\" });\r\n          }, 2000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Raise PR Task ID: {form.taskRef} </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <Form>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Site ID</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteID}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site ID\"\r\n                    isInvalid={!!errors.siteID}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteID}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Site Name</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteName}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site Name\"\r\n                    isInvalid={!!errors.siteName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"\"></Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Actual Work Commencement Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.actualTaskStartDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.actualTaskStartDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.actualTaskStartDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Actual Work Completed Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.actualTaskCompletedDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.actualTaskCompletedDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.actualTaskCompletedDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Division</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned Mobitel Officer</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    as=\"select\"\r\n                    value={form.assignedMobitelOfficer}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedMobitelOfficer}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedMobitelOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned subcontractor</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.assignedSubcon}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedSubcon}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {companies.map((opt) => (\r\n                      <option value={opt._id}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedSubcon}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>High level work scope</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.workScope}\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"\"\r\n                    isInvalid={!!errors.workScope}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.workScope}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n            </Form>\r\n\r\n            <MaterialTable\r\n              // title='Raise PR'\r\n              title={\"Raise PR-\" + form.siteID + \"_\" + form.taskRef}\r\n              data={boqData}\r\n              columns={columns}\r\n              icons={tableIcons}\r\n              editable={{\r\n                onRowUpdate: (updatedRow, oldRow) =>\r\n                  new Promise((resolve, reject) => {\r\n                    const index = oldRow.tableData.id;\r\n                    const updatedRows = [...boqData];\r\n                    updatedRow.itemTotal =\r\n                      updatedRow.itemRate * updatedRow.itemQty;\r\n                    updatedRows[index] = updatedRow;\r\n                    setTimeout(() => {\r\n                      setBoqData(updatedRows);\r\n                      resolve();\r\n                    }, 2000);\r\n                  }),\r\n              }}\r\n              options={{\r\n                exportButton: true,\r\n                pageSizeOptions: [boqData.length, 5, 10, 20],\r\n                paginationType: \"stepped\",\r\n                showTextRowsSelected: false,\r\n                actionsColumnIndex: -1,\r\n                filtering: false,\r\n                tableLayout: \"auto\",\r\n                rowStyle: {\r\n                  backgroundColor: \"#EEE\",\r\n                },\r\n                headerStyle: {\r\n                  backgroundColor: \"#01579b\",\r\n                  color: \"#FFF\",\r\n                },\r\n\r\n                exportPdf: (columns, data) => {\r\n                  const doc = new jsPDF({\r\n                    orientation: \"landscape\",\r\n                  });\r\n\r\n                  autoTable(doc, {\r\n                    head: [[\"Task ID : \" + form.taskRef]],\r\n                  });\r\n                  autoTable(doc, {\r\n                    theme: \"grid\",\r\n                    head: [\r\n                      [\r\n                        \"Site ID\",\r\n                        \"Site Name\",\r\n                        \"Assigned Mobitel Officer\",\r\n                        \"Assigned Subcon\",\r\n                        \"Capex Amount\",\r\n                        \"Opex Amount\",\r\n                        \"Total Value\",\r\n                      ],\r\n                    ],\r\n                    body: [\r\n                      [\r\n                        form.siteID,\r\n                        form.siteName,\r\n                        form.assignedMobitelOfficer,\r\n                        form.assignedSubcon,\r\n                        !CapexPrAmount || CapexPrAmount === \"\"\r\n                          ? \"Not Defined\"\r\n                          : CapexPrAmount.toLocaleString(\"en-US\", {\r\n                              style: \"currency\",\r\n                              currency: \"LKR\",\r\n                            }),\r\n                        !OpexPrAmount || OpexPrAmount === \"\"\r\n                          ? \"Not Defined\"\r\n                          : OpexPrAmount.toLocaleString(\"en-US\", {\r\n                              style: \"currency\",\r\n                              currency: \"LKR\",\r\n                            }),\r\n                        totalCost.toLocaleString(\"en-US\", {\r\n                          style: \"currency\",\r\n                          currency: \"LKR\",\r\n                        }),\r\n                      ],\r\n                    ],\r\n                  });\r\n\r\n                  autoTable(doc, {\r\n                    head: [[\"BOQ\"]],\r\n                  });\r\n\r\n                  autoTable(doc, {\r\n                    theme: \"grid\",\r\n                    columnStyles: {\r\n                      itemRate: { halign: \"right\" },\r\n                      itemTotal: { halign: \"right\" },\r\n                    },\r\n                    columns: columns_PDF_BOQ,\r\n                    body: data,\r\n                  });\r\n\r\n                  autoTable(doc, {\r\n                    head: [[\"Approval Hirarchy\"]],\r\n                  });\r\n                  autoTable(doc, {\r\n                    theme: \"grid\",\r\n                    columns: columns_PDF_APPROVAL,\r\n                    body: approvalHistory.map((obj) => ({\r\n                      ...obj,\r\n                      performedBy: obj.performedBy.name,\r\n                    })),\r\n                  });\r\n\r\n                  const today = new Date();\r\n                  const formattedDate = `${today.getFullYear()}${(\r\n                    today.getMonth() + 1\r\n                  )\r\n                    .toString()\r\n                    .padStart(2, \"0\")}${today\r\n                    .getDate()\r\n                    .toString()\r\n                    .padStart(2, \"0\")}`;\r\n                  // doc.save(\"BOQ_\"+form.taskRef+\".pdf\"); // Define download PDF Name- Test\r\n                  // doc.save(`BOQ_${form.taskRef}_${formattedDate}.pdf`);  // Define download PDF Name- Test\r\n                  doc.save(\r\n                    `BOQ_${form.taskRef}_${`${new Date().getFullYear()}${(\r\n                      new Date().getMonth() + 1\r\n                    )\r\n                      .toString()\r\n                      .padStart(2, \"0\")}${new Date()\r\n                      .getDate()\r\n                      .toString()\r\n                      .padStart(2, \"0\")}`}.pdf`\r\n                  );\r\n                  // console.log(`BOQ_${form.taskRef}_${`${new Date().getFullYear()}${(new Date().getMonth() + 1).toString().padStart(2, '0')}${new Date().getDate().toString().padStart(2, '0')}`}.pdf`);\r\n                },\r\n              }}\r\n              components={{\r\n                Pagination: (props) => (\r\n                  <>\r\n                    <Grid\r\n                      container\r\n                      style={{ pading: 300, background: \"#f5f5f5\" }}\r\n                    >\r\n                      <Grid sm={9} item>\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          Capex Amount\r\n                        </Typography>\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          Opex Amount\r\n                        </Typography>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          fontWeight=\"bold\"\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          Total Amount\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid sm={3} align=\"center\">\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          {CapexPrAmount\r\n                            ? \"LKR \" + parseFloat(CapexPrAmount)\r\n                            : \"LKR 0.00\"}\r\n                        </Typography>\r\n                        <Typography align=\"right\" variant=\"subtitle1\">\r\n                          {OpexPrAmount\r\n                            ? \"LKR \" + parseFloat(OpexPrAmount)\r\n                            : \"LKR 0.00\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          fontWeight=\"bold\"\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          {\"LKR \" + totalCost}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <TablePagination {...props} />\r\n                  </>\r\n                ),\r\n              }}\r\n            ></MaterialTable>\r\n            <br />\r\n\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Approval History</Form.Label>\r\n                <div style={{ height: 250, width: \"100%\" }}>\r\n                  <DataGrid\r\n                    getRowId={(history) => history._id}\r\n                    rows={approvalHistory}\r\n                    columns={columns_AH}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    rowHeight={30}\r\n                    headerHeight={40}\r\n                  />\r\n                </div>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>PR Number</Form.Label>\r\n                <Form.Control\r\n                  value={form.PRnumber}\r\n                  onChange={(e) => setField(\"PRnumber\", e.target.value)}\r\n                  type=\"text\"\r\n                  rows={2}\r\n                  placeholder=\"Enter PR Number\"\r\n                  isInvalid={!!errors.PRnumber}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.PRnumber}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Capex or Opex</Form.Label>\r\n                {/* <Form.Control id=\"txtCapOpe\" value={form.capexopex} onChange={e => setField('capexopex', e.target.value)} as=\"select\" isInvalid={!!errors.capexopex}>\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"Copex\">Capex</option>\r\n                                    <option value=\"Opex\">Opex</option>\r\n                                    <option value=\"Capex+Opex\">Capex + Opex</option>\r\n                                </Form.Control>                                                      */}\r\n\r\n                <Form.Control\r\n                  id=\"txtCapOpe\"\r\n                  value={capexOpexDefaultValue}\r\n                  onChange={(e) => setField(\"capexopex\", e.target.value)}\r\n                  as=\"select\"\r\n                  isInvalid={!!errors.capexopex}\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  <option value=\"Copex\">Capex</option>\r\n                  <option value=\"Opex\">Opex</option>\r\n                  <option value=\"Capex+Opex\">Capex + Opex</option>\r\n                </Form.Control>\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.capexopex}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col}></Form.Group>\r\n              <Form.Group as={Col}></Form.Group>\r\n            </Row>\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Capex Budget Code</Form.Label>\r\n                <Form.Control\r\n                  id=\"txtCapBud\"\r\n                  value={form.budgetCodeCapex}\r\n                  onChange={(e) => setField(\"budgetCodeCapex\", e.target.value)}\r\n                  type=\"text\"\r\n                  rows={1}\r\n                  placeholder=\"Enter Capex Budget Code\"\r\n                  isInvalid={!!errors.budgetCodeCapex}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.budgetCodeCapex}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Capex Amount</Form.Label>\r\n                <Form.Control\r\n                  id=\"txtCapAmo\"\r\n                  value={CapexPrAmount}\r\n                  onChange={(e) => setField(\"CapexPrAmount\", e.target.value)}\r\n                  type=\"text\"\r\n                  rows={1}\r\n                  placeholder=\"Enter Capex Amount\"\r\n                  isInvalid={!!errors.CapexPrAmount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.CapexPrAmount}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Opex Budget Code</Form.Label>\r\n                <Form.Control\r\n                  id=\"txtOpeBud\"\r\n                  value={form.budgetCodeOpex}\r\n                  onChange={(e) => setField(\"budgetCodeOpex\", e.target.value)}\r\n                  type=\"text\"\r\n                  rows={1}\r\n                  placeholder=\"Enter Opex Budget Code\"\r\n                  isInvalid={!!errors.budgetCodeOpex}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.budgetCodeOpex}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Opex Amount</Form.Label>\r\n                <Form.Control\r\n                  id=\"txtOpeAmo\"\r\n                  value={OpexPrAmount}\r\n                  onChange={(e) => setField(\"OpexPrAmount\", e.target.value)}\r\n                  type=\"text\"\r\n                  rows={1}\r\n                  placeholder=\"Enter Opex Amount\"\r\n                  isInvalid={!!errors.OpexPrAmount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.OpexPrAmount}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              {/* <Form.Group as={Col} >                    // Previous Code\r\n                                <Form.Label>Opex Budget Code</Form.Label>\r\n                                <Form.Control value={form.budgetCode} onChange={e => setField('budgetCode', e.target.value)} type=\"text\" rows={1} placeholder=\"Enter Opex Budget Code\" isInvalid={!!errors.budgetCode} />\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                    {errors.budgetCode}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group> */}\r\n            </Row>\r\n\r\n            <Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Comments</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => setField(\"comment\", e.target.value)}\r\n                  as=\"textarea\"\r\n                  rows={2}\r\n                  value={form.comment}\r\n                  placeholder=\"Enter your comments\"\r\n                  isInvalid={!!errors.comment}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.comment}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Button variant=\"primary\" onClick={onAccept}>\r\n              PR Raised\r\n            </Button>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {alart}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RaisePrSpecificTaskBody);\r\n"],"names":["rateCardData","BoQPopup","props","filteredData","setFilteredData","useState","rateCard","setRateCard","openPopup","setOpenPopup","selectedRows","setSelectedRows","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","filter","task","rateCardSubcon","_id","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","item","rateCardDiv","push","catch","err","console","log","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","handleRowsSelect","Array","isArray","length","callBk","row","includes","newData","map","tableData","checked","handleRowsSelectClose","dt","open","fullWidth","maxWidth","title","columns","field","cellStyle","width","minWidth","height","type","currencySetting","currencyCode","icons","onSelectionChange","rows","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","filtering","selection","tableLayout","selectionProps","rowStyle","backgroundColor","headerStyle","color","actions","icon","labelId","id","value","onChange","e","target","style","tooltip","isFreeAction","components","Pagination","container","pading","background","sm","align","variant","onClick","Alert","React","elevation","withRouter","users","setUsers","companies","setCompanies","boqData","setBoqData","totalCost","setTotalCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","form","setForm","errors","setErrors","setOpen","openDialog","setOpenDialog","setField","CapexPrAmount","setTotalCapexCost","OpexPrAmount","setTotalOpexCost","capexOpexDefaultValue","setCapexOpexDefaultValue","capexopex","document","getElementById","disabled","columns_PDF_APPROVAL","dataKey","header","columns_PDF_BOQ","history","useHistory","location","name","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","actualTaskStartDate","taskHistory","find","x","taskStatus","performedDate","split","actualTaskCompletedDate","taskAssignedDiv","workScope","verificationOneId","approvalPath","verificationTwoId","approvalId","boqs","handleClose","event","reason","className","as","Col","placeholder","isInvalid","controlId","defaultValue","opt","editable","onRowUpdate","updatedRow","oldRow","Promise","resolve","reject","index","updatedRows","itemTotal","itemRate","itemQty","setTimeout","exportPdf","doc","jsPDF","orientation","autoTable","head","theme","body","toLocaleString","currency","columnStyles","halign","obj","performedBy","today","Date","getFullYear","getMonth","toString","padStart","getDate","save","fontWeight","parseFloat","getRowId","headerName","valueGetter","params","pageSize","rowsPerPageOptions","rowHeight","headerHeight","PRnumber","budgetCodeCapex","budgetCodeOpex","comment","preventDefault","newErrors","Number","findFormErrors","Object","keys","taskObject","put","pathname","error","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display"],"sourceRoot":""}