{"version":3,"file":"static/js/385.1be926f1.chunk.js","mappings":"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","sources":["components/ModifySpecificTaskBody.jsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction ModifySpecificTaskBody(props) {\r\n  let [users, setUsers] = useState([]);\r\n  let [subconUsers, setSubconUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [approvalPath, setApprovalPath] = useState([]);\r\n  let [verificationOne, setVerificationOne] = useState([]);\r\n  let [verificationTwo, setVerificationTwo] = useState([]);\r\n  let [approval, setApproval] = useState([]);\r\n  let [msg, setMsg] = useState(\"\");\r\n  let [variant, setVariant] = useState(\"\");\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [tasks, setTasks] = useState([]);\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  let [selectedUserName, setSelectedUserName] = useState(\"\");\r\n\r\n  // Dissable Task Status Change if task already completed>>\r\n\r\n  const selectedObj = [];\r\n  const findFormErrors3 = () => {\r\n    const { boqApprovalRequirment } = form;\r\n    const newErrors = {};\r\n    if (\r\n      !boqApprovalRequirment ||\r\n      boqApprovalRequirment === \"\" ||\r\n      boqApprovalRequirment === \"Choose...\"\r\n    )\r\n      newErrors.boqApprovalRequirment = \"Choose a Boq status\";\r\n    return newErrors;\r\n  };\r\n\r\n  const updateBoq = async (e) => {\r\n    const newErrors = findFormErrors3();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      e.preventDefault();\r\n      setOpenDialog(true);\r\n\r\n      const boqValue = form.boqApprovalRequirment;\r\n      try {\r\n        const res = await axiosInstance.put(\r\n          `projonline/boqProjectRequirement/${boqValue}`,\r\n          tasks,\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        setTimeout(() => {\r\n          setMsg(res.data.msg);\r\n          setVariant(res.data.variant);\r\n          setOpen(true);\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          props.history.push({ pathname: \"/modifyTask\" });\r\n        }, 2000);\r\n      } catch (error) {\r\n        setMsg(\"Error updating BOQ\");\r\n        console.error(\"Error updating BOQ:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  const findFormErrors = () => {\r\n    const { assignedMobitelOfficer } = form;\r\n    const newErrors = {};\r\n    if (\r\n      !assignedMobitelOfficer ||\r\n      assignedMobitelOfficer === \"\" ||\r\n      assignedMobitelOfficer === \"Choose...\"\r\n    )\r\n      newErrors.assignedMobitelOfficer = \"Choose a Mobitel Officer!\";\r\n    return newErrors;\r\n  };\r\n  const findFormErrors2 = () => {\r\n    const { taskStatus } = form;\r\n    const newErrors = {};\r\n    if (!taskStatus || taskStatus === \"\" || taskStatus === \"Choose...\")\r\n      newErrors.taskStatus = \"Choose a task status\";\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setTasks(props.location.data);\r\n        setSubconUsers(\r\n          res.data.users.filter((obj) => obj.company.companyName !== \"Mobitel\")\r\n        );\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj[\"userCanAssignForTask\"] === true)\r\n        );\r\n        setCompanies(\r\n          res.data.companys.filter((obj) => obj.companyName !== \"Mobitel\")\r\n        );\r\n        setApprovalPath(res.data.users);\r\n        setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n        setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n        setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const updateStatusSubmit = (e) => {\r\n    const newErrors = findFormErrors2();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      e.preventDefault();\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/update\",\r\n          {\r\n            tasks,\r\n            taskObject: { taskStatus: form.taskStatus },\r\n            taskHistory: {\r\n              taskStatus: \"Status Changed\",\r\n              comment: \"Task Status Changed to > \" + form.taskStatus,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setMsg(res.data.msg);\r\n          setVariant(res.data.variant);\r\n          setOpen(true);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            setTasks([]);\r\n            props.history.push({ pathname: \"/modifyTask\" });\r\n          }, 1000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateOfficerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      var taskApprovalPath = [\r\n        {\r\n          approvalLevel: \"Verification Level 0\",\r\n          assignedOfficer: form.assignedMobitelOfficer,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 1\",\r\n          assignedOfficer: form.verificationOneId,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 2\",\r\n          assignedOfficer: form.verificationTwoId,\r\n        },\r\n        { approvalLevel: \"Final approval\", assignedOfficer: form.approvalId },\r\n      ].filter((element) => element.assignedOfficer != \"\");\r\n\r\n      const taskObject = {\r\n        assignedMobitelOfficer: form.assignedMobitelOfficer,\r\n        approvalPath: taskApprovalPath,\r\n      };\r\n\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/update\",\r\n          {\r\n            tasks,\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: \"Mobitel Officer Re-Assigned\",\r\n              comment: \"Task Re-Assigned to > \" + selectedUserName,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setTimeout(() => {\r\n            setMsg(res.data.msg);\r\n            setVariant(res.data.variant);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setTasks([]);\r\n            setForm({\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: \"\",\r\n              approvalType: \"Default\",\r\n            });\r\n            props.history.push({ pathname: \"/modifyTask\" }); // Changed\r\n          }, 1000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  //Re-Assigned Mobitel Officer Handler\r\n  const onChangeAssignedMobitelOfficer = (e) => {\r\n    const selectedOption = e.target.selectedOptions[0];\r\n    const selectedUserId = selectedOption.value;\r\n    selectedUserName = selectedOption.getAttribute(\"name\");\r\n    const selectedUser = { _id: selectedUserId, name: selectedUserName };\r\n    const name = selectedOption.getAttribute(\"name\");\r\n    setSelectedUserName(name);\r\n\r\n    if (e.target.value === \"Choose...\") {\r\n      setField(\"assignedMobitelOfficer\", e.target.value);\r\n      setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n      setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n      setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n    }\r\n    for (let i = 0; i < approvalPath.length; i++) {\r\n      if (approvalPath[i]._id === e.target.value) {\r\n        switch (approvalPath[i].approvalPath.length) {\r\n          case 0:\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 1:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setField(\"verificationOneId\", approvalPath[i].approvalPath[0]._id);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n          case 2:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: approvalPath[i].approvalPath[1]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 3:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[2]._id,\r\n                name: approvalPath[i].approvalPath[2].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n              approvalId: approvalPath[i].approvalPath[2]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Approval Path Handler\r\n  const onChangeApprovalType = (e) => {\r\n    if (e.target.value === \"New\") {\r\n      let mobitelUsers = approvalPath.filter(\r\n        (obj) => obj.company.companyName === \"Mobitel\"\r\n      );\r\n      setVerificationOne(mobitelUsers);\r\n      setVerificationTwo(mobitelUsers);\r\n      setApproval(mobitelUsers);\r\n      setForm({\r\n        ...form,\r\n        verificationOneId: mobitelUsers[0]._id,\r\n        verificationTwoId: mobitelUsers[0]._id,\r\n        approvalId: mobitelUsers[0]._id,\r\n        approvalType: e.target.value,\r\n      });\r\n      if (!!errors[\"approvalType\"])\r\n        setErrors({\r\n          ...errors,\r\n          assignedMobitelOfficer: null,\r\n        });\r\n    } else if (e.target.value === \"Default\") {\r\n      for (let i = 0; i < approvalPath.length; i++) {\r\n        if (approvalPath[i]._id === form.assignedMobitelOfficer) {\r\n          switch (approvalPath[i].approvalPath.length) {\r\n            case 0:\r\n              setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: \"\",\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 1:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setField(\r\n                \"verificationOneId\",\r\n                approvalPath[i].approvalPath[0]._id\r\n              );\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n            case 2:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: approvalPath[i].approvalPath[1]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 3:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[2]._id,\r\n                  name: approvalPath[i].approvalPath[2].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n                approvalId: approvalPath[i].approvalPath[2]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // Test Code - 3\r\n  // function getApprovalPath(item, users) {\r\n  //     if (item && item.approvalPath && item.approvalPath.length > 0) {\r\n  //       return item.approvalPath.map((appr, index) => {\r\n  //         const officer = users.find((officer) => officer._id.name=== appr.$oid);\r\n  //         const officerName = officer ? officer.name : \"Unknown Officer\";\r\n\r\n  //         return (\r\n  //           <div key={index}>\r\n  //             <div>{appr.approvalLevel} : {officerName}</div>\r\n  //             {/* <div>Approver Level: {appr.approvalLevel}</div>\r\n  //             <div>Assigned Officer: {officerName}</div> */}\r\n  //           </div>\r\n  //         );\r\n  //       });\r\n  //     } else {\r\n  //       return \"No approval path found\";\r\n  //     }\r\n  //   }\r\n  // Test code - 4 Latest working code\r\n  function getApprovalPath(item, users) {\r\n    if (item && item.approvalPath && item.approvalPath.length > 0) {\r\n      return item.approvalPath.map((appr, index) => {\r\n        const approver = appr.assignedOfficer;\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              {appr.approvalLevel} : {approver.name}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return \"No approval path found\";\r\n    }\r\n  }\r\n\r\n  // Disable Modification functions according to the specific task status---------\r\n  // Dissable Task Status Change if task already completed>>\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    // console.log(tasks[i].taskStatus)\r\n    if (\r\n      tasks[i].taskStatus !== \"Task accepted\" &&\r\n      tasks[i].taskStatus !== \"Task commenced\"\r\n    ) {\r\n      document.getElementById(\"formChangeTaskStatus\").disabled = true;\r\n      document.getElementById(\"btnChangeTaskStatus\").disabled = true;\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    //   \"Task handed over\",\r\n    //   \"Subcon allocated\",\r\n    //   \"Task accepted\",\r\n    //   \"Task completed\",\r\n    //   \"Task commenced\",\r\n    //   \"Task rejected\",\r\n    if (\r\n      tasks[i].taskStatus !== \"Task handed over\" &&\r\n      tasks[i].taskStatus !== \"Subcon allocated\" &&\r\n      tasks[i].taskStatus !== \"Task accepted\" &&\r\n      tasks[i].taskStatus !== \"Task completed\" &&\r\n      tasks[i].taskStatus !== \"Task commenced\" &&\r\n      tasks[i].taskStatus !== \"Task rejected\"\r\n    ) {\r\n      document.getElementById(\r\n        \"formChangeBoqApprovalRequirment\"\r\n      ).disabled = true;\r\n      document.getElementById(\r\n        \"btnChangeBoqApprovalRequirement\"\r\n      ).disabled = true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Modify Task</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            {/* <form onSubmit={onSubmit} enctype=\"multipart/form-data\"> */}\r\n            <form>\r\n              <div>\r\n                <Row>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Ref</th>\r\n                        <th>Site ID</th>\r\n                        <th>Site Name</th>\r\n                        <th>Assigned Mobitel Officer</th>\r\n                        <th>Task Status</th>\r\n                        <th>BOQ</th>\r\n                        <th>Approval Path</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {tasks.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item.taskRef}</td>\r\n                            <td>{item.siteID}</td>\r\n                            <td>{item.siteName}</td>\r\n                            <td>{item.assignedMobitelOfficer.name}</td>\r\n                            <td>{item.taskStatus}</td>\r\n                            <td>\r\n                              {item.boqprojectrequirement === true\r\n                                ? \"Required\"\r\n                                : item.boqprojectrequirement === false\r\n                                ? \"Not Required\"\r\n                                : \"Required\"}\r\n                            </td>\r\n                            <td>{getApprovalPath(item, users)}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </div>\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Change Task Status</Form.Label>\r\n                    <Form.Control\r\n                      id=\"formChangeTaskStatus\"\r\n                      onChange={(e) => {\r\n                        setField(\"taskStatus\", e.target.value);\r\n                        // console.log(\"Selected Task Status:\", e.target.value); // Add console.log statement here\r\n                      }}\r\n                      value={form.taskStatus}\r\n                      as=\"select\"\r\n                      defaultValue=\"item.taskStatus\"\r\n                      isInvalid={!!errors.taskStatus}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      <option>Task handed over</option>\r\n                      {/* <option>Subcon allocated</option>\r\n                                        <option>Task accepted</option>\r\n                                        <option>Task commenced</option>\r\n                                        <option>Task completed</option>\r\n                                        <option>BOQ submitted</option>\r\n                                        <option>BOQ Verified_0</option>\r\n                                        <option>BOQ Verified_1</option>\r\n                                        <option>BOQ Verified_2</option>\r\n                                        <option>BOQ Approved</option> */}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.taskStatus}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Update Task Status</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={(e) => updateStatusSubmit(e)}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                      id=\"btnChangeTaskStatus\"\r\n                    >\r\n                      Update Task Status\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Form>\r\n                    <Form.Group as={Col}>\r\n                      {/* <Form.Label style={{ fontSize: 11 }}>**Only backward status changes are accepted. Refrain from making forward status changes... </Form.Label> */}\r\n                      <Form.Label style={{ fontSize: 11 }}>\r\n                        ** You can't change the status once the task already\r\n                        submitted as \"Task completed\"\r\n                      </Form.Label>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Re-Assign To</Form.Label>\r\n                    <Form.Control\r\n                      onChange={onChangeAssignedMobitelOfficer}\r\n                      as=\"select\"\r\n                      value={form.assignedMobitelOfficer}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.assignedMobitelOfficer}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      {users.map((opt) => (\r\n                        <option value={opt._id} name={opt.name}>\r\n                          {opt.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.assignedMobitelOfficer}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Re-Assign</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={updateOfficerSubmit}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                    >\r\n                      Re-Assign\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n                <Row></Row>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Verification by (Level 1)</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) =>\r\n                        setField(\"verificationOneId\", e.target.value)\r\n                      }\r\n                      value={form.verificationOneId}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.verificationOneId}\r\n                      disabled\r\n                    >\r\n                      {verificationOne.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.verificationOneId}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Verification by (Level 2)</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) =>\r\n                        setField(\"verificationTwoId\", e.target.value)\r\n                      }\r\n                      value={form.verificationTwoId}\r\n                      defaultValue=\"Choose...\"\r\n                      disabled\r\n                    >\r\n                      {verificationTwo.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Approval by</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) => setField(\"approvalId\", e.target.value)}\r\n                      value={form.approvalId}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.approvalId}\r\n                      disabled\r\n                    >\r\n                      {approval.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.approvalId}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row>\r\n                  <Form>\r\n                    <Form.Group as={Col}>\r\n                      {/* <Form.Label style={{ fontSize: 11 }}>**Only backward status changes are accepted. Refrain from making forward status changes... </Form.Label> */}\r\n                      <Form.Label style={{ fontSize: 11 }}>\r\n                        {/* ** If you need to change the approval path, Update the approval path in (My Account>Add/Update User or Company>Select relevant user) */}\r\n                        ** If you need to change current approval path, Go to\r\n                        (My Account&gt;Add/Update User or Company&gt;Select\r\n                        relevant Mobitel Officer to be assigned) and Update the\r\n                        approval path before re-assign the task.\r\n                      </Form.Label>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>BOQ Approval Requirement</Form.Label>\r\n                    <Form.Control\r\n                      id=\"formChangeBoqApprovalRequirment\"\r\n                      onChange={(e) => {\r\n                        setField(\"boqApprovalRequirment\", e.target.value);\r\n                        // console.log(\r\n                        //   \"Selected boqApprovalRequirment:\",\r\n                        //   e.target.value\r\n                        // ); // Add console.log statement here\r\n                      }}\r\n                      value={form.boqApprovalRequirment}\r\n                      as=\"select\"\r\n                      defaultValue=\"item.boqApprovalRequirment\"\r\n                      isInvalid={!!errors.boqApprovalRequirment}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      <option value={true}>Required</option>\r\n                      <option value={false}>Not Required</option>\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.boqApprovalRequirment}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Update</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={(e) => updateBoq(e)}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                      id=\"btnChangeBoqApprovalRequirement\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n                <Row></Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n            </form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={variant} sx={{ width: \"100%\" }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ModifySpecificTaskBody);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Alert","React","props","ref","elevation","variant","withRouter","useState","users","setUsers","setSubconUsers","setCompanies","approvalPath","setApprovalPath","verificationOne","setVerificationOne","verificationTwo","setVerificationTwo","approval","setApproval","msg","setMsg","setVariant","axiosInstance","axios","baseURL","process","form","setForm","tasks","setTasks","errors","setErrors","open","setOpen","openDialog","setOpenDialog","selectedUserName","setSelectedUserName","findFormErrors3","boqApprovalRequirment","newErrors","updateBoq","e","Object","keys","length","preventDefault","boqValue","put","headers","token","JSON","parse","localStorage","getItem","accessToken","res","setTimeout","data","history","push","pathname","console","error","setField","field","value","useEffect","get","then","location","filter","obj","company","companyName","companys","_id","name","catch","err","log","updateStatusSubmit","taskStatus","findFormErrors2","post","taskObject","taskHistory","comment","handleClose","event","reason","getApprovalPath","item","map","appr","index","approver","assignedOfficer","approvalLevel","i","document","getElementById","disabled","className","striped","bordered","hover","size","taskRef","siteID","siteName","assignedMobitelOfficer","boqprojectrequirement","style","border","padding","as","Col","id","onChange","target","defaultValue","isInvalid","type","onClick","width","height","fontSize","selectedOption","selectedOptions","getAttribute","verificationOneId","verificationTwoId","approvalId","approvalType","opt","findFormErrors","taskApprovalPath","element","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","display","_excluded","Table","_ref","bsPrefix","borderless","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}