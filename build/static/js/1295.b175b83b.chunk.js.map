{"version":3,"file":"static/js/1295.b175b83b.chunk.js","mappings":"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","sources":["components/ApproveBoqSpecificTaskBody.jsx","components/BoQPopup.jsx"],"sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport MaterialTable, { MTablePagination } from 'material-table';\nimport { TablePagination } from \"@material-ui/core\"\nimport BoQPopup from './BoQPopup'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Dialog from '@mui/material/Dialog';\nimport Box from '@mui/material/Box';\nimport DialogContent from '@mui/material/DialogContent';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport AddBox from '@mui/icons-material/AddBox';\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\nimport Check from '@mui/icons-material/Check';\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport Clear from '@mui/icons-material/Clear';\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\nimport Edit from '@mui/icons-material/Edit';\nimport FilterList from '@mui/icons-material/FilterList';\nimport FirstPage from '@mui/icons-material/FirstPage';\nimport LastPage from '@mui/icons-material/LastPage';\nimport Remove from '@mui/icons-material/Remove';\nimport SaveAlt from '@mui/icons-material/SaveAlt';\nimport Search from '@mui/icons-material/Search';\nimport ViewColumn from '@mui/icons-material/ViewColumn';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n\n\nfunction ApproveBoqSpecificTaskBody(props) {\n\n    let [users, setUsers] = useState([]);\n    let [companies, setCompanies] = useState([]);\n    const [openPopup, setOpenPopup] = useState(false)\n    const [boqData, setBoqData] = useState([])\n    const [totalCost, setTotalCost] = useState()\n    const [CapexPrAmount, setTotalCapexCost] = useState(0);\n    const [OpexPrAmount, setTotalOpexCost] = useState(0);\n    const [approvalHistory, setApproalHistory] = useState([])\n    let [severity, setSeverity] = useState(\"\");\n    let [alart, setAlart] = useState(\"\");\n\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n\n    let [form, setForm] = useState({})\n    let [errors, setErrors] = useState({})\n    let [open, setOpen] = useState(false);\n    let [openDialog, setOpenDialog] = useState(false);\n\n    let setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n        if (!!errors[field]) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n\n\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const findFormErrors = () => {\n        const { comment } = form\n        const newErrors = {}\n        // name errors\n        if (!comment || comment === '') newErrors.comment = 'cannot be blank!'\n\n\n        return newErrors\n    }\n\n    const findFormErrorsForReject = () => {\n        const { comment } = form\n        const newErrors = {}\n        // name errors\n\n        if (!comment || comment === '') newErrors.comment = 'cannot be blank!'\n\n        return newErrors\n    }\n\n    //Approal History download table\n    const columns_AH = [\n        { field: 'taskStatus', headerName: 'Status', width: 250 },\n        { field: 'performedDate', headerName: 'Performed Date', width: 200, valueGetter: (params) => params.row.performedDate.split('T')[0] },\n        { field: 'performedBy', headerName: 'Performed by', width: 200, valueGetter: (params) => params.row.performedBy.name },\n        { field: 'comment', headerName: 'Comment', width: 500 }\n\n    ];\n\n    const columns = [\n        { title: 'ERP Code', field: 'erpCode', filtering: false, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Rate Card Div', field: 'rateCardDiv', editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Item Discreption', field: 'itemDiscreption', filtering: false, editable: false, cellStyle: { width: 300, minWidth: 300, maxWidth: 300, height: 1 } },\n        { title: 'UoM', field: 'itemUom', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Unit Rate', field: 'itemRate', editable: false, filtering: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Quantity', field: 'itemQty', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Item Total', field: 'itemTotal', type: 'currency', currencySetting: { currencyCode: 'LKR' }, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Capex/Opex', field: 'capexopexLine', cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 }, editable: false }, // Working Code        \n        { title: 'Comment', field: 'itemComment', editable: \"onUpdate\", cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n    ];\n\n\n    useEffect(() => {\n        // console.log(props.location.data.row)\n        setUsers([{ name: props.location.data.row.assignedMobitelOfficer.name }])\n        setCompanies([{ companyName: props.location.data.row.assignedSubcon.companyName }])\n        setForm({\n            'taskRef': props.location.data.row.taskRef,\n            'siteID': props.location.data.row.siteID,\n            'siteName': props.location.data.row.siteName,\n            'actualTaskStartDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task commenced').performedDate.split('T')[0],\n            'actualTaskCompletedDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task completed').performedDate.split('T')[0],\n            'taskAssignedDiv': props.location.data.row.taskAssignedDiv,\n            'assignedMobitelOfficer': props.location.data.row.assignedMobitelOfficer.name,\n            'workScope': props.location.data.row.workScope,\n            'assignedSubcon': props.location.data.row.assignedSubcon.companyName,\n\n        })\n\n        setBoqData(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].boqData)\n        setTotalCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].totalCost)\n\n        // to set capex/opex amounts from backend\n        setTotalCapexCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].CapexPrAmount)\n        setTotalOpexCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].OpexPrAmount)\n\n        setApproalHistory(props.location.data.row.taskHistory.filter((e) => (e.taskStatus === \"BOQ Verified_0\") || (e.taskStatus === \"BOQ Verified_1\") || (e.taskStatus === \"BOQ Verified_2\") || (e.taskStatus === \"BOQ Rejected\") || (e.taskStatus === \"BOQ submitted\")))\n    }, [])\n\n\n    const onAccept = (e) => {\n        e.preventDefault()\n\n        const newErrors = findFormErrors()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            let taskObject = {\n                taskStatus: 'BOQ Approved'\n            }\n\n            var otherApprovalLevel = props.location.data.row.approvalPath[props.location.data.row.approvalPath.length - 1].approvalLevel\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { CapexPrAmount, OpexPrAmount,totalCost, boqData, taskObject, taskHistory: { taskStatus: taskObject.taskStatus, comment: form.comment, otherApprovalLevel: otherApprovalLevel } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/approveBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n    }\n\n    const onReject = (e) => {\n\n        e.preventDefault()\n\n        const newErrors = findFormErrorsForReject()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            const taskObject = {\n                taskStatus: 'BOQ Rejected'\n            };\n\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { totalCost, boqData, taskObject, taskHistory: { taskStatus: 'BOQ Rejected', comment: form.comment } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/approveBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n\n\n\n    return (\n        <div>\n\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n                {/* Content Header (Page header) */}\n                <div className=\"content-header\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Approve BOQ Task ID: {form.taskRef}</h1>\n                                </div>\n                            </div>\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                {/* /.content-header */}\n                {/* Main content */}\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <Form >\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site ID</Form.Label>\n                                    <Form.Control disabled value={form.siteID} className=\"col-md-9\" type=\"text\" placeholder=\"Enter site ID\" isInvalid={!!errors.siteID} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteID}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site Name</Form.Label>\n                                    <Form.Control disabled value={form.siteName} type=\"text\" placeholder=\"Enter site Name\" isInvalid={!!errors.siteName} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"\">\n                                </Form.Group>\n\n                            </Row>\n\n\n                            <Row className=\"mb-3\">\n\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Commencement Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskStartDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskStartDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskStartDate}\n                                    </Form.Control.Feedback>\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Completed Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskCompletedDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskCompletedDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskCompletedDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                </Form.Group>\n\n                            </Row>\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Task Assigned Division</Form.Label>\n                                    <Form.Control disabled value={form.taskAssignedDiv} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.taskAssignedDiv}>\n                                        <option>Choose...</option>\n                                        <option>Project_Radio</option>\n                                        <option>Project_Core</option>\n                                        <option>Project_TX</option>\n                                        <option>Project_IBS</option>\n                                        <option>Project_WiFi</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.taskAssignedDiv}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned Mobitel Officer</Form.Label>\n                                    <Form.Control disabled as=\"select\" value={form.assignedMobitelOfficer} defaultValue=\"Choose...\" isInvalid={!!errors.assignedMobitelOfficer}>\n                                        <option>Choose...</option>\n                                        {users.map(opt => (\n                                            <option value={opt._id}>{opt.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedMobitelOfficer}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned subcontractor</Form.Label>\n                                    <Form.Control disabled value={form.assignedSubcon} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.assignedSubcon} >\n                                        <option>Choose...</option>\n                                        {companies.map(opt => (\n                                            <option value={opt._id}>{opt.companyName}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedSubcon}\n                                    </Form.Control.Feedback>\n\n                                </Form.Group>\n\n                            </Row>\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>High level work scope</Form.Label>\n                                    <Form.Control disabled value={form.workScope} as=\"textarea\" rows={2} placeholder=\"\" isInvalid={!!errors.workScope} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.workScope}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                            </Row>\n                        </Form>\n\n                        <MaterialTable\n                            title={'Approve BOQ-'+ form.siteID + '_' + form.taskRef}\n                            data={boqData}\n                            columns={columns}\n                            icons={tableIcons}\n                            editable={{\n                                onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n                                    const index = oldRow.tableData.id;\n                                    const updatedRows = [...boqData]\n                                    updatedRow.itemTotal = updatedRow.itemRate * updatedRow.itemQty\n                                    updatedRows[index] = updatedRow\n                                    setTimeout(() => {\n                                        setBoqData(updatedRows)\n                                        resolve()\n                                    }, 2000)\n                                })\n\n                            }}\n                            options={{\n                                exportButton: true,\n                                // pageSizeOptions: [5, 10, 20],\n                                pageSizeOptions: [boqData.length, 5, 10, 20],\n                                paginationType: 'stepped',\n                                showTextRowsSelected: false,\n                                actionsColumnIndex: -1,\n                                filtering: false,\n                                tableLayout: \"auto\",\n                                rowStyle: {\n                                    backgroundColor: '#EEE'\n                                },\n                                headerStyle: {\n                                    backgroundColor: '#01579b',\n                                    color: '#FFF'\n                                }\n                            }}\n                            components={{\n                                Pagination: (props) => (\n                                    <>\n                                        <Grid container style={{ pading: 300, background: '#f5f5f5' }}>\n                                            <Grid sm={9} item>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Capex Amount\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Opex Amount\n                                                </Typography>\n                                                <Typography align='right' fontWeight='bold' variant='subtitle1'>\n                                                    Total Amount\n                                                </Typography>\n                                            </Grid>\n                                            <Grid sm={3} align='center'> \n                                                <Typography align='right' variant='subtitle1'>\n                                                        {\"LKR \" + CapexPrAmount}\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1'>\n                                                        {\"LKR \" + OpexPrAmount}\n                                                </Typography>\n                                                <Typography align='right' fontWeight='bold' variant='subtitle1'>\n                                                        {\"LKR \" + totalCost}\n                                                </Typography>                                            \n                                            </Grid> \n                                        </Grid>\n                                        <TablePagination {...props} />\n                                    </>\n                                ),\n                            }}\n                        >\n\n                        </MaterialTable>\n                        <br />\n                        <Row>\n                            <Form.Group as={Col} >\n                                <Form.Label>Task History</Form.Label>\n                                <div style={{ height: 250, width: '100%' }}>\n                                    <DataGrid\n                                        getRowId={(history) => history._id}\n                                        rows={approvalHistory}\n                                        columns={columns_AH}\n                                        pageSize={5}\n                                        rowsPerPageOptions={[5]}\n                                        rowHeight={30}\n                                        headerHeight={40}\n                                    />\n\n                                </div>\n                            </Form.Group>\n\n                        </Row>\n                        <Row>\n\n                            <Form.Group as={Col} >\n                                <Form.Label>Comments</Form.Label>\n                                <Form.Control onChange={e => setField('comment', e.target.value)} as=\"textarea\" rows={2} value={form.comment} placeholder=\"Enter your comments\" isInvalid={!!errors.comment} />\n                                <Form.Control.Feedback type='invalid'>\n                                    {errors.comment}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n\n                        </Row>\n                        <Button variant=\"warning\" onClick={onReject}>\n                            BOQ Rejected\n                        </Button>{' '}\n\n                        <Button variant=\"primary\" onClick={onAccept}>\n                            BOQ Approved\n                        </Button>\n                    </div>{/* /.container-fluid */}\n                </section>\n                {/* /.content */}\n\n\n            </div>\n\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }} >\n                    {alart}\n                </Alert>\n            </Snackbar>\n            <Dialog\n                open={openDialog}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <Box sx={{ display: 'flex' }}>\n                        <CircularProgress />\n                    </Box>\n\n\n                </DialogContent>\n            </Dialog>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(ApproveBoqSpecificTaskBody)","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TablePagination } from '@material-ui/core'\r\nimport React,{ useEffect,useState, forwardRef } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { MenuItem, Select } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport AddBox from '@mui/icons-material/AddBox';\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\n\r\nlet rateCardData = []\r\n    \r\n\r\nexport default function BoQPopup(props) {\r\n  \r\n  const [filteredData,setFilteredData]=useState(rateCardData)\r\n  const [rateCard,setRateCard] = useState(\"all\")\r\n  const {openPopup,setOpenPopup}=props;\r\n  const [selectedRows,setSelectedRows]=useState([]);\r\n  \r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  })\r\n\r\n\r\n    useEffect(() => {\r\n      rateCardData=[]\r\n      axiosInstance.get('projonline/allRateCards',{headers:{token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken}}).then(res=>{\r\n\r\n        console.log(res.data)\r\n            const filter = res.data.filter((task)=>(\r\n              task.rateCardSubcon._id === JSON.parse(localStorage.getItem(\"user\")).company._id && task.rateCardValidTo >= props.acceptedDate && task.rateCardValidFrom <= props.acceptedDate ) )\r\n              // console.log(filter)\r\n              filter.forEach(card => {\r\n                card.rateCardItems.forEach(item=>{\r\n                    item['rateCardDiv']=card.rateCardDiv\r\n                    rateCardData.push(item)\r\n                })\r\n                \r\n            });\r\n\r\n            \r\n            // console.log(rateCardData)\r\n            //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n            \r\n            return\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    } , [] )\r\n\r\n    \r\n\r\n\r\n    const columns = [   {title: 'ERP Code', field: 'erpCode', cellStyle: {width: 100,minWidth: 100, maxWidth:100,height:1}},\r\n                        {title: 'Rate Card Div', field: 'rateCardDiv', cellStyle: {width: 150,minWidth: 150, maxWidth:150, height:1}},\r\n                        {title: 'Item Discreption', field: 'itemDiscreption',cellStyle: {width: 400,minWidth: 400,maxWidth:400, height:1}},\r\n                        {title: 'UoM', field: 'itemUom',cellStyle:{width: 150,minWidth: 150, maxWidth:150, height:1}},    \r\n                        {title: 'Unit Rate', field: 'itemRate', type: 'currency', currencySetting: { currencyCode: 'LKR' }, cellStyle:{width: 200,minWidth: 200,maxWidth:200, height:1}}\r\n                    ]\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    const handleRowsSelect = () => {\r\n\r\n\r\n      if ( Array.isArray(selectedRows) && selectedRows.length ) {\r\n        props.callBk( filteredData.filter(row => selectedRows.includes(row)));\r\n      }\r\n      \r\n      setOpenPopup(false)\r\n\r\n      const newData = rateCardData.map((row) => ({\r\n        ...row,\r\n        tableData: {\r\n          checked: false,\r\n        },\r\n      }));\r\n  \r\n      setFilteredData(newData)\r\n\r\n      setSelectedRows([])\r\n\r\n\r\n    }\r\n\r\n    const handleRowsSelectClose=()=>{\r\n\r\n      setOpenPopup(false)\r\n\r\n      const newData = rateCardData.map((row) => ({\r\n        ...row,\r\n        tableData: {\r\n          checked: false,\r\n        },\r\n      }));\r\n  \r\n      setFilteredData(newData)\r\n\r\n      setSelectedRows([])\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setFilteredData(rateCard==='all'?rateCardData:rateCardData.filter(dt=>dt.rateCard===rateCard))  \r\n    },[rateCard])  \r\n\r\n    return (\r\n        <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n           \r\n          <DialogContent>\r\n                    \r\n            <MaterialTable title=\"BOQ Line Items\"\r\n            columns={columns}\r\n            data={filteredData}\r\n            icons={tableIcons}\r\n            onSelectionChange={(rows)=>(setSelectedRows(rows))}\r\n            \r\n            options={{\r\n                exportButton: true,\r\n                pageSizeOptions: [5, 10, 20],\r\n                paginationType: 'stepped',\r\n                showTextRowsSelected: false,\r\n                actionsColumnIndex: -1,\r\n                filtering: true,\r\n                selection:true,\r\n                tableLayout: \"auto\",\r\n                selectionProps:{},\r\n                rowStyle: {\r\n                    backgroundColor: '#EEE', \r\n                },\r\n                headerStyle: {\r\n                    backgroundColor: '#01579b',\r\n                    color: '#FFF'\r\n                  }\r\n                \r\n          \r\n              }}\r\n              actions={[\r\n                  {\r\n                      icon:()=><Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={rateCard}\r\n                      onChange={(e)=>setRateCard(e.target.value)}\r\n                      style={{width:100}}\r\n                    >\r\n                      <MenuItem value={\"all\"}><em>All</em></MenuItem>  \r\n                      <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                      <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                      <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                    </Select>,\r\n                    tooltip:\"Select Rate Card\",\r\n                    isFreeAction:true\r\n                  }\r\n              ]\r\n\r\n            }\r\n            components={{\r\n                Pagination: (props) => (\r\n                  <div>\r\n                    <Grid container style={{ pading: 15, background: '#f5f5f5' }}>\r\n                    \r\n                      <Grid sm={11} align=\"right\" item>\r\n                        <DialogActions>\r\n                          <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={handleRowsSelect}>Submit</Button>\r\n                        </DialogActions>\r\n                      </Grid>\r\n                      <Grid sm={1} align='center' item>\r\n                        <DialogActions>\r\n                          <Button variant=\"contained\" color=\"default\" onClick={handleRowsSelectClose } >Close</Button>\r\n                        </DialogActions>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <TablePagination {...props} />\r\n                  </div>\r\n                ),\r\n              }}/>     \r\n        \r\n          </DialogContent>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n"],"names":["Alert","React","props","ref","elevation","variant","withRouter","useState","users","setUsers","companies","setCompanies","boqData","setBoqData","totalCost","setTotalCost","CapexPrAmount","setTotalCapexCost","OpexPrAmount","setTotalOpexCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","openDialog","setOpenDialog","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","useEffect","name","location","data","row","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","taskHistory","find","x","taskStatus","performedDate","split","taskAssignedDiv","workScope","boqs","length","filter","e","handleClose","event","reason","className","as","Col","disabled","value","type","placeholder","isInvalid","controlId","actualTaskStartDate","actualTaskCompletedDate","defaultValue","map","opt","_id","rows","title","columns","field","filtering","editable","cellStyle","width","minWidth","maxWidth","height","currencySetting","currencyCode","icons","onRowUpdate","updatedRow","oldRow","Promise","resolve","reject","index","tableData","id","updatedRows","itemTotal","itemRate","itemQty","setTimeout","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","tableLayout","rowStyle","backgroundColor","headerStyle","color","components","Pagination","container","style","pading","background","sm","item","align","fontWeight","getRowId","history","headerName","valueGetter","params","performedBy","pageSize","rowsPerPageOptions","rowHeight","headerHeight","onChange","target","comment","onClick","preventDefault","newErrors","findFormErrorsForReject","Object","keys","put","taskObject","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","push","pathname","catch","error","console","log","findFormErrors","otherApprovalLevel","approvalPath","approvalLevel","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","rateCardData","BoQPopup","filteredData","setFilteredData","rateCard","setRateCard","openPopup","setOpenPopup","selectedRows","setSelectedRows","get","task","rateCardSubcon","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","rateCardDiv","err","handleRowsSelect","Array","isArray","callBk","includes","newData","checked","handleRowsSelectClose","dt","fullWidth","onSelectionChange","selection","selectionProps","actions","icon","labelId","tooltip","isFreeAction"],"sourceRoot":""}