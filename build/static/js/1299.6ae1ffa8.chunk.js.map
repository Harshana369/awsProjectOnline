{"version":3,"file":"static/js/1299.6ae1ffa8.chunk.js","mappings":"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","sources":["components/AllTasksBody.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport style from \"./style.css\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport PropTypes from \"prop-types\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport XLSX from \"xlsx\";\r\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport { keys } from \"@mui/system\";\r\nimport { jsx } from \"@emotion/react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n//import Stack from 'react-bootstrap/Stack'\r\n\r\nfunction Rows(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow\r\n        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\r\n        style={{ height: 10 }}\r\n        padding=\"none\"\r\n      >\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.taskRef}\r\n        </TableCell>\r\n        <TableCell>\r\n          {typeof row.siteID === \"undefined\" ? \"NA\" : row.siteID}\r\n        </TableCell>\r\n        <TableCell>\r\n          {typeof row.assignedSubcon === \"undefined\"\r\n            ? \"NA\"\r\n            : row.assignedSubcon.companyName}\r\n        </TableCell>\r\n        <TableCell>\r\n          {typeof row.assignedMobitelOfficer === \"undefined\"\r\n            ? \"NA\"\r\n            : row.assignedMobitelOfficer.name}\r\n        </TableCell>\r\n        <TableCell>{row.taskStatus}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Action</TableCell>\r\n                    <TableCell>Performed by</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Comment</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.taskHistory.map((historyRow) => (\r\n                    <TableRow key={historyRow.performedDate}>\r\n                      <TableCell>\r\n                        {historyRow.taskStatus}\r\n                        {historyRow.comStatus}\r\n                        {historyRow.sarStatus}\r\n                        {historyRow.patStatus}\r\n                        {historyRow.onairStatus}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.performedBy.name}</TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.performedDate.split(\"T\")[0]}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.comment}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction AllTasksBody() {\r\n  let [items, setItems] = useState([]);\r\n  let [allItems, setallItems] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [page, setPage] = React.useState(0);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  const [totalTasks, setTotalTasks] = useState(0);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.time(\"gettasks\");\r\n    setOpenDialog(true);\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(\r\n          `projonline/getalltasksfortable?pageSize=${rowsPerPage}&pageNumber=${\r\n            page + 1\r\n          }`,\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        setItems(response.data.tasks);\r\n        setallItems(response.data.tasks);\r\n        setTotalTasks(response.data.totalTasks);\r\n\r\n        setOpenDialog(false);\r\n        console.log(response.data.tasks);\r\n        console.timeEnd(\"gettasks\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [rowsPerPage, page]);\r\n\r\n  const fetchTasks = async (url) => {\r\n    try {\r\n      setOpenDialog(true);\r\n\r\n      const response = await axiosInstance.get(url, {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      });\r\n\r\n      setItems(response.data.tasks);\r\n      setTotalTasks(response.data.totalTasks);\r\n\r\n      setOpenDialog(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setOpenDialog(false);\r\n    }\r\n  };\r\n\r\n  const searchFilter = () => {\r\n    fetchTasks(`projonline/searchtasks?search=${search}`);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"change page\");\r\n    console.log(newPage);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const downloadHandover = (e) => {\r\n    //Create Downloadable excel file\r\n    var workbook = XLSX.utils.book_new();\r\n\r\n    //get selected projects\r\n    var worksheetData = [];\r\n    var historyData = [];\r\n\r\n    for (var i = items.length - 1; i >= 0; i--) {\r\n      if (\"assignedSubcon\" in items[i]) {\r\n        var companyName = items[i].assignedSubcon.companyName;\r\n      } else {\r\n        companyName = \"N/A\";\r\n      }\r\n      if (\"assignedMobitelOfficer\" in items[i]) {\r\n        var username = items[i].assignedMobitelOfficer.username;\r\n      } else {\r\n        var username = \"N/A\";\r\n      }\r\n\r\n      var data = [\r\n        items[i].taskRef,\r\n        items[i].siteID,\r\n        companyName,\r\n        username,\r\n        items[i].taskStatus,\r\n      ];\r\n      worksheetData.unshift(data);\r\n\r\n      //history\r\n      var history = [];\r\n      if (\"taskHistory\" in items[i]) {\r\n        var hdata = items[i].taskHistory;\r\n        hdata.forEach((e) => {\r\n          // history = [items[i].taskRef, e.taskStatus, e.performedBy.name, e.performedDate,e.comment]  // Original Code\r\n          history = [\r\n            items[i].taskRef,\r\n            e.taskStatus,\r\n            e.comStatus,\r\n            e.sarStatus,\r\n            e.patStatus,\r\n            e.onairStatus,\r\n            e.performedBy.name,\r\n            e.performedDate,\r\n            e.comment,\r\n          ]; // Test Code\r\n\r\n          historyData.unshift(history);\r\n        });\r\n      }\r\n    }\r\n    // history = ['Task ID','Action','Performed by','Date','Comment']   // Original Code\r\n    history = [\r\n      \"Task ID\",\r\n      \"Action\",\r\n      \"Commission Status\",\r\n      \"SAR Status\",\r\n      \"PAT Status\",\r\n      \"On-Air Status\",\r\n      \"Performed by\",\r\n      \"Date\",\r\n      \"Comment\",\r\n    ]; // Test Code\r\n\r\n    historyData.unshift(history);\r\n\r\n    //...\r\n    data = [\r\n      \"Task ID\",\r\n      \"Site ID\",\r\n      \"Assigned Subcon\",\r\n      \"Assigned Mobitel Officer\",\r\n      \"Current Status\",\r\n    ];\r\n    worksheetData.unshift(data);\r\n\r\n    var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n    var hd = XLSX.utils.aoa_to_sheet(historyData);\r\n    XLSX.utils.book_append_sheet(workbook, ws, \"allTask\");\r\n    XLSX.utils.book_append_sheet(workbook, hd, \"history\");\r\n    XLSX.writeFile(workbook, \"All Tasks.xlsx\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.time(\"gettasks\");\r\n    fetchTasks(`projonline/getalltasksfortable?pageSize=10&pageNumber=1`);\r\n    console.timeEnd(\"gettasks\");\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div>\r\n                <div>\r\n                  <Container>\r\n                    <Row>\r\n                      <Col xs={2}>\r\n                        <h1>All Tasks</h1>\r\n                      </Col>\r\n\r\n                      <Col xs={7}>\r\n                        <Form.Control\r\n                          className=\"me-auto\"\r\n                          placeholder=\"Search your item here...\"\r\n                          onChange={(e) => setSearch(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Button variant=\"secondary\" onClick={searchFilter}>\r\n                          Search\r\n                        </Button>\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"vr\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"outline-success\"\r\n                          onClick={downloadHandover}\r\n                        >\r\n                          Dowanload\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n\r\n        <TableContainer>\r\n          <Table size=\"small\" aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n\r\n                <TableCell>Task ID</TableCell>\r\n\r\n                <TableCell>Site ID</TableCell>\r\n\r\n                <TableCell>Assigned Subcon / Vender</TableCell>\r\n\r\n                <TableCell>Assigned Officer</TableCell>\r\n\r\n                <TableCell>Current Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {(items > 0\r\n                ? items.slice(\r\n                    page * rowsPerPage,\r\n                    page * rowsPerPage + rowsPerPage\r\n                  )\r\n                : items\r\n              ).map((row) => (\r\n                <Rows key={row.name} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={totalTasks}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n      <Dialog\r\n        open={openDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(AllTasksBody);\r\n"],"names":["Rows","props","row","React","open","setOpen","sx","borderBottom","style","height","padding","size","onClick","component","scope","taskRef","siteID","assignedSubcon","companyName","assignedMobitelOfficer","name","taskStatus","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","variant","gutterBottom","taskHistory","map","historyRow","comStatus","sarStatus","patStatus","onairStatus","performedBy","performedDate","split","comment","withRouter","useState","items","setItems","setallItems","search","setSearch","rowsPerPage","setRowsPerPage","page","setPage","openDialog","setOpenDialog","totalTasks","setTotalTasks","axiosInstance","axios","baseURL","process","useEffect","console","time","fetchData","get","headers","token","JSON","parse","localStorage","getItem","accessToken","response","data","tasks","log","timeEnd","fetchTasks","url","className","xs","placeholder","onChange","e","target","value","workbook","XLSX","worksheetData","historyData","i","length","username","unshift","history","forEach","ws","hd","slice","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","display"],"sourceRoot":""}