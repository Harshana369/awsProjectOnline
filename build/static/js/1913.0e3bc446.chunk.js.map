{"version":3,"file":"static/js/1913.0e3bc446.chunk.js","mappings":"2YAaMA,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAO,SAAC,KAAQ,QAACC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,GAChE,IAEII,EAAyB,KACzBC,EAAiB,KAu5BrB,WAAeC,EAAAA,EAAAA,KAr5Bf,SAA8BN,GAE5B,OAAwBO,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACpB,GAAoCF,EAAAA,EAAAA,UAAS,IAAG,eAA3CG,EAAW,KAAEC,EAAc,KAChC,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAAvCK,EAAS,KAAEC,EAAY,KAC5B,GAAsCN,EAAAA,EAAAA,UAAS,IAAG,eAA7CO,EAAY,KAAEC,EAAe,KAClC,GAA4CR,EAAAA,EAAAA,UAAS,IAAG,eAAnDS,EAAe,KAAEC,EAAkB,KACxC,GAA4CV,EAAAA,EAAAA,UAAS,IAAG,eAAnDW,EAAe,KAAEC,EAAkB,KACxC,GAA8BZ,EAAAA,EAAAA,UAAS,IAAG,eAArCa,EAAQ,KAAEC,EAAW,KAC1B,GAAoBd,EAAAA,EAAAA,UAAS,IAAG,gBAA3Be,GAAG,MAAEC,GAAM,MAChB,IAA4BhB,EAAAA,EAAAA,UAAS,IAAG,iBAAnCJ,GAAO,MAAEqB,GAAU,MACxB,IAA8BjB,EAAAA,EAAAA,UAAS,IAAG,iBAArCkB,GAAQ,MAAEC,GAAW,MAC1B,IAAwCnB,EAAAA,EAAAA,UAAS,IAAG,iBAA/CoB,GAAa,MAAEC,GAAgB,MACpC,IAA0CrB,EAAAA,EAAAA,WAAS,GAAK,iBAAjDsB,GAAa,MAAEC,GAAgB,MAChCC,GAAgBC,IAAAA,OAAa,CACjCC,QAASC,2DAGX,IAAsB3B,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAA7B4B,GAAI,MAAEC,GAAO,MAClB,IAAwB7B,EAAAA,EAAAA,UAAS,IAAG,iBAA/B8B,GAAK,MAAEC,GAAQ,MACpB,IAA0B/B,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAAjCgC,GAAM,MAAEC,GAAS,MACtB,IAAsBjC,EAAAA,EAAAA,WAAS,GAAM,iBAAhCkC,GAAI,MAAEC,GAAO,MAClB,IAAkCnC,EAAAA,EAAAA,WAAS,GAAM,iBAA5CoC,GAAU,MAAEC,GAAa,MAE1BC,GAAW,SAACC,EAAOC,GACrBX,IAAQ,kBACHD,IAAI,cACNW,EAAQC,KAELR,GAAOO,IACXN,IAAU,kBACLD,IAAM,cACRO,EAAQ,OAEf,EAGME,GAAQxC,EAAMyC,QAClB,SAACC,GAAG,OAAKA,EAAIC,MAAQhB,GAAKiB,sBAAsB,IAChD,GACIC,GAAQzC,EAAUqC,QAAO,SAACC,GAAG,OAAKA,EAAIC,MAAQhB,GAAKmB,cAAc,IAAE,GAE7DD,KACVjD,EAAyB4C,GAAMO,KAC/BlD,EAAiBgD,GAAMG,cAoDzBC,EAAAA,EAAAA,YAAU,WACR1B,GACG2B,IAAI,mBAAoB,CACvBC,QAAS,CACPC,MACE,UAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAG1DC,MAAK,SAACC,GAEL7B,GAAStC,EAAMoE,SAASC,MACxB1D,EACEwD,EAAIE,KAAK7D,MAAMyC,QAAO,SAACC,GAAG,MAAiC,YAA5BA,EAAIoB,QAAQd,WAAyB,KAEtE/C,EACE0D,EAAIE,KAAK7D,MAAMyC,QAAO,SAACC,GAAG,OAAqC,IAAhCA,EAA0B,oBAAU,KAGrErC,EACEsD,EAAIE,KAAKE,SAAStB,QAAO,SAACC,GAAG,MAAyB,YAApBA,EAAIM,WAAyB,KAEjEzC,EAAgBoD,EAAIE,KAAK7D,OAEzBS,EAAmB,CAAC,CAAEkC,IAAK,GAAII,KAAM,eACrCpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BnB,GAAQ,CACNoC,gBAAiBxE,EAAMoE,SAASC,KAAK,GAAGG,kBAI1C9C,GAAYyC,EAAIE,KAAK5C,SAKvB,IACCgD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,GAAG,IAEH,IAmCMG,GAAQ,yCAAG,WAAOC,EAAUxD,GAAG,8EAiBlC,MAdC,wEACIyD,EAAO,CACXC,SAAU,iBACVC,SAAU,UACVC,KAAM,cACNC,GAAI,IAAML,EAASM,WACnBC,KAAM,OAAShD,GAAMiD,OAAShE,EAC9BiE,WAAY,GAGRC,EAAiB,CACrBC,OAAQ,OACRC,KAAM7B,KAAK8B,UAAUZ,GACrBa,KAAM,WACN,EAAD,OACsBC,MAfrB,wEAegCL,GAAgB,KAAD,EAAnC,kDAEf,gBApBa,wCAuKRM,GAAc,SAACC,EAAOC,GACX,cAAXA,GAIJtD,IAAQ,EACV,EAyQA,OACE,4BAEE,iBAAKuD,UAAU,kBAAiB,WAE9B,gBAAKA,UAAU,iBAAgB,UAC7B,oBAASA,UAAU,iBAAgB,UACjC,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,WAAU,UACvB,gBAAKA,UAAU,WAAU,UACvB,wBAAI,kDASd,oBAASA,UAAU,UAAS,UAC1B,gBAAKA,UAAU,kBAAiB,UAC9B,kBAAMC,SArbC,SAACC,GAChBA,EAAEC,iBAEF,IAAMC,EAvJe,WACrB,IACEC,EAQEnE,GARFmE,qBACAC,EAOEpE,GAPFoE,kBACA/B,EAMErC,GANFqC,gBACApB,EAKEjB,GALFiB,uBACAoD,EAIErE,GAJFqE,UACAlD,EAGEnB,GAHFmB,eAII+C,GADFlE,GAFFsE,kBAEEtE,GADFuE,WAEgB,CAAC,GAmCnB,OAjCKJ,GAAiD,KAAzBA,EAEpB,IAAIK,KAAKL,GAAsBM,YAAa,IAAID,MAAOC,YAC9DP,EAAUC,qBAAuB,0BAFjCD,EAAUC,qBAAuB,mBAG9BC,GAA2C,KAAtBA,GAGxB,IAAII,KAAKJ,GAAmBK,YAAa,IAAID,MAAOC,WACpD,IAAID,KAAKJ,GAAmBK,WAC1B,IAAID,KAAKL,GAAsBM,aAEjCP,EAAUE,kBAAoB,0BAN9BF,EAAUE,kBAAoB,mBAQ7B/B,GACmB,KAApBA,GACoB,cAApBA,IAEA6B,EAAU7B,gBAAkB,sBAE3BpB,GAC0B,KAA3BA,GAC2B,cAA3BA,IAEAiD,EAAUjD,uBAAyB,6BAChCoD,GAA2B,KAAdA,IAChBH,EAAUG,UAAY,oBACnBlD,GAAqC,KAAnBA,IACrB+C,EAAU/C,eAAiB,2BAMtB+C,CACT,CAwGoBQ,GAElB,GAAIC,OAAOC,KAAKV,GAAWf,OAAS,EAElC9C,GAAU6D,OACL,CAGL,IAFA,IAAIW,EAAc,IAAIC,KAEbC,EAAI,EAAGA,EAAIvF,GAAc2D,OAAQ4B,IACxCF,EAAYG,OAAO,QAASxF,GAAcuF,IAG5C,IAAIE,EAAmB,CACrB,CACEC,cAAe,uBACfC,gBAAiBnF,GAAKiB,wBAExB,CACEiE,cAAe,uBACfC,gBAAiBnF,GAAKsE,mBAExB,CACEY,cAAe,uBACfC,gBAAiBnF,GAAKoF,mBAExB,CAAEF,cAAe,iBAAkBC,gBAAiBnF,GAAKuE,aACzDzD,QAAO,SAACuE,GAAO,MAAgC,IAA3BA,EAAQF,eAAqB,IAE7CG,EAAa,CACjBnB,qBAAsBnE,GAAKmE,qBAC3BC,kBAAmBpE,GAAKoE,kBACxB/B,gBAAiBrC,GAAKqC,gBACtBpB,uBAAwBjB,GAAKiB,uBAC7BoD,UAAWrE,GAAKqE,UAChBlD,eAAgBnB,GAAKmB,eACrBoE,WAAY,mBACZ5G,aAAcsG,EACdO,sBAAuB9F,IAGzBe,IAAc,GACdb,GACG6F,KAAK,oBAAqBZ,EAAa,CACtCrD,QAAS,CACPC,MACE,UAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,YACvD,eAAgB,yBAGnBC,MAAK,SAAC2D,GAELJ,EAAWK,MAAQD,EAAKxD,KAExBtC,GACG6F,KACC,oBACA,CACEvF,MAAAA,GACAoF,WAAAA,EACAM,YAAa,CACXL,WAAYD,EAAWC,WACvBM,QACE,YACA5H,EADA,eAIAC,IAGN,CACEsD,QAAS,CACPC,MACE,UACAC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAIhDC,MAAK,SAACC,GAGLU,GACErE,EAAMyC,QACJ,SAACC,GAAG,OAAKA,EAAIC,MAAQhB,GAAKiB,sBAAsB,IAChD,GAAG0B,SACL,iCAEFpE,EAAYuH,SAAQ,SAACC,GACfA,EAAI5D,QAAQnB,MAAQhB,GAAKmB,gBAC3BuB,GACEqD,EAAIpD,SACJ,8BAAgCoD,EAAI5D,QAAQd,YAGlD,IAEA2E,YAAW,WACT5G,GAAO4C,EAAIE,KAAK/C,KAChBE,GAAW2C,EAAIE,KAAKlE,SACpBuC,IAAQ,EACV,GAAG,KAEHyF,YAAW,WACTvF,IAAc,GACdF,IAAQ,GACRzB,EAAmB,CAAC,CAAEkC,IAAK,GAAII,KAAM,eACrCpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BjB,GAAS,IACTF,GAAQ,CACNkE,qBAAsB,GACtBC,kBAAmB,GACnB/B,gBAAiB,GACjBiC,kBAAmB,GACnBc,kBAAmB,GACnBb,WAAY,GACZtD,uBAAwB,GACxBoD,UAAW,GACXlD,eAAgB,GAChB8E,aAAc,UACdvG,cAAeA,KAEjB7B,EAAMqI,QAAQC,KAAK,CACjBC,SAAU,iCAEd,GAAG,IACL,IACC9D,OAAM,SAAC+D,GACN7D,QAAQC,IAAI4D,EACd,GACJ,IACC/D,OAAM,SAAC+D,GACN7D,QAAQC,IAAI4D,EACd,GACJ,CACF,EA4SoCC,QAAQ,sBAAqB,WACrD,0BACE,SAAC,IAAG,WACF,UAAC,IAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAI,WACrC,4BACE,2BACE,wBAAI,cACJ,wBAAI,aACJ,wBAAI,eACJ,wBAAI,4BAGR,2BACGxG,GAAMyG,KAAI,SAACC,GAAI,OACd,2BACE,wBAAKA,EAAKC,WACV,wBAAKD,EAAKE,UACV,wBAAKF,EAAKG,YACV,wBAAKH,EAAKvE,oBACP,cAOf,UAAC,IAAG,CAACyB,UAAU,OAAM,WACnB,UAAC,UAAU,CAACkD,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,oCACZ,SAAC,YAAY,CACXC,SAAU,SAAClD,GAAC,OACVtD,GAAS,uBAAwBsD,EAAEmD,OAAOvG,MAAM,EAElDA,MAAOZ,GAAKmE,qBACZL,UAAU,WACVsD,KAAK,OACLC,YAAajH,GAAO+D,wBAEtB,SAAC,qBAAqB,CAACiD,KAAK,UAAS,SAClChH,GAAO+D,2BAIZ,UAAC,UAAU,CAAC6C,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,kCACZ,SAAC,YAAY,CACXC,SAAU,SAAClD,GAAC,OACVtD,GAAS,oBAAqBsD,EAAEmD,OAAOvG,MAAM,EAE/CA,MAAOZ,GAAKoE,kBACZN,UAAU,WACVsD,KAAK,OACLC,YAAajH,GAAOgE,qBAEtB,SAAC,qBAAqB,CAACgD,KAAK,UAAS,SAClChH,GAAOgE,wBAIZ,SAAC,UAAU,CAAC4C,GAAIC,EAAAA,QAElB,UAAC,IAAG,YACF,UAAC,UAAU,CAACD,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,4BACZ,UAAC,YAAY,CACXC,SAAU,SAAClD,GAAC,OACVtD,GAAS,kBAAmBsD,EAAEmD,OAAOvG,MAAM,EAE7CA,MAAOZ,GAAKqC,gBACZ2E,GAAG,SACHM,aAAa,YACbD,YAAajH,GAAOiC,gBAAgB,WAEpC,4BAAQ,eACR,4BAAQ,mBACR,4BAAQ,kBACR,4BAAQ,gBACR,4BAAQ,iBACR,4BAAQ,qBAEV,SAAC,qBAAqB,CAAC+E,KAAK,UAAS,SAClChH,GAAOiC,sBAIZ,UAAC,UAAU,CAAC2E,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,sBACZ,UAAC,YAAY,CACXC,SAnXqB,SAAClD,GACf,cAAnBA,EAAEmD,OAAOvG,QACXF,GAAS,yBAA0BsD,EAAEmD,OAAOvG,OAC5C9B,EAAmB,CAAC,CAAEkC,IAAK,GAAII,KAAM,eACrCpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,gBAGhC,IAAK,IAAImG,EAAI,EAAGA,EAAI5I,EAAawE,OAAQoE,IACvC,GAAI5I,EAAa4I,GAAGvG,MAAQgD,EAAEmD,OAAOvG,MAInC,OAAQjC,EAAa4I,GAAG5I,aAAawE,QACnC,KAAK,EACHrE,EAAmB,CAAC,CAAEkC,IAAK,GAAII,KAAM,eACrCpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB,GACnBc,kBAAmB,GACnBb,WAAY,GACZtD,uBAAwB+C,EAAEmD,OAAOvG,MACjCqF,aAAc,aAEV7F,GAA+B,wBACnCC,IAAU,kBACLD,IAAM,IACTa,uBAAwB,QAE5B,MACF,KAAK,EACHnC,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CV,GAAS,oBAAqB/B,EAAa4I,GAAG5I,aAAa,GAAGqC,KAC9DhC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmB,GACnBb,WAAY,GACZtD,uBAAwB+C,EAAEmD,OAAOvG,MACjCqF,aAAc,aAEV7F,GAA+B,wBACnCC,IAAU,kBACLD,IAAM,IACTa,uBAAwB,QAG5B,MACF,KAAK,EACHnC,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,gBACrClC,EAAY,CACV,CACE8B,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmB,GACnBb,WAAY5F,EAAa4I,GAAG5I,aAAa,GAAGqC,IAC5CC,uBAAwB+C,EAAEmD,OAAOvG,MACjCqF,aAAc,aAEV7F,GAA+B,wBACnCC,IAAU,kBACLD,IAAM,IACTa,uBAAwB,QAE5B,MACF,KAAK,EACHnC,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CpC,EAAmB,CACjB,CACEgC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1ClC,EAAY,CACV,CACE8B,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmBzG,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDuD,WAAY5F,EAAa4I,GAAG5I,aAAa,GAAGqC,IAC5CC,uBAAwB+C,EAAEmD,OAAOvG,MACjCqF,aAAc,aAEV7F,GAA+B,wBACnCC,IAAU,kBACLD,IAAM,IACTa,uBAAwB,QAOtC,EA0PkB+F,GAAG,SACHpG,MAAOZ,GAAKiB,uBACZqG,aAAa,YACbD,YAAajH,GAAOa,uBAAuB,WAE3C,4BAAQ,cACP5C,EAAMsI,KAAI,SAACa,GAAG,OACb,mBAAQ5G,MAAO4G,EAAIxG,IAAI,SAAEwG,EAAIpG,MAAc,QAG/C,SAAC,qBAAqB,CAACgG,KAAK,UAAS,SAClChH,GAAOa,6BAIZ,UAAC,UAAU,CAAC+F,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,mBACZ,UAAC,YAAY,CACXC,SAzQW,SAAClD,GAI5B,GAAuB,QAAnBA,EAAEmD,OAAOvG,MAAiB,CAC5B,IAAI6G,EAAe9I,EAAamC,QAC9B,SAACC,GAAG,MAAiC,YAA5BA,EAAIoB,QAAQd,WAAyB,IAEhDvC,EAAmB2I,GACnBzI,EAAmByI,GACnBvI,EAAYuI,GACZxH,IAAQ,kBACHD,IAAI,IACPsE,kBAAmBmD,EAAa,GAAGzG,IACnCoE,kBAAmBqC,EAAa,GAAGzG,IACnCuD,WAAYkD,EAAa,GAAGzG,IAC5BiF,aAAcjC,EAAEmD,OAAOvG,SAEnBR,GAAqB,cACzBC,IAAU,kBACLD,IAAM,IACTa,uBAAwB,OAE9B,MAAO,GAAuB,YAAnB+C,EAAEmD,OAAOvG,MAClB,IAAK,IAAI2G,EAAI,EAAGA,EAAI5I,EAAawE,OAAQoE,IACvC,GAAI5I,EAAa4I,GAAGvG,MAAQhB,GAAKiB,uBAC/B,OAAQtC,EAAa4I,GAAG5I,aAAawE,QACnC,KAAK,EACHrE,EAAmB,CAAC,CAAEkC,IAAK,GAAII,KAAM,eACrCpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB,GACnBc,kBAAmB,GACnBb,WAAY,GACZ0B,aAAcjC,EAAEmD,OAAOvG,SAEnBR,GAAqB,cACzBC,IAAU,kBACLD,IAAM,IACT6F,aAAc,QAElB,MACF,KAAK,EACHnH,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CV,GACE,oBACA/B,EAAa4I,GAAG5I,aAAa,GAAGqC,KAElChC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,eACrClC,EAAY,CAAC,CAAE8B,IAAK,GAAII,KAAM,eAC9BnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmB,GACnBb,WAAY,GACZ0B,aAAcjC,EAAEmD,OAAOvG,SAEnBR,GAAqB,cACzBC,IAAU,kBACLD,IAAM,IACT6F,aAAc,QAGlB,MACF,KAAK,EACHnH,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CpC,EAAmB,CAAC,CAAEgC,IAAK,GAAII,KAAM,gBACrClC,EAAY,CACV,CACE8B,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmB,GACnBb,WAAY5F,EAAa4I,GAAG5I,aAAa,GAAGqC,IAC5CiF,aAAcjC,EAAEmD,OAAOvG,SAEnBR,GAAqB,cACzBC,IAAU,kBACLD,IAAM,IACT6F,aAAc,QAElB,MACF,KAAK,EACHnH,EAAmB,CACjB,CACEkC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CpC,EAAmB,CACjB,CACEgC,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1ClC,EAAY,CACV,CACE8B,IAAKrC,EAAa4I,GAAG5I,aAAa,GAAGqC,IACrCI,KAAMzC,EAAa4I,GAAG5I,aAAa,GAAGyC,QAG1CnB,IAAQ,kBACHD,IAAI,IACPsE,kBAAmB3F,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDoE,kBAAmBzG,EAAa4I,GAAG5I,aAAa,GAAGqC,IACnDuD,WAAY5F,EAAa4I,GAAG5I,aAAa,GAAGqC,IAC5CiF,aAAcjC,EAAEmD,OAAOvG,SAEnBR,GAAqB,cACzBC,IAAU,kBACLD,IAAM,IACT6F,aAAc,QAQ9B,EAmIkBe,GAAG,SACHpG,MAAOZ,GAAKiG,aACZqB,aAAa,YACbD,YAAajH,GAAOgB,KAAK,WAEzB,4BAAQ,aACR,4BAAQ,kBAKd,UAAC,IAAG,YACF,UAAC,UAAU,CAAC4F,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,+BACZ,SAAC,YAAY,CACXD,GAAG,SACHE,SAAU,SAAClD,GAAC,OACVtD,GAAS,oBAAqBsD,EAAEmD,OAAOvG,MAAM,EAE/CA,MAAOZ,GAAKsE,kBACZgD,aAAa,YACbD,YAAajH,GAAOkE,kBAAkB,SAErCzF,EAAgB8H,KAAI,SAACa,GAAG,OACvB,mBAAQ5G,MAAO4G,EAAIxG,IAAI,SAAEwG,EAAIpG,MAAc,OAG/C,SAAC,qBAAqB,CAACgG,KAAK,UAAS,SAClChH,GAAOkE,wBAIZ,UAAC,UAAU,CAAC0C,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,+BACZ,SAAC,YAAY,CACXD,GAAG,SACHE,SAAU,SAAClD,GAAC,OACVtD,GAAS,oBAAqBsD,EAAEmD,OAAOvG,MAAM,EAE/CA,MAAOZ,GAAKoF,kBACZkC,aAAa,YAAW,SAEvBvI,EAAgB4H,KAAI,SAACa,GAAG,OACvB,mBAAQ5G,MAAO4G,EAAIxG,IAAI,SAAEwG,EAAIpG,MAAc,UAKjD,UAAC,UAAU,CAAC4F,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,iBACZ,SAAC,YAAY,CACXD,GAAG,SACHE,SAAU,SAAClD,GAAC,OAAKtD,GAAS,aAAcsD,EAAEmD,OAAOvG,MAAM,EACvDA,MAAOZ,GAAKuE,WACZ+C,aAAa,YACbD,YAAajH,GAAOmE,WAAW,SAE9BtF,EAAS0H,KAAI,SAACa,GAAG,OAChB,mBAAQ5G,MAAO4G,EAAIxG,IAAI,SAAEwG,EAAIpG,MAAc,OAG/C,SAAC,qBAAqB,CAACgG,KAAK,UAAS,SAClChH,GAAOmE,oBAKd,SAAC,IAAG,WACF,UAAC,UAAU,CAACyC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,2BACZ,SAAC,YAAY,CACXC,SAAU,SAAClD,GAAC,OAAKtD,GAAS,YAAasD,EAAEmD,OAAOvG,MAAM,EACtDA,MAAOZ,GAAKqE,UACZ2C,GAAG,WACHU,KAAM,EACNC,YAAY,GACZN,YAAajH,GAAOiE,aAEtB,SAAC,qBAAqB,CAAC+C,KAAK,UAAS,SAClChH,GAAOiE,kBAKd,UAAC,IAAG,CAACP,UAAU,OAAM,WACnB,UAAC,UAAU,CAACkD,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,4BACZ,UAAC,YAAY,CACXC,SAAU,SAAClD,GAAC,OAAKtD,GAAS,iBAAkBsD,EAAEmD,OAAOvG,MAAM,EAC3DA,MAAOZ,GAAKmB,eACZ6F,GAAG,SACHM,aAAa,YACbD,YAAajH,GAAOe,eAAe,WAEnC,4BAAQ,cACP1C,EAAUkI,KAAI,SAACa,GAAG,OACjB,mBAAQ5G,MAAO4G,EAAIxG,IAAI,SAAEwG,EAAInG,aAAqB,QAGtD,SAAC,qBAAqB,CAAC+F,KAAK,UAAS,SAClChH,GAAOe,qBAIZ,UAAC,UAAU,CAAC6F,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,sBACZ,mBACA,SAAC,IAAM,CACLW,QAtsBO,SAAC5D,GAWxB,IATA,IAAI6D,EAAWC,IAAAA,MAAAA,WAIXC,GAAgB,OACf,IAAIC,IAAInK,EAAMoE,SAASC,KAAKyE,KAAI,SAACZ,GAAG,OAAKA,EAAIkC,SAAS,MAIlDV,EAAI,EAAGA,EAAIjI,GAAS6D,OAAQoE,IACnC,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAiB5E,OAAQ+E,IAE3C,GAAIH,EAAiBG,KAAO5I,GAASiI,GAAGU,UAAW,CACjD,IAAIE,EAAgB,IAEpBA,EAAgBtK,EAAMoE,SAASC,KAC5BpB,QAAO,SAACiF,GAAG,OAAKA,EAAIkC,YAAcF,EAAiBG,EAAE,IACrDvB,KAAI,SAACZ,GAAG,OAAKA,EAAIqC,UAAU,KAChBC,QAAQ/I,GAASiI,GAAGa,YAElC,IAAIE,EAAKR,IAAAA,MAAAA,aAAwBK,GACjCL,IAAAA,MAAAA,kBACED,EACAS,EACAhJ,GAASiI,GAAGgB,WAAa,IAAMjJ,GAASiI,GAAGU,UAE/C,CAGJH,IAAAA,UAAeD,EAAU,wBAE3B,EAsqBkB7J,QAAQ,UACRoJ,KAAK,SAAQ,SACd,0BAKH,UAAC,UAAU,CAACJ,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,8BACZ,SAAC,UAAU,CACTC,SAAU,SAAClD,GAAC,OAAKrE,IAAkBD,GAAc,EACjDkB,MAAOlB,GACP8I,QAAS9I,GACToE,UAAU,WACV2E,GAAG,kBACHrB,KAAK,eAIT,UAAC,UAAU,CAACJ,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,iCACZ,mBACA,SAAC,YAAY,CACXG,KAAK,OACLsB,UAAQ,EACRxB,SA3hBI,SAAClD,GACrBvE,GAAiBuE,EAAEmD,OAAOxB,MAE5B,EAyhBkBe,KAAK,cAKX,SAAC,IAAM,CAAC1I,QAAQ,UAAUoJ,KAAK,SAAQ,SAAC,oCAUhD,SAAC,IAAQ,CACP9G,KAAMA,GACNqI,iBAAkB,IAClBC,QAASjF,GACTkF,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAW,UAExD,SAACpL,EAAK,CAACiL,QAASjF,GAAaqF,SAAUhL,GAASiL,GAAI,CAAEC,MAAO,QAAS,SACnE/J,QAIL,SAAC,IAAM,CACLmB,KAAME,GACNoI,QAASjF,GACT,kBAAgB,qBAChB,mBAAiB,2BAA0B,UAE3C,SAAC,IAAa,WACZ,SAAC,IAAG,CAACsF,GAAI,CAAEE,QAAS,QAAS,UAC3B,SAAC,IAAgB,YAM7B,G,oBCt6BAC,EAAOC,QAAyB,iBAARC,KAAmBA,KAAKxE,SAAWyE,OAAOzE,Q,yGCC9D0E,EAAY,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,cAIvGC,EAAqB7L,EAAAA,YAAiB,SAAU8L,EAAM5L,GACxD,IAAI6L,EAAWD,EAAKC,SAChB7F,EAAY4F,EAAK5F,UACjByC,EAAUmD,EAAKnD,QACfC,EAAWkD,EAAKlD,SAChBoD,EAAaF,EAAKE,WAClBnD,EAAQiD,EAAKjD,MACbC,EAAOgD,EAAKhD,KACZ1I,EAAU0L,EAAK1L,QACf6L,EAAaH,EAAKG,WAClBhM,GAAQiM,EAAAA,EAAAA,GAA8BJ,EAAMF,GAE5CO,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,SACjDM,EAAUC,IAAWpG,EAAWiG,EAAmB/L,GAAW+L,EAAoB,IAAM/L,EAAS0I,GAAQqD,EAAoB,IAAMrD,EAAMH,GAAWwD,EAAoB,WAAYvD,GAAYuD,EAAoB,YAAaH,GAAcG,EAAoB,cAAetD,GAASsD,EAAoB,UAC/SI,EAAqBvM,EAAAA,cAAoB,SAASwM,EAAAA,EAAAA,GAAS,CAAC,EAAGvM,EAAO,CACxEiG,UAAWmG,EACXnM,IAAKA,KAGP,GAAI+L,EAAY,CACd,IAAIQ,EAAkBN,EAAoB,cAM1C,MAJ0B,kBAAfF,IACTQ,EAAkBA,EAAkB,IAAMR,GAGxBjM,EAAAA,cAAoB,MAAO,CAC7CkG,UAAWuG,GACVF,EACL,CAEA,OAAOA,CACT,IACA,K","sources":["components/SubconAllocationBody.jsx","../node_modules/form-data/lib/browser.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport XLSX from \"xlsx\";\r\nimport FormData from \"form-data\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nlet selectedMobitelOfficer = null;\r\nlet selectedSubcon = null;\r\n\r\nfunction SubconAllocationBody(props) {\r\n  // console.log(props.location.data);\r\n  let [users, setUsers] = useState([]);\r\n  let [subconUsers, setSubconUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [approvalPath, setApprovalPath] = useState([]);\r\n  let [verificationOne, setVerificationOne] = useState([]);\r\n  let [verificationTwo, setVerificationTwo] = useState([]);\r\n  let [approval, setApproval] = useState([]);\r\n  let [msg, setMsg] = useState(\"\");\r\n  let [variant, setVariant] = useState(\"\");\r\n  let [projects, setProjects] = useState([]);\r\n  let [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [isBoqRequired, setIsBoqRequired] = useState(true); // Default value is 'true'\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [tasks, setTasks] = useState([]);\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  // Get Assign Officer and Subcon Names to the Task History\r\n  const temp1 = users.filter(\r\n    (obj) => obj._id === form.assignedMobitelOfficer\r\n  )[0];\r\n  const temp2 = companies.filter((obj) => obj._id === form.assignedSubcon)[0];\r\n\r\n  if ((temp1, temp2)) {\r\n    selectedMobitelOfficer = temp1.name;\r\n    selectedSubcon = temp2.companyName;\r\n  }\r\n\r\n  const findFormErrors = () => {\r\n    const {\r\n      plannedTaskStartDate,\r\n      targetTaskComDate,\r\n      taskAssignedDiv,\r\n      assignedMobitelOfficer,\r\n      workScope,\r\n      assignedSubcon,\r\n      verificationOneId,\r\n      approvalId,\r\n    } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!plannedTaskStartDate || plannedTaskStartDate === \"\")\r\n      newErrors.plannedTaskStartDate = \"cannot be blank!\";\r\n    else if (new Date(plannedTaskStartDate).getTime() <= new Date().getTime())\r\n      newErrors.plannedTaskStartDate = \"Select a correct date!\";\r\n    if (!targetTaskComDate || targetTaskComDate === \"\")\r\n      newErrors.targetTaskComDate = \"cannot be blank!\";\r\n    else if (\r\n      new Date(targetTaskComDate).getTime() <= new Date().getTime() ||\r\n      new Date(targetTaskComDate).getTime() <=\r\n        new Date(plannedTaskStartDate).getTime()\r\n    )\r\n      newErrors.targetTaskComDate = \"Select a correct date!\";\r\n    if (\r\n      !taskAssignedDiv ||\r\n      taskAssignedDiv === \"\" ||\r\n      taskAssignedDiv === \"Choose...\"\r\n    )\r\n      newErrors.taskAssignedDiv = \"Choose a division!\";\r\n    if (\r\n      !assignedMobitelOfficer ||\r\n      assignedMobitelOfficer === \"\" ||\r\n      assignedMobitelOfficer === \"Choose...\"\r\n    )\r\n      newErrors.assignedMobitelOfficer = \"Choose a Mobitel Officer!\";\r\n    if (!workScope || workScope === \"\")\r\n      newErrors.workScope = \"cannot be blank!\";\r\n    if (!assignedSubcon || assignedSubcon === \"\")\r\n      newErrors.assignedSubcon = \"Choose a Subcontractor!\";\r\n    // if (!verificationOneId || verificationOneId === \"\")\r\n    //   newErrors.verificationOneId = \"Choose a officer!\";\r\n    // if (!approvalId || approvalId === \"\")\r\n    //   newErrors.approvalId = \"Choose a officer!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data.users)\r\n        setTasks(props.location.data);\r\n        setSubconUsers(\r\n          res.data.users.filter((obj) => obj.company.companyName !== \"Mobitel\")\r\n        );\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj[\"userCanAssignForTask\"] === true)\r\n        );\r\n\r\n        setCompanies(\r\n          res.data.companys.filter((obj) => obj.companyName !== \"Mobitel\")\r\n        );\r\n        setApprovalPath(res.data.users);\r\n\r\n        setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n        setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n        setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n        setForm({\r\n          taskAssignedDiv: props.location.data[0].taskAssignedDiv,\r\n        });\r\n\r\n        //get available project templates\r\n        setProjects(res.data.projects);\r\n        // console.log(\"---\");\r\n        // console.log(res.data.projects);\r\n        // console.log(\"---\");\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const downloadHandover = (e) => {\r\n    //Create Downloadable excel file\r\n    var workbook = XLSX.utils.book_new();\r\n    var aoa_projects = [];\r\n\r\n    //get selected projects\r\n    var selectedProjects = [\r\n      ...new Set(props.location.data.map((ele) => ele.projectID)),\r\n    ];\r\n    var selectedProjectsHeaderData = [];\r\n\r\n    for (var i = 0; i < projects.length; i++) {\r\n      for (var j = 0; j < selectedProjects.length; j++) {\r\n        // console.log(projects[i])\r\n        if (selectedProjects[j] === projects[i].projectID) {\r\n          var worksheetData = [];\r\n\r\n          worksheetData = props.location.data\r\n            .filter((ele) => ele.projectID === selectedProjects[j])\r\n            .map((ele) => ele.properties);\r\n          worksheetData.unshift(projects[i].properties);\r\n          // console.log(worksheetData)\r\n          var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n          XLSX.utils.book_append_sheet(\r\n            workbook,\r\n            ws,\r\n            projects[i].subProject + \"_\" + projects[i].projectID\r\n          );\r\n        }\r\n      }\r\n    }\r\n    XLSX.writeFile(workbook, \"Handover details.xlsx\");\r\n    // console.log(workbook)\r\n  };\r\n\r\n  const smsFetch = async (mobileNo, msg) => {\r\n    // console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\r\n    const url =\r\n      \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\";\r\n    const Body = {\r\n      username: \"smsdigisvc_sci\",\r\n      password: \"Sci@#25\",\r\n      from: \"Mobitel-PMS\",\r\n      to: \"0\" + mobileNo.toString(),\r\n      text: \"New \" + tasks.length + msg,\r\n      mesageType: 0,\r\n    };\r\n    //console.log(JSON.parse(localStorage.getItem(\"user\")))\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Body),\r\n      mode: \"no-cors\",\r\n    };\r\n    const response = await fetch(url, requestOptions);\r\n    // console.log(response)\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      var uploadfiles = new FormData();\r\n\r\n      for (var x = 0; x < selectedFiles.length; x++) {\r\n        uploadfiles.append(\"files\", selectedFiles[x]);\r\n      }\r\n\r\n      var taskApprovalPath = [\r\n        {\r\n          approvalLevel: \"Verification Level 0\",\r\n          assignedOfficer: form.assignedMobitelOfficer,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 1\",\r\n          assignedOfficer: form.verificationOneId,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 2\",\r\n          assignedOfficer: form.verificationTwoId,\r\n        },\r\n        { approvalLevel: \"Final approval\", assignedOfficer: form.approvalId },\r\n      ].filter((element) => element.assignedOfficer != \"\");\r\n\r\n      const taskObject = {\r\n        plannedTaskStartDate: form.plannedTaskStartDate,\r\n        targetTaskComDate: form.targetTaskComDate,\r\n        taskAssignedDiv: form.taskAssignedDiv,\r\n        assignedMobitelOfficer: form.assignedMobitelOfficer,\r\n        workScope: form.workScope,\r\n        assignedSubcon: form.assignedSubcon,\r\n        taskStatus: \"Subcon allocated\",\r\n        approvalPath: taskApprovalPath,\r\n        boqprojectrequirement: isBoqRequired,\r\n      };\r\n\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\"projonline/upload\", uploadfiles, {\r\n          headers: {\r\n            token:\r\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            \"Content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res1) => {\r\n          // console.log(res1)\r\n          taskObject.files = res1.data;\r\n          //props.history.push({pathname:'/initiateSubconAllocationBody', data: {msg,variant}})\r\n          axiosInstance\r\n            .post(\r\n              \"projonline/update\",\r\n              {\r\n                tasks,\r\n                taskObject,\r\n                taskHistory: {\r\n                  taskStatus: taskObject.taskStatus,\r\n                  comment:\r\n                    \"Officer: \" +\r\n                    selectedMobitelOfficer +\r\n                    \" || \" +\r\n                    \"Subcon: \" +\r\n                    selectedSubcon,\r\n                },\r\n              },\r\n              {\r\n                headers: {\r\n                  token:\r\n                    \"Bearer \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n                },\r\n              }\r\n            )\r\n            .then((res) => {\r\n              // console.log(res.statusText)\r\n              //setOpenDialog(true)\r\n              smsFetch(\r\n                users.filter(\r\n                  (obj) => obj._id === form.assignedMobitelOfficer\r\n                )[0].mobileNo,\r\n                \" task/s were assigned to you.\"\r\n              );\r\n              subconUsers.forEach((ele) => {\r\n                if (ele.company._id === form.assignedSubcon) {\r\n                  smsFetch(\r\n                    ele.mobileNo,\r\n                    \" task/s were handedover to \" + ele.company.companyName\r\n                  );\r\n                }\r\n              });\r\n\r\n              setTimeout(() => {\r\n                setMsg(res.data.msg);\r\n                setVariant(res.data.variant);\r\n                setOpen(true);\r\n              }, 2000);\r\n\r\n              setTimeout(() => {\r\n                setOpenDialog(false);\r\n                setOpen(false);\r\n                setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n                setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n                setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n                setTasks([]);\r\n                setForm({\r\n                  plannedTaskStartDate: \"\",\r\n                  targetTaskComDate: \"\",\r\n                  taskAssignedDiv: \"\",\r\n                  verificationOneId: \"\",\r\n                  verificationTwoId: \"\",\r\n                  approvalId: \"\",\r\n                  assignedMobitelOfficer: \"\",\r\n                  workScope: \"\",\r\n                  assignedSubcon: \"\",\r\n                  approvalType: \"Default\",\r\n                  isBoqRequired: isBoqRequired,\r\n                });\r\n                props.history.push({\r\n                  pathname: \"/initiateSubconAllocationBody\",\r\n                });\r\n              }, 5000);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Upload Files\r\n  const onChangeFiles = (e) => {\r\n    setSelectedFiles(e.target.files);\r\n    // console.log(e.target.files)\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  //Assigned Mobitel Officer Handler\r\n  const onChangeAssignedMobitelOfficer = (e) => {\r\n    if (e.target.value === \"Choose...\") {\r\n      setField(\"assignedMobitelOfficer\", e.target.value);\r\n      setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n      setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n      setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n    }\r\n\r\n    for (let i = 0; i < approvalPath.length; i++) {\r\n      if (approvalPath[i]._id === e.target.value) {\r\n        // console.log(e.target.value)\r\n        // console.log(form)\r\n\r\n        switch (approvalPath[i].approvalPath.length) {\r\n          case 0:\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 1:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setField(\"verificationOneId\", approvalPath[i].approvalPath[0]._id);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n          case 2:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: approvalPath[i].approvalPath[1]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 3:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[2]._id,\r\n                name: approvalPath[i].approvalPath[2].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n              approvalId: approvalPath[i].approvalPath[2]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Approval Path Handler\r\n  const onChangeApprovalType = (e) => {\r\n    // console.log(e.target.value)\r\n    // console.log(form.approvalType)\r\n\r\n    if (e.target.value === \"New\") {\r\n      let mobitelUsers = approvalPath.filter(\r\n        (obj) => obj.company.companyName === \"Mobitel\"\r\n      );\r\n      setVerificationOne(mobitelUsers);\r\n      setVerificationTwo(mobitelUsers);\r\n      setApproval(mobitelUsers);\r\n      setForm({\r\n        ...form,\r\n        verificationOneId: mobitelUsers[0]._id,\r\n        verificationTwoId: mobitelUsers[0]._id,\r\n        approvalId: mobitelUsers[0]._id,\r\n        approvalType: e.target.value,\r\n      });\r\n      if (!!errors[\"approvalType\"])\r\n        setErrors({\r\n          ...errors,\r\n          assignedMobitelOfficer: null,\r\n        });\r\n    } else if (e.target.value === \"Default\") {\r\n      for (let i = 0; i < approvalPath.length; i++) {\r\n        if (approvalPath[i]._id === form.assignedMobitelOfficer) {\r\n          switch (approvalPath[i].approvalPath.length) {\r\n            case 0:\r\n              setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: \"\",\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 1:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setField(\r\n                \"verificationOneId\",\r\n                approvalPath[i].approvalPath[0]._id\r\n              );\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n            case 2:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: approvalPath[i].approvalPath[1]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 3:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[2]._id,\r\n                  name: approvalPath[i].approvalPath[2].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n                approvalId: approvalPath[i].approvalPath[2]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Initiate Sub-Contractor Allocation</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <form onSubmit={onSubmit} enctype=\"multipart/form-data\">\r\n              <div>\r\n                <Row>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Ref</th>\r\n                        <th>Site ID</th>\r\n                        <th>Site Name</th>\r\n                        <th>Task Assigned Div</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tasks.map((item) => (\r\n                        <tr>\r\n                          <td>{item.taskRef}</td>\r\n                          <td>{item.siteID}</td>\r\n                          <td>{item.siteName}</td>\r\n                          <td>{item.taskAssignedDiv}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </div>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Commencement Date</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"plannedTaskStartDate\", e.target.value)\r\n                    }\r\n                    value={form.plannedTaskStartDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.plannedTaskStartDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.plannedTaskStartDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Completion Date</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"targetTaskComDate\", e.target.value)\r\n                    }\r\n                    value={form.targetTaskComDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.targetTaskComDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.targetTaskComDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Division</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskAssignedDiv\", e.target.value)\r\n                    }\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned Officer</Form.Label>\r\n                  <Form.Control\r\n                    onChange={onChangeAssignedMobitelOfficer}\r\n                    as=\"select\"\r\n                    value={form.assignedMobitelOfficer}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedMobitelOfficer}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedMobitelOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Approval Path</Form.Label>\r\n                  <Form.Control\r\n                    onChange={onChangeApprovalType}\r\n                    as=\"select\"\r\n                    value={form.approvalType}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.name}\r\n                  >\r\n                    <option>Default</option>\r\n                    <option>New</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 1)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationOneId\", e.target.value)\r\n                    }\r\n                    value={form.verificationOneId}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.verificationOneId}\r\n                  >\r\n                    {verificationOne.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.verificationOneId}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 2)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationTwoId\", e.target.value)\r\n                    }\r\n                    value={form.verificationTwoId}\r\n                    defaultValue=\"Choose...\"\r\n                  >\r\n                    {verificationTwo.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Approval by</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => setField(\"approvalId\", e.target.value)}\r\n                    value={form.approvalId}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.approvalId}\r\n                  >\r\n                    {approval.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.approvalId}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>High level work scope</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"workScope\", e.target.value)}\r\n                    value={form.workScope}\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"\"\r\n                    isInvalid={!!errors.workScope}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.workScope}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned subcontractor</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"assignedSubcon\", e.target.value)}\r\n                    value={form.assignedSubcon}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedSubcon}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {companies.map((opt) => (\r\n                      <option value={opt._id}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedSubcon}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Handover Details</Form.Label>\r\n                  <br />\r\n                  <Button\r\n                    onClick={downloadHandover}\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Click to Download\r\n                  </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label> Boq project requirement</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) => setIsBoqRequired(!isBoqRequired)}\r\n                    value={isBoqRequired}\r\n                    checked={isBoqRequired}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-3\"\r\n                    type=\"switch\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Upload Supporting Documents</Form.Label>\r\n                  <br />\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={onChangeFiles}\r\n                    size=\"lg\"\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Assign Subcontractor\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={variant} sx={{ width: \"100%\" }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(SubconAllocationBody);\r\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Alert","React","props","ref","elevation","variant","selectedMobitelOfficer","selectedSubcon","withRouter","useState","users","setUsers","subconUsers","setSubconUsers","companies","setCompanies","approvalPath","setApprovalPath","verificationOne","setVerificationOne","verificationTwo","setVerificationTwo","approval","setApproval","msg","setMsg","setVariant","projects","setProjects","selectedFiles","setSelectedFiles","isBoqRequired","setIsBoqRequired","axiosInstance","axios","baseURL","process","form","setForm","tasks","setTasks","errors","setErrors","open","setOpen","openDialog","setOpenDialog","setField","field","value","temp1","filter","obj","_id","assignedMobitelOfficer","temp2","assignedSubcon","name","companyName","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","location","data","company","companys","taskAssignedDiv","catch","err","console","log","smsFetch","mobileNo","Body","username","password","from","to","toString","text","length","mesageType","requestOptions","method","body","stringify","mode","fetch","handleClose","event","reason","className","onSubmit","e","preventDefault","newErrors","plannedTaskStartDate","targetTaskComDate","workScope","verificationOneId","approvalId","Date","getTime","findFormErrors","Object","keys","uploadfiles","FormData","x","append","taskApprovalPath","approvalLevel","assignedOfficer","verificationTwoId","element","taskObject","taskStatus","boqprojectrequirement","post","res1","files","taskHistory","comment","forEach","ele","setTimeout","approvalType","history","push","pathname","error","enctype","striped","bordered","hover","size","map","item","taskRef","siteID","siteName","as","Col","onChange","target","type","isInvalid","defaultValue","i","opt","mobitelUsers","rows","placeholder","onClick","workbook","XLSX","selectedProjects","Set","projectID","j","worksheetData","properties","unshift","ws","subProject","checked","id","multiple","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","display","module","exports","self","window","_excluded","Table","_ref","bsPrefix","borderless","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}