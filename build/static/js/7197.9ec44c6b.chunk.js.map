{"version":3,"file":"static/js/7197.9ec44c6b.chunk.js","mappings":"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","sources":["components/BoQPopup.jsx","components/SubmitBoqSpecificTaskBody.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState, forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nlet rateCardData = [];\r\n\r\nexport default function BoQPopup(props) {\r\n  const [filteredData, setFilteredData] = useState(rateCardData);\r\n  const [rateCard, setRateCard] = useState(\"all\");\r\n  const { openPopup, setOpenPopup } = props;\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    rateCardData = [];\r\n    axiosInstance\r\n      .get(\"projonline/allRateCards\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        const filter = res.data.filter(\r\n          (task) =>\r\n            task.rateCardSubcon._id ===\r\n              JSON.parse(localStorage.getItem(\"user\")).company._id &&\r\n            task.rateCardValidTo >= props.acceptedDate &&\r\n            task.rateCardValidFrom <= props.acceptedDate\r\n        );\r\n        // console.log(filter)\r\n        filter.forEach((card) => {\r\n          card.rateCardItems.forEach((item) => {\r\n            item[\"rateCardDiv\"] = card.rateCardDiv;\r\n            rateCardData.push(item);\r\n          });\r\n        });\r\n\r\n        // console.log(rateCardData)\r\n        //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      cellStyle: { width: 400, minWidth: 400, maxWidth: 400, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      cellStyle: { width: 200, minWidth: 200, maxWidth: 200, height: 1 },\r\n    },\r\n  ];\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const handleRowsSelect = () => {\r\n    if (Array.isArray(selectedRows) && selectedRows.length) {\r\n      props.callBk(filteredData.filter((row) => selectedRows.includes(row)));\r\n    }\r\n\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleRowsSelectClose = () => {\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      rateCard === \"all\"\r\n        ? rateCardData\r\n        : rateCardData.filter((dt) => dt.rateCard === rateCard)\r\n    );\r\n  }, [rateCard]);\r\n\r\n  return (\r\n    <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n      <DialogContent>\r\n        <MaterialTable\r\n          title=\"BOQ Line Items\"\r\n          columns={columns}\r\n          data={filteredData}\r\n          icons={tableIcons}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          options={{\r\n            exportButton: true,\r\n            pageSizeOptions: [5, 10, 20],\r\n            paginationType: \"stepped\",\r\n            showTextRowsSelected: false,\r\n            actionsColumnIndex: -1,\r\n            filtering: true,\r\n            selection: true,\r\n            tableLayout: \"auto\",\r\n            selectionProps: {},\r\n            rowStyle: {\r\n              backgroundColor: \"#EEE\",\r\n            },\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              color: \"#FFF\",\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => (\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={rateCard}\r\n                  onChange={(e) => setRateCard(e.target.value)}\r\n                  style={{ width: 100 }}\r\n                >\r\n                  <MenuItem value={\"all\"}>\r\n                    <em>All</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                  <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                  <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                </Select>\r\n              ),\r\n              tooltip: \"Select Rate Card\",\r\n              isFreeAction: true,\r\n            },\r\n          ]}\r\n          components={{\r\n            Pagination: (props) => (\r\n              <div>\r\n                <Grid container style={{ pading: 15, background: \"#f5f5f5\" }}>\r\n                  <Grid sm={11} align=\"right\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        onClick={handleRowsSelect}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                  <Grid sm={1} align=\"center\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        onClick={handleRowsSelectClose}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                </Grid>\r\n                <TablePagination {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useState, useEffect, forwardRef }  from 'react'\r\nimport {  withRouter } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport { Form, Button, Row, Col} from 'react-bootstrap';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport MaterialTable,{MTablePagination} from 'material-table';\r\nimport {TablePagination} from \"@material-ui/core\"\r\nimport BoQPopup from './BoQPopup'\r\nimport { DataGrid, GridToolbar} from '@mui/x-data-grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\nimport AddBox from '@mui/icons-material/AddBox';\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\n\r\nfunction SubmitBoqSpecificTaskBody(props) {\r\n    \r\n    let [users, setUsers] = useState([]);\r\n    let [companies, setCompanies] = useState([]);\r\n    const [openPopup, setOpenPopup]= useState(false)\r\n    const [boqData, setBoqData] = useState([])\r\n    const [totalCost, setTotalCost] = useState()\r\n    const [approvalHistory,setApproalHistory] = useState([])\r\n    let [severity, setSeverity] = useState(\"\");\r\n    let [alart, setAlart] = useState(\"\");\r\n    const axiosInstance = axios.create({\r\n        baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    })\r\n    \r\n    let [form, setForm] = useState({})\r\n    let [errors, setErrors] = useState({})\r\n    let [open, setOpen] = useState(false);\r\n    let [openDialog, setOpenDialog] = useState(false);\r\n\r\n    let setField = (field, value) => {\r\n    setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n        if ( !!errors[field] ) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n      };\r\n    \r\n    const findFormErrors = () => {\r\n        const {taskCommencedComment} = form\r\n        const newErrors = {}\r\n        // name errors\r\n        //if ( !taskCommencedComment || taskCommencedComment === '' ) newErrors.taskCommencedComment = 'cannot be blank!'\r\n\r\n\r\n        return newErrors\r\n    }\r\n\r\n    const columns = [  \r\n        { title: 'ERP Code', field: 'erpCode', filtering: false, editable: false, cellStyle: {width: 100,minWidth: 100,maxWidth:100, height:1}},\r\n        { title: 'Rate Card Div', field: 'rateCardDiv', editable: false, cellStyle: {width: 100,minWidth: 100,maxWidth:100, height:1}},\r\n        { title: 'Item Discreption', field: 'itemDiscreption', filtering: false, editable: false, cellStyle: {width: 350,minWidth: 350,maxWidth:350, height:1}},\r\n        { title: 'UoM', field: 'itemUom', editable: false,cellStyle: {width: 50,minWidth: 50,maxWidth:50, height:1} },    \r\n        { title: 'Unit Rate', field: 'itemRate', editable:false, filtering: false,cellStyle: {width: 100,minWidth: 100,maxWidth:100, height:1}},\r\n        { title: 'Quantity', field: 'itemQty',cellStyle: {width: 50,minWidth: 50,maxWidth:50, height:1}},\r\n        { title: 'Item Total', field: 'itemTotal', type: 'currency', currencySetting: { currencyCode: 'LKR' }, editable: false, cellStyle: {width: 100,minWidth: 100,maxWidth:100, height:1}},\r\n        { title: 'Comment', field: 'itemComment', editable: \"onUpdate\", cellStyle: {width: 100,minWidth: 100,maxWidth:100, height:1}},\r\n        \r\n      ];\r\n\r\n      //Approal History download table\r\n    const columns_AH = [\r\n        { field: 'taskStatus', headerName: 'Status', width: 250  },\r\n        { field: 'performedDate', headerName: 'Performed Date', width: 200, valueGetter: (params) => params.row.performedDate.split('T')[0]  },\r\n        { field: 'performedBy', headerName: 'Performed by', width: 200, valueGetter: (params) => params.row.performedBy.name  },\r\n        { field: 'comment', headerName: 'Comment', width: 500  }\r\n        \r\n        ];\r\n\r\n      function getBoqTotal() {\r\n        var total=0;\r\n        for (let i = 0; i < boqData.length; i++) {     \r\n         total = total + boqData[ i ].itemRate*boqData[ i ].itemQty     \r\n        }\r\n        setTotalCost(total) \r\n        return total;\r\n      }\r\n\r\n      const addSelectedItems = function ( items ) {    \r\n        var boq = [...boqData]    \r\n        items.map( (item) => {              \r\n            const obj = {          \r\n              erpCode: item.erpCode,\r\n              rateCardDiv:item.rateCardDiv,\r\n              itemDiscreption: item.itemDiscreption,\r\n              itemRate: item.itemRate.toFixed(2),\r\n              itemUom: item.itemUom,\r\n              itemQty: 1,\r\n              area: 'Colombo',\r\n              itemTotal:  item.itemRate.toFixed(2),\r\n          }\r\n          boq.push(obj)     \r\n        })\r\n        setBoqData(boq)    \r\n      }\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        \r\n            // setAcceptedDate(props.location.data.row.taskHistory.find(x=>x.taskStatus==='Task accepted').performedDate)\r\n        // console.log(props.location.data)\r\n        setUsers([{name:props.location.data.row.assignedMobitelOfficer.name}])\r\n        setCompanies([{companyName:props.location.data.row.assignedSubcon.companyName}])\r\n        setForm({\r\n                'taskRef':props.location.data.row.taskRef,\r\n                'siteID':props.location.data.row.siteID,\r\n                'siteName':props.location.data.row.siteName,\r\n                'actualTaskStartDate':props.location.data.row.taskHistory.find(x=>x.taskStatus==='Task commenced').performedDate.split('T')[0],\r\n                'actualTaskCompletedDate':props.location.data.row.taskHistory.find(x=>x.taskStatus==='Task completed').performedDate.split('T')[0],\r\n                'taskAssignedDiv':props.location.data.row.taskAssignedDiv,\r\n                'assignedMobitelOfficer': props.location.data.row.assignedMobitelOfficer.name,\r\n                'workScope':props.location.data.row.workScope,\r\n                'assignedSubcon': props.location.data.row.assignedSubcon.companyName\r\n            })\r\n        setApproalHistory(props.location.data.row.taskHistory.filter((e)=>(e.taskStatus===\"BOQ Verified_0\")||(e.taskStatus===\"BOQ Verified_1\")||(e.taskStatus===\"BOQ Verified_2\")||(e.taskStatus===\"BOQ Rejected\")||(e.taskStatus===\"BOQ submitted\"))) \r\n        if(props.location.data.row.taskStatus===\"BOQ Rejected\"){\r\n            setBoqData(props.location.data.row.boqs[props.location.data.row.boqs.length-1].boqData)\r\n        setTotalCost(props.location.data.row.boqs[props.location.data.row.boqs.length-1].totalCost)\r\n        }\r\n        \r\n        \r\n\r\n        \r\n    } , [ ] )\r\n\r\n\r\n    const smsFetch = async (mobileNo) => {\r\n        //console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\r\n        const url = \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\"\r\n        const Body ={\r\n            \"username\" : \"smsdigisvc_sci\", \r\n            \"password\" : \"Sci@#25\", \r\n            \"from\": \"Mobitel-PMS\", \r\n            \"to\": \"0\"+mobileNo, \r\n            \"text\": \"You have new BOQ to review. Please login to https://projectonline.mobitel.lk/\",\r\n            \"mesageType\":0\r\n        }\r\n        //console.log(JSON.parse(localStorage.getItem(\"user\")))\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: JSON.stringify(Body),\r\n            mode: 'no-cors'\r\n        };\r\n        const response = await fetch(url,requestOptions);\r\n        // console.log(response)\r\n\r\n    };\r\n\r\n    const onAccept=(e)=> {\r\n        e.preventDefault()\r\n\r\n        const newErrors = findFormErrors()\r\n        // Conditional logic:\r\n        if ( Object.keys(newErrors).length > 0 ) {\r\n            // We got errors!\r\n            setErrors(newErrors)\r\n        } else {\r\n            const taskObject = {\r\n                taskStatus: 'BOQ submitted'\r\n            };\r\n\r\n            // console.log(form.assignedMobitelOfficer)\r\n\r\n            axiosInstance.put('projonline/update/'+props.location.data.row._id, {totalCost,boqData,taskObject,taskHistory:{taskStatus: 'BOQ submitted', comment: form.boqSubmittedComment}},{headers:{token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken}})\r\n                .then((res) => {\r\n                    // console.log(res.data)\r\n                    \r\n                    smsFetch(props.location.data.row.assignedMobitelOfficer.mobileNo)\r\n\r\n                    setOpenDialog(true)\r\n\r\n                    setTimeout(() => {\r\n                        setAlart(res.data.alart)\r\n                        setSeverity(res.data.severity)\r\n                        setOpen(true)\r\n                    }, 2000)\r\n                    \r\n                    setTimeout(() => {\r\n                        setOpenDialog(false)\r\n                        setOpen(false)\r\n                        props.history.push({pathname:'/submitBoqTasks'})\r\n                    }, 5000)\r\n\r\n                }).catch((error) => {\r\n                    console.log(error)\r\n                    \r\n                });\r\n            }\r\n\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            \r\n                        {/* Content Wrapper. Contains page content */}\r\n            <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}\r\n            <div className=\"content-header\">\r\n            <section className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <h1>Sumbit BOQ Task ID: {form.taskRef} </h1>\r\n                        </div>\r\n                    </div>\r\n                    </div>{/* /.container-fluid */}\r\n                </section>\r\n            </div>\r\n            {/* /.content-header */}\r\n            {/* Main content */}\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                <Form >\r\n                    \r\n                    <Row>\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Site ID</Form.Label>\r\n                            <Form.Control disabled value = {form.siteID} className=\"col-md-9\" type=\"text\" placeholder=\"Enter site ID\" isInvalid={ !!errors.siteID }/>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.siteID }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Site Name</Form.Label>\r\n                            <Form.Control  disabled value = {form.siteName} type=\"text\" placeholder=\"Enter site Name\" isInvalid={ !!errors.siteName }/>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.siteName }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"\">\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    \r\n\r\n                    <Row className=\"mb-3\">\r\n                        \r\n\r\n                        <Form.Group as={Col} >\r\n                        <Form.Label>Actual Work Commencement Date</Form.Label>\r\n                            <Form.Control disabled value = {form.actualTaskStartDate}  className=\"col-md-9\" type=\"date\" isInvalid={ !!errors.actualTaskStartDate }/>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.actualTaskStartDate }\r\n                            </Form.Control.Feedback>\r\n                            \r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Actual Work Completed Date</Form.Label>\r\n                            <Form.Control disabled value = {form.actualTaskCompletedDate}  className=\"col-md-9\" type=\"date\" isInvalid={ !!errors.actualTaskCompletedDate }/>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.actualTaskCompletedDate }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} >\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Task Assigned Division</Form.Label>\r\n                            <Form.Control disabled value = {form.taskAssignedDiv} as=\"select\" defaultValue=\"Choose...\" isInvalid={ !!errors.taskAssignedDiv }>\r\n                                <option>Choose...</option>\r\n                                <option>Project_Radio</option>\r\n                                <option>Project_Core</option>\r\n                                <option>Project_TX</option>\r\n                                <option>Project_IBS</option>\r\n                                <option>Project_WiFi</option>\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.taskAssignedDiv }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Assigned Mobitel Officer</Form.Label>\r\n                            <Form.Control disabled as=\"select\" value = {form.assignedMobitelOfficer} defaultValue=\"Choose...\" isInvalid={ !!errors.assignedMobitelOfficer }>\r\n                                <option>Choose...</option>\r\n                                {users.map(opt => (\r\n                                    <option value={opt._id}>{opt.name}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.assignedMobitelOfficer }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>Assigned subcontractor</Form.Label>\r\n                            <Form.Control disabled value={form.assignedSubcon} as=\"select\" defaultValue=\"Choose...\" isInvalid={ !!errors.assignedSubcon } >\r\n                                <option>Choose...</option>\r\n                                {companies.map(opt => (\r\n                                        <option value={opt._id}>{opt.companyName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                    { errors.assignedSubcon }\r\n                            </Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <Form.Group as={Col} >\r\n                            <Form.Label>High level work scope</Form.Label>\r\n                            <Form.Control disabled value={form.workScope}  as=\"textarea\" rows={2}  placeholder=\"\" isInvalid={ !!errors.workScope } />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                { errors.workScope }\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                    </Row>                 \r\n                                          \r\n                </Form>\r\n\r\n                <MaterialTable\r\n                    title={'New BOQ Submission-'+ form.siteID + '_' + form.taskRef}\r\n                    data={boqData}\r\n                    columns={columns}\r\n                    icons={tableIcons}\r\n                    editable={{           \r\n                        onRowDelete:selectedRow=>new Promise((resolve,reject)=>{\r\n                        const index = selectedRow.tableData.id;\r\n                        const updatedRows = [...boqData]                        \r\n                        updatedRows.splice(index, 1)\r\n                        setTimeout(() => {\r\n                          setBoqData(updatedRows)\r\n                          resolve()},\r\n                          2000)\r\n                      }),\r\n\r\n                      onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve,reject)=>{\r\n                        const index=oldRow.tableData.id;\r\n                        const updatedRows=[...boqData]      \r\n                        updatedRow.itemTotal = updatedRow.itemRate*updatedRow.itemQty                  \r\n                        updatedRows[index]=updatedRow\r\n                        setTimeout(() => {\r\n                          setBoqData(updatedRows)\r\n                          resolve()\r\n                        }, 2000)\r\n                      })\r\n                      \r\n                  }}\r\n                    options={{\r\n                      exportButton: true,\r\n                      pageSizeOptions: [boqData.length,5, 10, 20],\r\n                      paginationType: 'stepped',\r\n                      showTextRowsSelected: false,\r\n                      actionsColumnIndex: -1,\r\n                      filtering: false,\r\n                      tableLayout: \"auto\",\r\n                      rowStyle: {\r\n                        backgroundColor: '#EEE'\r\n                    },\r\n                    headerStyle: {\r\n                        backgroundColor: '#01579b',\r\n                        color: '#FFF'\r\n                      }\r\n                    }}\r\n                    components={{\r\n                      Pagination: (props) => (\r\n                        <>\r\n                          <Grid container style={{ pading: 300, background: '#f5f5f5' }}>\r\n                            <Grid sm={9} item>\r\n                              <Typography align='right' variant='subtitle1' fontWeight='bold'>\r\n                                Total\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid sm={3} align='right' fontWeight='bold'>\r\n                              {\"LKR \"+getBoqTotal().toFixed(2)}\r\n                            </Grid>\r\n                          </Grid>\r\n                          <TablePagination {...props}/>\r\n                        </>\r\n                      ),\r\n                    }}\r\n                    actions={[\r\n                      {icon:()=><Button variant=\"contained\">Add</Button>,\r\n                      tooltip:\"Add Line Item\",\r\n                      onClick:()=>setOpenPopup(true),\r\n                    isFreeAction:true},                    \r\n                    ]}>\r\n\r\n                </MaterialTable>\r\n\r\n                <br/>\r\n                <Row>\r\n                        <Form.Group as={Col} >\r\n                        <Form.Label>Approval History</Form.Label>\r\n                        <div style={{ height: 250, width: '100%' }}>\r\n                            <DataGrid\r\n                                getRowId={(history)=>history._id}\r\n                                rows={approvalHistory}\r\n                                columns={columns_AH}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                                rowHeight={30}\r\n                                headerHeight= {40}\r\n                            />\r\n                            \r\n                        </div>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                <br />\r\n                <Button variant=\"primary\" onClick={onAccept}>\r\n                            Submit BOQ\r\n                </Button>\r\n                <br />\r\n                </div>\r\n                <br />\r\n                {/* /.container-fluid */}\r\n            </section>\r\n            {/* /.content */}\r\n            \r\n            \r\n            </div>\r\n\r\n            <BoQPopup \r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n                acceptedDate= {props.location.data?props.location.data.row.taskHistory.find(x=>x.taskStatus==='Task accepted').performedDate:null}\r\n                callBk = {addSelectedItems}\r\n                > \r\n            </BoQPopup>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\r\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }} >\r\n                    {alart}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n\r\n                    \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SubmitBoqSpecificTaskBody)"],"names":["rateCardData","BoQPopup","props","filteredData","setFilteredData","useState","rateCard","setRateCard","openPopup","setOpenPopup","selectedRows","setSelectedRows","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","filter","task","rateCardSubcon","_id","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","item","rateCardDiv","push","catch","err","console","log","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","handleRowsSelect","Array","isArray","length","callBk","row","includes","newData","map","tableData","checked","handleRowsSelectClose","dt","open","fullWidth","maxWidth","title","columns","field","cellStyle","width","minWidth","height","type","currencySetting","currencyCode","icons","onSelectionChange","rows","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","filtering","selection","tableLayout","selectionProps","rowStyle","backgroundColor","headerStyle","color","actions","icon","labelId","id","value","onChange","e","target","style","tooltip","isFreeAction","components","Pagination","container","pading","background","sm","align","variant","onClick","Alert","React","elevation","withRouter","users","setUsers","companies","setCompanies","boqData","setBoqData","totalCost","setTotalCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","form","setForm","errors","setErrors","setOpen","openDialog","setOpenDialog","getBoqTotal","total","i","itemRate","itemQty","name","location","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","taskHistory","find","x","taskStatus","performedDate","split","taskAssignedDiv","workScope","boqs","handleClose","event","reason","className","as","Col","disabled","placeholder","isInvalid","controlId","actualTaskStartDate","actualTaskCompletedDate","defaultValue","opt","editable","onRowDelete","selectedRow","Promise","resolve","reject","index","updatedRows","splice","setTimeout","onRowUpdate","updatedRow","oldRow","itemTotal","fontWeight","toFixed","getRowId","history","headerName","valueGetter","params","performedBy","pageSize","rowsPerPageOptions","rowHeight","headerHeight","preventDefault","newErrors","taskCommencedComment","findFormErrors","Object","keys","taskObject","put","comment","boqSubmittedComment","async","Body","mobileNo","requestOptions","method","body","stringify","mode","fetch","smsFetch","pathname","error","items","boq","obj","erpCode","itemDiscreption","itemUom","area","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display"],"sourceRoot":""}