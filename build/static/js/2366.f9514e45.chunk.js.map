{"version":3,"file":"static/js/2366.f9514e45.chunk.js","mappings":"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","sources":["components/ResetPasswordBody.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n\n\nfunction ResetPasswordBody() {\n\n    let [alart, setAlart] = useState(\"\");\n    let [severity, setSeverity] = useState(\"\");\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n\n\n    let [form, setForm] = useState({})\n    let [errors, setErrors] = useState({})\n    let [open, setOpen] = useState(false);\n\n    let setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n        if (!!errors[field]) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n\n    const findFormErrors = () => {\n        const { newPassword1,newPassword2, oldPassword } = form\n        const newErrors = {}\n        // name errors\n        if (!oldPassword || oldPassword === '') newErrors.oldPassword = 'cannot be blank!'\n        if (!newPassword1 || newPassword1 === '') newErrors.newPassword1 = 'cannot be blank!'\n        if (!newPassword2 || newPassword2 === '') newErrors.newPassword2 = 'cannot be blank!'\n        if (newPassword2 !=newPassword1) newErrors.newPassword2 = 'not match!'\n        // console.log(headersConfig);\n        // console.log(newErrors)\n        return newErrors\n    }\n\n   \n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const newErrors = findFormErrors()\n        // Conditional logic:\n        // console.log(newErrors)\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n           \n\n            axiosInstance.post('projonline/changepw',form\n            , { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res)\n                    if(res.status == 202){\n                        setSeverity(\"error\")\n                        setAlart(\"Check the current password\")\n                        setOpen(true)\n                    }else if(res.status == 200){\n                        setSeverity(res.data.variant)\n                        setAlart(\"Password Changed Successfully\")\n                        setOpen(true)\n                        setForm({\n                            'oldPassword': '',\n                            'newPassword1': '',\n                            'newPassword2': '',\n                        })\n                    }\n                   \n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n\n    }\n\n   \n\n\n\n    return (\n        <div>\n\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n                {/* Content Header (Page header) */}\n                <div className=\"content-header\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Reset Password</h1>\n                                </div>\n                            </div>\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                {/* /.content-header */}\n                {/* Main content */}\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <Form onSubmit={onSubmit}>\n\n                            <Row className=\"mb-3 \">\n                                <Form.Group as={Col} >\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control disabled value={JSON.parse(localStorage.getItem(\"user\")).name} className=\"col-md-3\" type=\"text\" />\n                                </Form.Group>\n                            </Row>\n\n\n                            <Row className=\"mb-3\">\n                                <Form.Group as={Col}>\n                                    <Form.Label>Current Password</Form.Label>\n                                    <Form.Control onChange={e => setField('oldPassword', e.target.value)} value={form.oldPassword} className=\"col-md-3\" type=\"password\" placeholder=\"Enter Current Password\" isInvalid={!!errors.oldPassword} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.oldPassword}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Row>\n\n                            <Row className=\"mb-3\">\n                                <Form.Group as={Col} >\n                                    <Form.Label>New Password</Form.Label>\n                                    <Form.Control onChange={e => setField('newPassword1', e.target.value)} value={form.newPassword1} className=\"col-md-3\" type=\"password\" placeholder=\"Enter New Password\" isInvalid={!!errors.newPassword1} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.newPassword1}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Row>\n\n                            <Row className=\"mb-3\">\n                                <Form.Group as={Col} >\n                                    <Form.Label>Confirm New Password</Form.Label>\n                                    <Form.Control onChange={e => setField('newPassword2', e.target.value)} value={form.newPassword2} className=\"col-md-3\" type=\"password\" placeholder=\"Confirm New Password\" isInvalid={!!errors.newPassword2} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.newPassword2}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Row>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Update Password\n                            </Button>\n\n\n\n                        </Form>\n\n\n                    </div>{/* /.container-fluid */}\n                </section>\n                {/* /.content */}\n\n\n            </div>\n\n            <Snackbar open={open} autoHideDuration={6000} onClose={()=>setOpen(false)} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n                <Alert onClose={()=>setOpen(false)} severity={severity} sx={{ width: '100%' }} >\n                    {alart}\n                </Alert>\n            </Snackbar>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(ResetPasswordBody)"],"names":["Alert","React","props","ref","elevation","variant","withRouter","useState","alart","setAlart","severity","setSeverity","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","setField","field","value","className","onSubmit","e","preventDefault","newErrors","newPassword1","newPassword2","oldPassword","findFormErrors","Object","keys","length","post","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","status","data","catch","error","console","log","as","Col","disabled","name","type","onChange","target","placeholder","isInvalid","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}