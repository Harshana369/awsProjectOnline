{"version":3,"file":"static/js/6669.bf1586ad.chunk.js","mappings":"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","sources":["components/AcceptNewSpecificTaskBody.jsx","../node_modules/file-saver/src/FileSaver.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n//import { Button } from '@mui/material';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction AcceptNewSpecificTaskBody(props) {\r\n  // console.log(props.location.data);\r\n  //   console.log(props.location.data.row.files);\r\n\r\n  let [users, setUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [severity, setSeverity] = useState(\"\");\r\n  let [alart, setAlart] = useState(\"\");\r\n  let [tasks, setTasks] = useState([]);\r\n  let [form, setForm] = useState({});\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [projects, setProjects] = useState([]);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let allSiteId = [];\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const {\r\n      taskassignedSubconOfficer,\r\n      taskassignedMobileNo,\r\n      taskAcceptedComment,\r\n    } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!taskassignedSubconOfficer || taskassignedSubconOfficer === \"\")\r\n      newErrors.taskassignedSubconOfficer = \"cannot be blank!\";\r\n    if (!taskassignedMobileNo || taskassignedMobileNo === \"\")\r\n      newErrors.taskassignedMobileNo = \"cannot be blank!\";\r\n    if (!taskAcceptedComment || taskAcceptedComment === \"\")\r\n      newErrors.taskAcceptedComment = \"cannot be blank!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const findFormErrorsForReject = () => {\r\n    const { taskAcceptedComment } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n\r\n    if (!taskAcceptedComment || taskAcceptedComment === \"\")\r\n      newErrors.taskAcceptedComment = \"cannot be blank!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     //console.log(props.location.data.row.files.map(ele=>{return{\"fileName\":ele}}))\r\n  //     setUsers([{ name: props.location.data.row.assignedMobitelOfficer.name }]);\r\n  //     setCompanies([\r\n  //       { companyName: props.location.data.row.assignedSubcon.companyName },\r\n  //     ]);\r\n  //     setForm({\r\n  //       taskRef: props.location.data.row.taskRef,\r\n  //       siteID: props.location.data.row.siteID,\r\n  //       siteName: props.location.data.row.siteName,\r\n  //       plannedTaskStartDate:\r\n  //         props.location.data.row.plannedTaskStartDate.split(\"T\")[0],\r\n  //       targetTaskComDate:\r\n  //         props.location.data.row.targetTaskComDate.split(\"T\")[0],\r\n  //       taskAssignedDiv: props.location.data.row.taskAssignedDiv,\r\n  //       assignedMobitelOfficer:\r\n  //         props.location.data.row.assignedMobitelOfficer.name,\r\n  //       workScope: props.location.data.row.workScope,\r\n  //       assignedSubcon: props.location.data.row.assignedSubcon.companyName,\r\n  //       files: props.location.data.row.files.map((ele) => {\r\n  //         return { id: ele };\r\n  //       }),\r\n  //     });\r\n\r\n  //   }, []);\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setProjects(res.data.projects);\r\n\r\n        setTasks(props.location.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //File download table\r\n  const columns = [\r\n    { field: \"id\", headerName: \"File Name\", width: 350 },\r\n    {\r\n      field: \"Download File\",\r\n      width: 200,\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(event) => {\r\n              downloadFiles(event, cellValues);\r\n            }}\r\n          >\r\n            Click to Download\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  async function downloadFiles(event, cellValues) {\r\n    // console.log(cellValues.row.id)\r\n    const { data } = await getFiles(cellValues.row.id);\r\n    const blob = new Blob([data]);\r\n    saveAs(blob, cellValues.row.id);\r\n  }\r\n\r\n  const getFiles = (e) => {\r\n    return axiosInstance.get(\"projonline/file/\" + e, {\r\n      headers: {\r\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      responseType: \"arraybuffer\",\r\n      withCredentials: true,\r\n    });\r\n  };\r\n\r\n  const smsFetch = async (mobileNo) => {\r\n    //console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\r\n    const url =\r\n      \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\";\r\n    const Body = {\r\n      username: \"smsdigisvc_sci\",\r\n      password: \"Sci@#25\",\r\n      from: \"Mobitel-PMS\",\r\n      to: \"0\" + mobileNo,\r\n      text: \"Site ID: \" + allSiteId + \" task is assigned to you now.\",\r\n      mesageType: 0,\r\n    };\r\n    // console.log(Body)\r\n    // console.log(JSON.stringify(Body))\r\n    //console.log(JSON.parse(localStorage.getItem(\"user\")))\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Body),\r\n      mode: \"no-cors\",\r\n    };\r\n    // console.log(requestOptions)\r\n    const response = await fetch(url, requestOptions);\r\n    // console.log(response)\r\n  };\r\n\r\n  //   const onAccept = (e) => {\r\n  //     e.preventDefault();\r\n\r\n  //     const newErrors = findFormErrors();\r\n  //     // Conditional logic:\r\n  //     if (Object.keys(newErrors).length > 0) {\r\n  //       // We got errors!\r\n  //       setErrors(newErrors);\r\n  //     } else {\r\n  //       const taskObject = {\r\n  //         taskassignedSubconOfficer: form.taskassignedSubconOfficer,\r\n  //         taskassignedMobileNo: form.taskassignedMobileNo,\r\n  //         taskStatus: \"Task accepted\",\r\n  //       };\r\n\r\n  //       tasks.map((obj) => {\r\n  //         console.log(obj._id);\r\n\r\n  //           axiosInstance\r\n  //             .put(\r\n  //               \"projonline/update/\" + obj._id,\r\n  //               {\r\n  //                 taskObject,\r\n  //                 taskHistory: {\r\n  //                   taskStatus: \"Task accepted\",\r\n  //                   comment: form.taskAcceptedComment,\r\n  //                 },\r\n  //               },\r\n  //               {\r\n  //                 headers: {\r\n  //                   token:\r\n  //                     \"Bearer \" +\r\n  //                     JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n  //                 },\r\n  //               }\r\n  //             )\r\n  //       });\r\n\r\n  //         .then((res) => {\r\n  //           // console.log(res.data)\r\n  //           setOpenDialog(true);\r\n  //           // console.log(form.taskassignedMobileNo)\r\n  //           smsFetch(form.taskassignedMobileNo);\r\n  //           setTimeout(() => {\r\n  //             setAlart(res.data.alart);\r\n  //             setSeverity(res.data.severity);\r\n  //             setOpen(true);\r\n  //           }, 2000);\r\n\r\n  //           setTimeout(() => {\r\n  //             setOpenDialog(false);\r\n  //             setOpen(false);\r\n  //             props.history.push({ pathname: \"/acceptNewTasks\" });\r\n  //           }, 5000);\r\n  //         })\r\n  //         .catch((error) => {\r\n  //           console.log(error);\r\n  //         });\r\n  //     }\r\n  //   };\r\n\r\n  const onAccept = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      const taskObject = {\r\n        taskassignedSubconOfficer: form.taskassignedSubconOfficer,\r\n        taskassignedMobileNo: form.taskassignedMobileNo,\r\n        taskStatus: \"Task accepted\",\r\n      };\r\n\r\n      tasks.forEach((obj) => {\r\n        allSiteId.push(obj.siteID);\r\n\r\n        axiosInstance\r\n          .put(\r\n            \"projonline/update/\" + obj._id,\r\n            {\r\n              taskObject,\r\n              taskHistory: {\r\n                taskStatus: \"Task accepted\",\r\n                comment: form.taskAcceptedComment,\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                token:\r\n                  \"Bearer \" +\r\n                  JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setOpenDialog(true);\r\n            setTimeout(() => {\r\n              setAlart(res.data.alart);\r\n              setSeverity(res.data.severity);\r\n              setOpen(true);\r\n            }, 2000);\r\n\r\n            setTimeout(() => {\r\n              setOpenDialog(false);\r\n              setOpen(false);\r\n              props.history.push({ pathname: \"/acceptNewTasks\" });\r\n            }, 5000);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      });\r\n\r\n      smsFetch(form.taskassignedMobileNo);\r\n    }\r\n  };\r\n\r\n  const onReject = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrorsForReject();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      const taskObject = {\r\n        taskassignedSubconOfficer: form.taskassignedSubconOfficer,\r\n        taskassignedMobileNo: form.taskassignedMobileNo,\r\n        taskStatus: \"Task rejected\",\r\n      };\r\n\r\n      // console.log(form.assignedMobitelOfficer)\r\n\r\n      axiosInstance\r\n        .put(\r\n          \"projonline/update/\" + props.location.data.row._id,\r\n          {\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: \"Task rejected\",\r\n              comment: form.taskAcceptedComment,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          setOpenDialog(true);\r\n\r\n          setTimeout(() => {\r\n            setAlart(res.data.alart);\r\n            setSeverity(res.data.severity);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            props.history.push({ pathname: \"/acceptNewTasks\" });\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const downloadHandover = (e) => {\r\n    var workbook = XLSX.utils.book_new();\r\n    var aoa_projects = [];\r\n\r\n    var selectedProjects = [\r\n      ...new Set(props.location.data.map((ele) => ele.projectID)),\r\n    ];\r\n\r\n    for (var i = 0; i < projects.length; i++) {\r\n      for (var j = 0; j < selectedProjects.length; j++) {\r\n        if (selectedProjects[j] === projects[i].projectID) {\r\n          var worksheetData = [];\r\n\r\n          worksheetData = props.location.data\r\n            .filter((ele) => ele.projectID === selectedProjects[j])\r\n            .map((ele) => ele.properties);\r\n\r\n          worksheetData.unshift(projects[i].properties);\r\n\r\n          //Leave a delay of 5 minutes and run down here\r\n\r\n          var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n          XLSX.utils.book_append_sheet(\r\n            workbook,\r\n            ws,\r\n            projects[i].subProject + \"_\" + projects[i].projectID\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (workbook.SheetNames.length > 0) {\r\n      // Only write the workbook if there are sheets\r\n      XLSX.writeFile(workbook, \"Handover details.xlsx\");\r\n    } else {\r\n      console.error(\"No data to write to the workbook.\");\r\n    }\r\n  };\r\n\r\n  //   const downloadHandover = (e) => {\r\n  //     //Create Downloadable excel file\r\n  //     var workbook = XLSX.utils.book_new();\r\n  //     var aoa_projects = [];\r\n\r\n  //     //get selected projects\r\n  //     var selectedProjects = [\r\n  //       ...new Set(props.location.data.map((ele) => ele.projectID)),\r\n  //     ];\r\n  //     var selectedProjectsHeaderData = [];\r\n\r\n  //     console.log(selectedProjects);\r\n\r\n  //     for (var i = 0; i < projects.length; i++) {\r\n  //       for (var j = 0; j < selectedProjects.length; j++) {\r\n  //         // console.log(projects[i])\r\n  //         if (selectedProjects[j] === projects[i].projectID) {\r\n  //           var worksheetData = [];\r\n\r\n  //           worksheetData = props.location.data\r\n  //             .filter((ele) => ele.projectID === selectedProjects[j])\r\n  //             .map((ele) => ele.properties);\r\n  //           worksheetData.unshift(projects[i].properties);\r\n  //           // console.log(worksheetData)\r\n  //           var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  //           XLSX.utils.book_append_sheet(\r\n  //             workbook,\r\n  //             ws,\r\n  //             projects[i].subProject + \"_\" + projects[i].projectID\r\n  //           );\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     XLSX.writeFile(workbook, \"Handover details.xlsx\");\r\n  //     // console.log(workbook)\r\n  //   };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div>\r\n                <Row>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Ref</th>\r\n                        <th>Site ID</th>\r\n                        <th>Site Name</th>\r\n                        <th>Planned Work Commencement Date</th>\r\n                        <th>Planned Work Completion Date</th>\r\n                        <th>Task Assigned Division</th>\r\n                        <th>Assigned Officer</th>\r\n                        <th>High level work scope</th>\r\n                        <th>Assigned subcontractor</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tasks.map((item) => (\r\n                        <tr>\r\n                          <td>{item.taskRef}</td>\r\n                          <td>{item.siteID}</td>\r\n                          <td>{item.siteName}</td>\r\n                          <td>{item.plannedTaskStartDate.split(\"T\")[0]}</td>\r\n                          <td>{item.targetTaskComDate.split(\"T\")[0]}</td>\r\n                          <td>{item.taskAssignedDiv}</td>\r\n                          <td>{item.assignedMobitelOfficer.name}</td>\r\n                          <td>{item.workScope}</td>\r\n                          <td>{item.assignedSubcon.companyName}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <Form>\r\n              <Row>\r\n                {/* <Form.Group as={Col}>\r\n                  <Form.Label>Site ID</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteID}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site ID\"\r\n                    isInvalid={!!errors.siteID}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteID}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Site Name</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.siteName}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter site Name\"\r\n                    isInvalid={!!errors.siteName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.siteName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"\"></Form.Group>\r\n              </Row>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Commencement Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.plannedTaskStartDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.plannedTaskStartDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.plannedTaskStartDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Completion Date</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.targetTaskComDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.targetTaskComDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.targetTaskComDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Division</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned Officer</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    as=\"select\"\r\n                    value={form.assignedMobitelOfficer}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedMobitelOfficer}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedMobitelOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>High level work scope</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.workScope}\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"\"\r\n                    isInvalid={!!errors.workScope}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.workScope}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned subcontractor</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={form.assignedSubcon}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedSubcon}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {companies.map((opt) => (\r\n                      <option value={opt._id}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedSubcon}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group> */}\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Handover Details</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={downloadHandover}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Click to Download\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Download other supporting docs</Form.Label>\r\n                  <div style={{ height: 200, width: \"50%\" }}>\r\n                    <DataGrid\r\n                      getRowId={(file) => file.fileName}\r\n                      rows={props.location.data[0].files.map((ele) => {\r\n                        return { id: ele };\r\n                      })}\r\n                      columns={columns}\r\n                      pageSize={3}\r\n                      rowsPerPageOptions={[3]}\r\n                      rowHeight={30}\r\n                      headerHeight={40}\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Subcon Officer</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskassignedSubconOfficer\", e.target.value)\r\n                    }\r\n                    value={form.taskassignedSubconOfficer}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                    isInvalid={!!errors.taskassignedSubconOfficer}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskassignedSubconOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Mobile Number (Without initial zero)</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskassignedMobileNo\", e.target.value)\r\n                    }\r\n                    className=\"col-md-9\"\r\n                    value={form.taskassignedMobileNo}\r\n                    type=\"tel\"\r\n                    maxLength=\"9\"\r\n                    placeholder=\"Enter mobile number\"\r\n                    isInvalid={!!errors.taskassignedMobileNo}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskassignedMobileNo}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Comments</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskAcceptedComment\", e.target.value)\r\n                    }\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    value={form.taskAcceptedComment}\r\n                    placeholder=\"Enter your comments\"\r\n                    isInvalid={!!errors.taskAcceptedComment}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAcceptedComment}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onReject}>\r\n                Reject Task\r\n              </Button>{\" \"}\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onAccept}>\r\n                Accept Task\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {alart}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AcceptNewSpecificTaskBody);\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Alert","React","props","ref","elevation","variant","withRouter","useState","severity","setSeverity","alart","setAlart","tasks","setTasks","form","setForm","errors","setErrors","open","setOpen","projects","setProjects","openDialog","setOpenDialog","allSiteId","axiosInstance","axios","baseURL","process","setField","field","value","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","location","catch","err","console","log","columns","headerName","width","renderCell","cellValues","color","onClick","event","downloadFiles","getFiles","row","id","blob","Blob","saveAs","e","responseType","withCredentials","smsFetch","mobileNo","Body","username","password","from","to","text","mesageType","requestOptions","method","body","stringify","mode","fetch","handleClose","reason","className","striped","bordered","hover","size","map","item","taskRef","siteID","siteName","plannedTaskStartDate","split","targetTaskComDate","taskAssignedDiv","assignedMobitelOfficer","name","workScope","assignedSubcon","companyName","as","Col","workbook","XLSX","selectedProjects","Set","ele","projectID","i","length","j","worksheetData","filter","properties","unshift","ws","subProject","SheetNames","error","style","height","getRowId","file","fileName","rows","files","pageSize","rowsPerPageOptions","rowHeight","headerHeight","onChange","target","taskassignedSubconOfficer","type","placeholder","isInvalid","taskassignedMobileNo","maxLength","taskAcceptedComment","preventDefault","newErrors","findFormErrorsForReject","Object","keys","taskObject","taskStatus","put","_id","taskHistory","comment","setTimeout","history","push","pathname","findFormErrors","forEach","obj","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","b","a","autoBom","warn","test","c","d","XMLHttpRequest","onload","g","response","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","URL","webkitURL","createElement","download","rel","href","origin","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","_excluded","Table","_ref","bsPrefix","borderless","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}