{"version":3,"file":"static/js/385.226147bb.chunk.js","mappings":"mTAWA,MAAMA,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAO,SAAC,IAAQ,CAACC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,YAAaH,GAChE,IA65BA,SAAeI,EAAAA,EAAAA,KA35Bf,SAAgCJ,GAC9B,IAAKK,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KAChDS,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,KAChDW,EAAUC,IAAeZ,EAAAA,EAAAA,UAAS,KAClCa,EAAKC,IAAUd,EAAAA,EAAAA,UAAS,KACxBJ,EAASmB,IAAcf,EAAAA,EAAAA,UAAS,IACrC,MAAMgB,EAAgBC,IAAAA,OAAa,CACjCC,QAASC,wCAGX,IAAKC,EAAMC,IAAWrB,EAAAA,EAAAA,UAAS,CAAC,IAC3BsB,EAAOC,IAAYvB,EAAAA,EAAAA,UAAS,KAC5BwB,EAAQC,IAAazB,EAAAA,EAAAA,UAAS,CAAC,IAC/B0B,EAAMC,IAAW3B,EAAAA,EAAAA,WAAS,IAC1B4B,EAAYC,IAAiB7B,EAAAA,EAAAA,WAAS,IACtC8B,EAAkBC,IAAuB/B,EAAAA,EAAAA,UAAS,IAIvD,MAaMgC,EAAYC,UAChB,MAAMC,EAbgB,MACtB,MAAM,sBAAEC,GAA0Bf,EAC5Bc,EAAY,CAAC,EAOnB,OALGC,GACyB,KAA1BA,GAC0B,cAA1BA,IAEAD,EAAUC,sBAAwB,uBAC7BD,CAAS,EAIEE,GAClB,GAAIC,OAAOC,KAAKJ,GAAWK,OAAS,EAElCd,EAAUS,OACL,CACLM,EAAEC,iBACFZ,GAAc,GAEd,MAAMa,EAAWtB,EAAKe,sBACtB,IACE,MAAMQ,QAAY3B,EAAc4B,IAAI,oCAAD,OACGF,GACpCpB,EACA,CACEuB,QAAS,CACPC,MACE,UACAC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAKjDC,YAAW,KACTtC,EAAO6B,EAAIU,KAAKxC,KAChBE,EAAW4B,EAAIU,KAAKzD,SACpB+B,GAAQ,EAAK,GACZ,KAEHyB,YAAW,KACT3D,EAAM6D,QAAQC,KAAK,CAAEC,SAAU,eAAgB,GAC9C,IACL,CAAE,MAAOC,GACP3C,EAAO,sBACP4C,QAAQD,MAAM,sBAAuBA,EACvC,CACF,GAGF,IAAIE,EAAW,CAACC,EAAOC,KACrBxC,EAAQ,IACHD,EACH,CAACwC,GAAQC,IAELrC,EAAOoC,IACXnC,EAAU,IACLD,EACH,CAACoC,GAAQ,MACT,GAqBNE,EAAAA,EAAAA,YAAU,KACR9C,EACG+C,IAAI,mBAAoB,CACvBlB,QAAS,CACPC,MACE,UAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAG1Da,MAAMrB,IACLpB,EAAS9B,EAAMwE,SAASZ,MACxBnD,EACEyC,EAAIU,KAAKvD,MAAMoE,QAAQC,GAAoC,YAA5BA,EAAIC,QAAQC,eAE7CtE,EACE4C,EAAIU,KAAKvD,MAAMoE,QAAQC,IAAwC,IAAhCA,EAA0B,wBAE3D/D,EACEuC,EAAIU,KAAKiB,SAASJ,QAAQC,GAA4B,YAApBA,EAAIE,eAExC/D,EAAgBqC,EAAIU,KAAKvD,OACzBU,EAAmB,CAAC,CAAE+D,IAAK,GAAIC,KAAM,eACrC9D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,eACrC5D,EAAY,CAAC,CAAE2D,IAAK,GAAIC,KAAM,cACxB,IAEPC,OAAOC,IACNhB,QAAQiB,IAAID,EAAI,GAChB,GACH,IAEH,MAAME,EAAsBpC,IAC1B,MAAMN,EAvCgB,MACtB,MAAM,WAAE2C,GAAezD,EACjBc,EAAY,CAAC,EAGnB,OAFK2C,GAA6B,KAAfA,GAAoC,cAAfA,IACtC3C,EAAU2C,WAAa,wBAClB3C,CAAS,EAkCE4C,GACdzC,OAAOC,KAAKJ,GAAWK,OAAS,EAElCd,EAAUS,IAEVM,EAAEC,iBACFZ,GAAc,GACdb,EACG+D,KACC,oBACA,CACEzD,QACA0D,WAAY,CAAEH,WAAYzD,EAAKyD,YAC/BI,YAAa,CACXJ,WAAY,iBACZK,QAAS,4BAA8B9D,EAAKyD,aAGhD,CACEhC,QAAS,CACPC,MACE,UACAC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAIhDa,MAAMrB,IACL7B,EAAO6B,EAAIU,KAAKxC,KAChBE,EAAW4B,EAAIU,KAAKzD,SACpB+B,GAAQ,GAERyB,YAAW,KACTvB,GAAc,GACdF,GAAQ,GACRJ,EAAS,IACT9B,EAAM6D,QAAQC,KAAK,CAAEC,SAAU,eAAgB,GAC9C,IAAK,IAETiB,OAAOhB,IACNC,QAAQiB,IAAIlB,EAAM,IAExB,EAkFI0B,EAAc,CAACC,EAAOC,KACX,cAAXA,GAGJ1D,GAAQ,EAAM,EA4RhB,SAAS2D,EAAgBC,EAAMzF,GAC7B,OAAIyF,GAAQA,EAAKlF,cAAgBkF,EAAKlF,aAAakC,OAAS,EACnDgD,EAAKlF,aAAamF,KAAI,CAACC,EAAMC,KAClC,MAAMC,EAAWF,EAAKG,gBACtB,OACE,0BACE,2BACGH,EAAKI,cAAc,MAAIF,EAASnB,SAF3BkB,EAIJ,IAIH,wBAEX,CAIA,IAAK,IAAII,EAAI,EAAGA,EAAIxE,EAAMiB,OAAQuD,IAGN,kBAAxBxE,EAAMwE,GAAGjB,YACe,mBAAxBvD,EAAMwE,GAAGjB,aAETkB,SAASC,eAAe,wBAAwBC,UAAW,EAC3DF,SAASC,eAAe,uBAAuBC,UAAW,GAI9D,IAASH,EAAI,EAAGA,EAAIxE,EAAMiB,OAAQuD,IAQN,qBAAxBxE,EAAMwE,GAAGjB,YACe,qBAAxBvD,EAAMwE,GAAGjB,YACe,kBAAxBvD,EAAMwE,GAAGjB,YACe,mBAAxBvD,EAAMwE,GAAGjB,YACe,mBAAxBvD,EAAMwE,GAAGjB,YACe,kBAAxBvD,EAAMwE,GAAGjB,aAETkB,SAASC,eACP,mCACAC,UAAW,EACbF,SAASC,eACP,mCACAC,UAAW,GAIjB,OACE,4BAEE,iBAAKC,UAAU,kBAAiB,WAE9B,gBAAKA,UAAU,iBAAgB,UAC7B,oBAASA,UAAU,iBAAgB,UACjC,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,WAAU,UACvB,gBAAKA,UAAU,WAAU,UACvB,wBAAI,2BASd,oBAASA,UAAU,UAAS,UAC1B,gBAAKA,UAAU,kBAAiB,UAE9B,6BACE,0BACE,SAAC,IAAG,WACF,UAAC,IAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAI,WACrC,4BACE,2BACE,wBAAI,cACJ,wBAAI,aACJ,wBAAI,eACJ,wBAAI,8BACJ,wBAAI,iBACJ,wBAAI,SACJ,wBAAI,wBAIR,2BACGhF,EAAMkE,KAAI,CAACD,EAAMG,KAEd,2BACE,wBAAKH,EAAKgB,WACV,wBAAKhB,EAAKiB,UACV,wBAAKjB,EAAKkB,YACV,wBAAKlB,EAAKmB,uBAAuBlC,QACjC,wBAAKe,EAAKV,cACV,yBACkC,IAA/BU,EAAKoB,sBACF,YAC+B,IAA/BpB,EAAKoB,sBACL,eACA,cAEN,wBAAKrB,EAAgBC,OAbdG,eAqBrB,iBAAKkB,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,QAAS,WACxD,UAAC,IAAG,YACF,UAAC,UAAU,CAACC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,wBACZ,UAAC,YAAY,CACXC,GAAG,uBACHC,SAAW1E,IACTmB,EAAS,aAAcnB,EAAE2E,OAAOtD,MAAM,EAGxCA,MAAOzC,EAAKyD,WACZkC,GAAG,SACHK,aAAa,kBACbC,YAAa7F,EAAOqD,WAAW,WAE/B,4BAAQ,eACR,4BAAQ,yBAWV,SAAC,qBAAqB,CAACyC,KAAK,UAAS,SAClC9F,EAAOqD,iBAGZ,UAAC,UAAU,CAACkC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,wBACZ,mBACA,SAAC,IAAM,CACLO,QAAU/E,GAAMoC,EAAmBpC,GACnC5C,QAAQ,UACR0H,KAAK,SACLV,MAAO,CAAEY,MAAO,QAASC,OAAQ,QACjCR,GAAG,sBAAqB,SACzB,2BAIH,SAAC,UAAU,CAACF,GAAIC,EAAAA,QAGlB,SAAC,IAAG,WACF,SAAC,IAAI,WACH,SAAC,UAAU,CAACD,GAAIC,EAAAA,EAAI,UAElB,SAAC,UAAU,CAACJ,MAAO,CAAEc,SAAU,IAAK,SAAC,kGAQ7C,SAAC,IAAG,WACF,SAAC,IAAI,WACH,uBAGJ,iBAAKd,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,QAAS,WACxD,UAAC,IAAG,YACF,UAAC,UAAU,CAACC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,kBACZ,UAAC,YAAY,CACXE,SAjdoB1E,IACtC,MAAMmF,EAAiBnF,EAAE2E,OAAOS,gBAAgB,GACzBD,EAAe9D,MACtC/B,EAAmB6F,EAAeE,aAAa,QAC/C,MACMrD,EAAOmD,EAAeE,aAAa,QACzC9F,EAAoByC,GAEG,cAAnBhC,EAAE2E,OAAOtD,QACXF,EAAS,yBAA0BnB,EAAE2E,OAAOtD,OAC5CrD,EAAmB,CAAC,CAAE+D,IAAK,GAAIC,KAAM,eACrC9D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,eACrC5D,EAAY,CAAC,CAAE2D,IAAK,GAAIC,KAAM,gBAEhC,IAAK,IAAIsB,EAAI,EAAGA,EAAIzF,EAAakC,OAAQuD,IACvC,GAAIzF,EAAayF,GAAGvB,MAAQ/B,EAAE2E,OAAOtD,MACnC,OAAQxD,EAAayF,GAAGzF,aAAakC,QACnC,KAAK,EACH/B,EAAmB,CAAC,CAAE+D,IAAK,GAAIC,KAAM,eACrC9D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,eACrC5D,EAAY,CAAC,CAAE2D,IAAK,GAAIC,KAAM,eAC9BnD,EAAQ,IACHD,EACH0G,kBAAmB,GACnBC,kBAAmB,GACnBC,WAAY,GACZtB,uBAAwBlE,EAAE2E,OAAOtD,MACjCoE,aAAc,YAEVzG,EAA+B,wBACnCC,EAAU,IACLD,EACHkF,uBAAwB,OAE5B,MACF,KAAK,EACHlG,EAAmB,CACjB,CACE+D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1Cb,EAAS,oBAAqBtD,EAAayF,GAAGzF,aAAa,GAAGkE,KAC9D7D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,eACrC5D,EAAY,CAAC,CAAE2D,IAAK,GAAIC,KAAM,eAC9BnD,EAAQ,IACHD,EACH0G,kBAAmBzH,EAAayF,GAAGzF,aAAa,GAAGkE,IACnDwD,kBAAmB,GACnBC,WAAY,GACZtB,uBAAwBlE,EAAE2E,OAAOtD,MACjCoE,aAAc,YAEVzG,EAA+B,wBACnCC,EAAU,IACLD,EACHkF,uBAAwB,OAG5B,MACF,KAAK,EACHlG,EAAmB,CACjB,CACE+D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1C9D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,gBACrC5D,EAAY,CACV,CACE2D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1CnD,EAAQ,IACHD,EACH0G,kBAAmBzH,EAAayF,GAAGzF,aAAa,GAAGkE,IACnDwD,kBAAmB,GACnBC,WAAY3H,EAAayF,GAAGzF,aAAa,GAAGkE,IAC5CmC,uBAAwBlE,EAAE2E,OAAOtD,MACjCoE,aAAc,YAEVzG,EAA+B,wBACnCC,EAAU,IACLD,EACHkF,uBAAwB,OAE5B,MACF,KAAK,EACHlG,EAAmB,CACjB,CACE+D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1C9D,EAAmB,CACjB,CACE6D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1C5D,EAAY,CACV,CACE2D,IAAKlE,EAAayF,GAAGzF,aAAa,GAAGkE,IACrCC,KAAMnE,EAAayF,GAAGzF,aAAa,GAAGmE,QAG1CnD,EAAQ,IACHD,EACH0G,kBAAmBzH,EAAayF,GAAGzF,aAAa,GAAGkE,IACnDwD,kBAAmB1H,EAAayF,GAAGzF,aAAa,GAAGkE,IACnDyD,WAAY3H,EAAayF,GAAGzF,aAAa,GAAGkE,IAC5CmC,uBAAwBlE,EAAE2E,OAAOtD,MACjCoE,aAAc,YAEVzG,EAA+B,wBACnCC,EAAU,IACLD,EACHkF,uBAAwB,OAKpC,EAuVkBK,GAAG,SACHlD,MAAOzC,EAAKsF,uBACZU,aAAa,YACbC,YAAa7F,EAAOkF,uBAAuB,WAE3C,4BAAQ,cACP5G,EAAM0F,KAAK0C,IACV,mBAAQrE,MAAOqE,EAAI3D,IAAKC,KAAM0D,EAAI1D,KAAK,SACpC0D,EAAI1D,aAIX,SAAC,qBAAqB,CAAC8C,KAAK,UAAS,SAClC9F,EAAOkF,6BAGZ,UAAC,UAAU,CAACK,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,eACZ,mBACA,SAAC,IAAM,CACLO,QA7jBS/E,IAC3BA,EAAEC,iBAEF,MAAMP,EAjGe,MACrB,MAAM,uBAAEwE,GAA2BtF,EAC7Bc,EAAY,CAAC,EAOnB,OALGwE,GAC0B,KAA3BA,GAC2B,cAA3BA,IAEAxE,EAAUwE,uBAAyB,6BAC9BxE,CAAS,EAwFEiG,GAElB,GAAI9F,OAAOC,KAAKJ,GAAWK,OAAS,EAElCd,EAAUS,OACL,CACL,IAAIkG,EAAmB,CACrB,CACEvC,cAAe,uBACfD,gBAAiBxE,EAAKsF,wBAExB,CACEb,cAAe,uBACfD,gBAAiBxE,EAAK0G,mBAExB,CACEjC,cAAe,uBACfD,gBAAiBxE,EAAK2G,mBAExB,CAAElC,cAAe,iBAAkBD,gBAAiBxE,EAAK4G,aACzD9D,QAAQmE,GAAuC,IAA3BA,EAAQzC,kBAE9B,MAAMZ,EAAa,CACjB0B,uBAAwBtF,EAAKsF,uBAC7BrG,aAAc+H,GAGhBvG,GAAc,GACdb,EACG+D,KACC,oBACA,CACEzD,QACA0D,aACAC,YAAa,CACXJ,WAAY,8BACZK,QAAS,yBAA2BpD,IAGxC,CACEe,QAAS,CACPC,MACE,UACAC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAIhDa,MAAMrB,IACLS,YAAW,KACTtC,EAAO6B,EAAIU,KAAKxC,KAChBE,EAAW4B,EAAIU,KAAKzD,SACpB+B,GAAQ,EAAK,GACZ,KAEHyB,YAAW,KACTvB,GAAc,GACdF,GAAQ,GACRnB,EAAmB,CAAC,CAAE+D,IAAK,GAAIC,KAAM,eACrC9D,EAAmB,CAAC,CAAE6D,IAAK,GAAIC,KAAM,eACrC5D,EAAY,CAAC,CAAE2D,IAAK,GAAIC,KAAM,eAC9BjD,EAAS,IACTF,EAAQ,CACNyG,kBAAmB,GACnBC,kBAAmB,GACnBC,WAAY,GACZtB,uBAAwB,GACxBuB,aAAc,YAEhBxI,EAAM6D,QAAQC,KAAK,CAAEC,SAAU,eAAgB,GAC9C,IAAK,IAETiB,OAAOhB,IACNC,QAAQiB,IAAIlB,EAAM,GAExB,GAifkB7D,QAAQ,UACR0H,KAAK,SACLV,MAAO,CAAEY,MAAO,QAASC,OAAQ,QAAS,SAC3C,kBAIH,SAAC,UAAU,CAACV,GAAIC,EAAAA,QAElB,SAAC,IAAG,KACJ,UAAC,IAAG,YACF,UAAC,UAAU,CAACD,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,+BACZ,SAAC,YAAY,CACXD,GAAG,SACHG,SAAW1E,GACTmB,EAAS,oBAAqBnB,EAAE2E,OAAOtD,OAEzCA,MAAOzC,EAAK0G,kBACZV,aAAa,YACbC,YAAa7F,EAAOsG,kBACpB7B,UAAQ,WAEP1F,EAAgBiF,KAAK0C,IACpB,mBAAQrE,MAAOqE,EAAI3D,IAAI,SAAE2D,EAAI1D,YAGjC,SAAC,qBAAqB,CAAC8C,KAAK,UAAS,SAClC9F,EAAOsG,wBAGZ,UAAC,UAAU,CAACf,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,+BACZ,SAAC,YAAY,CACXD,GAAG,SACHG,SAAW1E,GACTmB,EAAS,oBAAqBnB,EAAE2E,OAAOtD,OAEzCA,MAAOzC,EAAK2G,kBACZX,aAAa,YACbnB,UAAQ,WAEPxF,EAAgB+E,KAAK0C,IACpB,mBAAQrE,MAAOqE,EAAI3D,IAAI,SAAE2D,EAAI1D,eAKnC,UAAC,UAAU,CAACuC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,iBACZ,SAAC,YAAY,CACXD,GAAG,SACHG,SAAW1E,GAAMmB,EAAS,aAAcnB,EAAE2E,OAAOtD,OACjDA,MAAOzC,EAAK4G,WACZZ,aAAa,YACbC,YAAa7F,EAAOwG,WACpB/B,UAAQ,WAEPtF,EAAS6E,KAAK0C,IACb,mBAAQrE,MAAOqE,EAAI3D,IAAI,SAAE2D,EAAI1D,YAGjC,SAAC,qBAAqB,CAAC8C,KAAK,UAAS,SAClC9F,EAAOwG,oBAId,SAAC,IAAG,WACF,SAAC,IAAI,WACH,SAAC,UAAU,CAACjB,GAAIC,EAAAA,EAAI,UAElB,SAAC,UAAU,CAACJ,MAAO,CAAEc,SAAU,IAAK,SAC0G,mNAUtJ,SAAC,IAAG,WACF,SAAC,IAAI,WACH,uBAIJ,iBAAKd,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,QAAS,WACxD,UAAC,IAAG,YACF,UAAC,UAAU,CAACC,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,8BACZ,UAAC,YAAY,CACXC,GAAG,kCACHC,SAAW1E,IACTmB,EAAS,wBAAyBnB,EAAE2E,OAAOtD,MAAM,EAMnDA,MAAOzC,EAAKe,sBACZ4E,GAAG,SACHK,aAAa,6BACbC,YAAa7F,EAAOW,sBAAsB,WAE1C,4BAAQ,eACR,mBAAQ0B,OAAO,EAAK,SAAC,cACrB,mBAAQA,OAAO,EAAM,SAAC,qBAExB,SAAC,qBAAqB,CAACyD,KAAK,UAAS,SAClC9F,EAAOW,4BAGZ,UAAC,UAAU,CAAC4E,GAAIC,EAAAA,EAAI,WAClB,SAAC,UAAU,UAAC,YACZ,mBACA,SAAC,IAAM,CACLO,QAAU/E,GAAMR,EAAUQ,GAC1B5C,QAAQ,UACR0H,KAAK,SACLV,MAAO,CAAEY,MAAO,QAASC,OAAQ,QACjCR,GAAG,kCAAiC,SACrC,eAIH,SAAC,UAAU,CAACF,GAAIC,EAAAA,QAElB,SAAC,IAAG,QAEN,SAAC,IAAG,WACF,SAAC,IAAI,WACH,iCASZ,SAAC,IAAQ,CACPtF,KAAMA,EACN4G,iBAAkB,IAClBC,QAASpD,EACTqD,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAW,UAExD,SAACnJ,EAAK,CAACgJ,QAASpD,EAAawD,SAAU/I,EAASgJ,GAAI,CAAEpB,MAAO,QAAS,SACnE3G,OAIL,SAAC,IAAM,CACLa,KAAME,EACN2G,QAASpD,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0B,UAE3C,SAAC,IAAa,WACZ,SAAC,IAAG,CAACyD,GAAI,CAAEC,QAAS,QAAS,UAC3B,SAAC,IAAgB,YAM7B,G,uGCt6BIC,EAAY,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,cAqC3G,QAjCyBtJ,EAAAA,YAAiB,SAAUuJ,EAAMrJ,GACxD,IAAIsJ,EAAWD,EAAKC,SAChB9C,EAAY6C,EAAK7C,UACjBC,EAAU4C,EAAK5C,QACfC,EAAW2C,EAAK3C,SAChB6C,EAAaF,EAAKE,WAClB5C,EAAQ0C,EAAK1C,MACbC,EAAOyC,EAAKzC,KACZ1G,EAAUmJ,EAAKnJ,QACfsJ,EAAaH,EAAKG,WAClBzJ,GAAQ0J,EAAAA,EAAAA,GAA8BJ,EAAMD,GAE5CM,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,SACjDM,EAAUC,IAAWrD,EAAWkD,EAAmBxJ,GAAWwJ,EAAoB,IAAMxJ,EAAS0G,GAAQ8C,EAAoB,IAAM9C,EAAMH,GAAWiD,EAAoB,WAAYhD,GAAYgD,EAAoB,YAAaH,GAAcG,EAAoB,cAAe/C,GAAS+C,EAAoB,UAC/SI,EAAqBhK,EAAAA,cAAoB,SAASiK,EAAAA,EAAAA,GAAS,CAAC,EAAGhK,EAAO,CACxEyG,UAAWoD,EACX5J,IAAKA,KAGP,GAAIwJ,EAAY,CACd,IAAIQ,EAAkBN,EAAoB,cAM1C,MAJ0B,kBAAfF,IACTQ,EAAkBA,EAAkB,IAAMR,GAGxB1J,EAAAA,cAAoB,MAAO,CAC7C0G,UAAWwD,GACVF,EACL,CAEA,OAAOA,CACT,G","sources":["components/ModifySpecificTaskBody.jsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction ModifySpecificTaskBody(props) {\r\n  let [users, setUsers] = useState([]);\r\n  let [subconUsers, setSubconUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [approvalPath, setApprovalPath] = useState([]);\r\n  let [verificationOne, setVerificationOne] = useState([]);\r\n  let [verificationTwo, setVerificationTwo] = useState([]);\r\n  let [approval, setApproval] = useState([]);\r\n  let [msg, setMsg] = useState(\"\");\r\n  let [variant, setVariant] = useState(\"\");\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [tasks, setTasks] = useState([]);\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  let [selectedUserName, setSelectedUserName] = useState(\"\");\r\n\r\n  // Dissable Task Status Change if task already completed>>\r\n\r\n  const selectedObj = [];\r\n  const findFormErrors3 = () => {\r\n    const { boqApprovalRequirment } = form;\r\n    const newErrors = {};\r\n    if (\r\n      !boqApprovalRequirment ||\r\n      boqApprovalRequirment === \"\" ||\r\n      boqApprovalRequirment === \"Choose...\"\r\n    )\r\n      newErrors.boqApprovalRequirment = \"Choose a Boq status\";\r\n    return newErrors;\r\n  };\r\n\r\n  const updateBoq = async (e) => {\r\n    const newErrors = findFormErrors3();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      e.preventDefault();\r\n      setOpenDialog(true);\r\n\r\n      const boqValue = form.boqApprovalRequirment;\r\n      try {\r\n        const res = await axiosInstance.put(\r\n          `projonline/boqProjectRequirement/${boqValue}`,\r\n          tasks,\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        setTimeout(() => {\r\n          setMsg(res.data.msg);\r\n          setVariant(res.data.variant);\r\n          setOpen(true);\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          props.history.push({ pathname: \"/modifyTask\" });\r\n        }, 2000);\r\n      } catch (error) {\r\n        setMsg(\"Error updating BOQ\");\r\n        console.error(\"Error updating BOQ:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  const findFormErrors = () => {\r\n    const { assignedMobitelOfficer } = form;\r\n    const newErrors = {};\r\n    if (\r\n      !assignedMobitelOfficer ||\r\n      assignedMobitelOfficer === \"\" ||\r\n      assignedMobitelOfficer === \"Choose...\"\r\n    )\r\n      newErrors.assignedMobitelOfficer = \"Choose a Mobitel Officer!\";\r\n    return newErrors;\r\n  };\r\n  const findFormErrors2 = () => {\r\n    const { taskStatus } = form;\r\n    const newErrors = {};\r\n    if (!taskStatus || taskStatus === \"\" || taskStatus === \"Choose...\")\r\n      newErrors.taskStatus = \"Choose a task status\";\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setTasks(props.location.data);\r\n        setSubconUsers(\r\n          res.data.users.filter((obj) => obj.company.companyName !== \"Mobitel\")\r\n        );\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj[\"userCanAssignForTask\"] === true)\r\n        );\r\n        setCompanies(\r\n          res.data.companys.filter((obj) => obj.companyName !== \"Mobitel\")\r\n        );\r\n        setApprovalPath(res.data.users);\r\n        setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n        setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n        setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const updateStatusSubmit = (e) => {\r\n    const newErrors = findFormErrors2();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      e.preventDefault();\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/update\",\r\n          {\r\n            tasks,\r\n            taskObject: { taskStatus: form.taskStatus },\r\n            taskHistory: {\r\n              taskStatus: \"Status Changed\",\r\n              comment: \"Task Status Changed to > \" + form.taskStatus,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setMsg(res.data.msg);\r\n          setVariant(res.data.variant);\r\n          setOpen(true);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            setTasks([]);\r\n            props.history.push({ pathname: \"/modifyTask\" });\r\n          }, 1000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateOfficerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      var taskApprovalPath = [\r\n        {\r\n          approvalLevel: \"Verification Level 0\",\r\n          assignedOfficer: form.assignedMobitelOfficer,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 1\",\r\n          assignedOfficer: form.verificationOneId,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 2\",\r\n          assignedOfficer: form.verificationTwoId,\r\n        },\r\n        { approvalLevel: \"Final approval\", assignedOfficer: form.approvalId },\r\n      ].filter((element) => element.assignedOfficer != \"\");\r\n\r\n      const taskObject = {\r\n        assignedMobitelOfficer: form.assignedMobitelOfficer,\r\n        approvalPath: taskApprovalPath,\r\n      };\r\n\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/update\",\r\n          {\r\n            tasks,\r\n            taskObject,\r\n            taskHistory: {\r\n              taskStatus: \"Mobitel Officer Re-Assigned\",\r\n              comment: \"Task Re-Assigned to > \" + selectedUserName,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setTimeout(() => {\r\n            setMsg(res.data.msg);\r\n            setVariant(res.data.variant);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setTasks([]);\r\n            setForm({\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: \"\",\r\n              approvalType: \"Default\",\r\n            });\r\n            props.history.push({ pathname: \"/modifyTask\" }); // Changed\r\n          }, 1000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  //Re-Assigned Mobitel Officer Handler\r\n  const onChangeAssignedMobitelOfficer = (e) => {\r\n    const selectedOption = e.target.selectedOptions[0];\r\n    const selectedUserId = selectedOption.value;\r\n    selectedUserName = selectedOption.getAttribute(\"name\");\r\n    const selectedUser = { _id: selectedUserId, name: selectedUserName };\r\n    const name = selectedOption.getAttribute(\"name\");\r\n    setSelectedUserName(name);\r\n\r\n    if (e.target.value === \"Choose...\") {\r\n      setField(\"assignedMobitelOfficer\", e.target.value);\r\n      setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n      setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n      setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n    }\r\n    for (let i = 0; i < approvalPath.length; i++) {\r\n      if (approvalPath[i]._id === e.target.value) {\r\n        switch (approvalPath[i].approvalPath.length) {\r\n          case 0:\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 1:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setField(\"verificationOneId\", approvalPath[i].approvalPath[0]._id);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n          case 2:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: approvalPath[i].approvalPath[1]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 3:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[2]._id,\r\n                name: approvalPath[i].approvalPath[2].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n              approvalId: approvalPath[i].approvalPath[2]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Approval Path Handler\r\n  const onChangeApprovalType = (e) => {\r\n    if (e.target.value === \"New\") {\r\n      let mobitelUsers = approvalPath.filter(\r\n        (obj) => obj.company.companyName === \"Mobitel\"\r\n      );\r\n      setVerificationOne(mobitelUsers);\r\n      setVerificationTwo(mobitelUsers);\r\n      setApproval(mobitelUsers);\r\n      setForm({\r\n        ...form,\r\n        verificationOneId: mobitelUsers[0]._id,\r\n        verificationTwoId: mobitelUsers[0]._id,\r\n        approvalId: mobitelUsers[0]._id,\r\n        approvalType: e.target.value,\r\n      });\r\n      if (!!errors[\"approvalType\"])\r\n        setErrors({\r\n          ...errors,\r\n          assignedMobitelOfficer: null,\r\n        });\r\n    } else if (e.target.value === \"Default\") {\r\n      for (let i = 0; i < approvalPath.length; i++) {\r\n        if (approvalPath[i]._id === form.assignedMobitelOfficer) {\r\n          switch (approvalPath[i].approvalPath.length) {\r\n            case 0:\r\n              setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: \"\",\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 1:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setField(\r\n                \"verificationOneId\",\r\n                approvalPath[i].approvalPath[0]._id\r\n              );\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n            case 2:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: approvalPath[i].approvalPath[1]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 3:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[2]._id,\r\n                  name: approvalPath[i].approvalPath[2].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n                approvalId: approvalPath[i].approvalPath[2]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // Test Code - 3\r\n  // function getApprovalPath(item, users) {\r\n  //     if (item && item.approvalPath && item.approvalPath.length > 0) {\r\n  //       return item.approvalPath.map((appr, index) => {\r\n  //         const officer = users.find((officer) => officer._id.name=== appr.$oid);\r\n  //         const officerName = officer ? officer.name : \"Unknown Officer\";\r\n\r\n  //         return (\r\n  //           <div key={index}>\r\n  //             <div>{appr.approvalLevel} : {officerName}</div>\r\n  //             {/* <div>Approver Level: {appr.approvalLevel}</div>\r\n  //             <div>Assigned Officer: {officerName}</div> */}\r\n  //           </div>\r\n  //         );\r\n  //       });\r\n  //     } else {\r\n  //       return \"No approval path found\";\r\n  //     }\r\n  //   }\r\n  // Test code - 4 Latest working code\r\n  function getApprovalPath(item, users) {\r\n    if (item && item.approvalPath && item.approvalPath.length > 0) {\r\n      return item.approvalPath.map((appr, index) => {\r\n        const approver = appr.assignedOfficer;\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              {appr.approvalLevel} : {approver.name}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return \"No approval path found\";\r\n    }\r\n  }\r\n\r\n  // Disable Modification functions according to the specific task status---------\r\n  // Dissable Task Status Change if task already completed>>\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    // console.log(tasks[i].taskStatus)\r\n    if (\r\n      tasks[i].taskStatus !== \"Task accepted\" &&\r\n      tasks[i].taskStatus !== \"Task commenced\"\r\n    ) {\r\n      document.getElementById(\"formChangeTaskStatus\").disabled = true;\r\n      document.getElementById(\"btnChangeTaskStatus\").disabled = true;\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    //   \"Task handed over\",\r\n    //   \"Subcon allocated\",\r\n    //   \"Task accepted\",\r\n    //   \"Task completed\",\r\n    //   \"Task commenced\",\r\n    //   \"Task rejected\",\r\n    if (\r\n      tasks[i].taskStatus !== \"Task handed over\" &&\r\n      tasks[i].taskStatus !== \"Subcon allocated\" &&\r\n      tasks[i].taskStatus !== \"Task accepted\" &&\r\n      tasks[i].taskStatus !== \"Task completed\" &&\r\n      tasks[i].taskStatus !== \"Task commenced\" &&\r\n      tasks[i].taskStatus !== \"Task rejected\"\r\n    ) {\r\n      document.getElementById(\r\n        \"formChangeBoqApprovalRequirment\"\r\n      ).disabled = true;\r\n      document.getElementById(\r\n        \"btnChangeBoqApprovalRequirement\"\r\n      ).disabled = true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Modify Task</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            {/* <form onSubmit={onSubmit} enctype=\"multipart/form-data\"> */}\r\n            <form>\r\n              <div>\r\n                <Row>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Ref</th>\r\n                        <th>Site ID</th>\r\n                        <th>Site Name</th>\r\n                        <th>Assigned Mobitel Officer</th>\r\n                        <th>Task Status</th>\r\n                        <th>BOQ</th>\r\n                        <th>Approval Path</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {tasks.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item.taskRef}</td>\r\n                            <td>{item.siteID}</td>\r\n                            <td>{item.siteName}</td>\r\n                            <td>{item.assignedMobitelOfficer.name}</td>\r\n                            <td>{item.taskStatus}</td>\r\n                            <td>\r\n                              {item.boqprojectrequirement === true\r\n                                ? \"Required\"\r\n                                : item.boqprojectrequirement === false\r\n                                ? \"Not Required\"\r\n                                : \"Required\"}\r\n                            </td>\r\n                            <td>{getApprovalPath(item, users)}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </div>\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Change Task Status</Form.Label>\r\n                    <Form.Control\r\n                      id=\"formChangeTaskStatus\"\r\n                      onChange={(e) => {\r\n                        setField(\"taskStatus\", e.target.value);\r\n                        // console.log(\"Selected Task Status:\", e.target.value); // Add console.log statement here\r\n                      }}\r\n                      value={form.taskStatus}\r\n                      as=\"select\"\r\n                      defaultValue=\"item.taskStatus\"\r\n                      isInvalid={!!errors.taskStatus}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      <option>Task handed over</option>\r\n                      {/* <option>Subcon allocated</option>\r\n                                        <option>Task accepted</option>\r\n                                        <option>Task commenced</option>\r\n                                        <option>Task completed</option>\r\n                                        <option>BOQ submitted</option>\r\n                                        <option>BOQ Verified_0</option>\r\n                                        <option>BOQ Verified_1</option>\r\n                                        <option>BOQ Verified_2</option>\r\n                                        <option>BOQ Approved</option> */}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.taskStatus}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Update Task Status</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={(e) => updateStatusSubmit(e)}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                      id=\"btnChangeTaskStatus\"\r\n                    >\r\n                      Update Task Status\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Form>\r\n                    <Form.Group as={Col}>\r\n                      {/* <Form.Label style={{ fontSize: 11 }}>**Only backward status changes are accepted. Refrain from making forward status changes... </Form.Label> */}\r\n                      <Form.Label style={{ fontSize: 11 }}>\r\n                        ** You can't change the status once the task already\r\n                        submitted as \"Task completed\"\r\n                      </Form.Label>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Re-Assign To</Form.Label>\r\n                    <Form.Control\r\n                      onChange={onChangeAssignedMobitelOfficer}\r\n                      as=\"select\"\r\n                      value={form.assignedMobitelOfficer}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.assignedMobitelOfficer}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      {users.map((opt) => (\r\n                        <option value={opt._id} name={opt.name}>\r\n                          {opt.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.assignedMobitelOfficer}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Re-Assign</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={updateOfficerSubmit}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                    >\r\n                      Re-Assign\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n                <Row></Row>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Verification by (Level 1)</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) =>\r\n                        setField(\"verificationOneId\", e.target.value)\r\n                      }\r\n                      value={form.verificationOneId}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.verificationOneId}\r\n                      disabled\r\n                    >\r\n                      {verificationOne.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.verificationOneId}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Verification by (Level 2)</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) =>\r\n                        setField(\"verificationTwoId\", e.target.value)\r\n                      }\r\n                      value={form.verificationTwoId}\r\n                      defaultValue=\"Choose...\"\r\n                      disabled\r\n                    >\r\n                      {verificationTwo.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Approval by</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={(e) => setField(\"approvalId\", e.target.value)}\r\n                      value={form.approvalId}\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.approvalId}\r\n                      disabled\r\n                    >\r\n                      {approval.map((opt) => (\r\n                        <option value={opt._id}>{opt.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.approvalId}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row>\r\n                  <Form>\r\n                    <Form.Group as={Col}>\r\n                      {/* <Form.Label style={{ fontSize: 11 }}>**Only backward status changes are accepted. Refrain from making forward status changes... </Form.Label> */}\r\n                      <Form.Label style={{ fontSize: 11 }}>\r\n                        {/* ** If you need to change the approval path, Update the approval path in (My Account>Add/Update User or Company>Select relevant user) */}\r\n                        ** If you need to change current approval path, Go to\r\n                        (My Account&gt;Add/Update User or Company&gt;Select\r\n                        relevant Mobitel Officer to be assigned) and Update the\r\n                        approval path before re-assign the task.\r\n                      </Form.Label>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n\r\n              <div style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>BOQ Approval Requirement</Form.Label>\r\n                    <Form.Control\r\n                      id=\"formChangeBoqApprovalRequirment\"\r\n                      onChange={(e) => {\r\n                        setField(\"boqApprovalRequirment\", e.target.value);\r\n                        // console.log(\r\n                        //   \"Selected boqApprovalRequirment:\",\r\n                        //   e.target.value\r\n                        // ); // Add console.log statement here\r\n                      }}\r\n                      value={form.boqApprovalRequirment}\r\n                      as=\"select\"\r\n                      defaultValue=\"item.boqApprovalRequirment\"\r\n                      isInvalid={!!errors.boqApprovalRequirment}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      <option value={true}>Required</option>\r\n                      <option value={false}>Not Required</option>\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.boqApprovalRequirment}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Update</Form.Label>\r\n                    <br />\r\n                    <Button\r\n                      onClick={(e) => updateBoq(e)}\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      style={{ width: \"130px\", height: \"30px\" }}\r\n                      id=\"btnChangeBoqApprovalRequirement\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col}></Form.Group>\r\n                </Row>\r\n                <Row></Row>\r\n              </div>\r\n              <Row>\r\n                <Form>\r\n                  <br></br>\r\n                </Form>\r\n              </Row>\r\n            </form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={variant} sx={{ width: \"100%\" }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ModifySpecificTaskBody);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Alert","React","props","ref","elevation","variant","withRouter","users","setUsers","useState","subconUsers","setSubconUsers","companies","setCompanies","approvalPath","setApprovalPath","verificationOne","setVerificationOne","verificationTwo","setVerificationTwo","approval","setApproval","msg","setMsg","setVariant","axiosInstance","axios","baseURL","process","form","setForm","tasks","setTasks","errors","setErrors","open","setOpen","openDialog","setOpenDialog","selectedUserName","setSelectedUserName","updateBoq","async","newErrors","boqApprovalRequirment","findFormErrors3","Object","keys","length","e","preventDefault","boqValue","res","put","headers","token","JSON","parse","localStorage","getItem","accessToken","setTimeout","data","history","push","pathname","error","console","setField","field","value","useEffect","get","then","location","filter","obj","company","companyName","companys","_id","name","catch","err","log","updateStatusSubmit","taskStatus","findFormErrors2","post","taskObject","taskHistory","comment","handleClose","event","reason","getApprovalPath","item","map","appr","index","approver","assignedOfficer","approvalLevel","i","document","getElementById","disabled","className","striped","bordered","hover","size","taskRef","siteID","siteName","assignedMobitelOfficer","boqprojectrequirement","style","border","padding","as","Col","id","onChange","target","defaultValue","isInvalid","type","onClick","width","height","fontSize","selectedOption","selectedOptions","getAttribute","verificationOneId","verificationTwoId","approvalId","approvalType","opt","findFormErrors","taskApprovalPath","element","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","display","_excluded","_ref","bsPrefix","borderless","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}