{"version":3,"file":"static/js/1975.71229166.chunk.js","mappings":"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","sources":["components/BoQPopup.jsx","components/VerifyBoqSpecificTaskBody.jsx"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TablePagination } from '@material-ui/core'\r\nimport React,{ useEffect,useState, forwardRef } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { MenuItem, Select } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport AddBox from '@mui/icons-material/AddBox';\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\n\r\nlet rateCardData = []\r\n    \r\n\r\nexport default function BoQPopup(props) {\r\n  \r\n  const [filteredData,setFilteredData]=useState(rateCardData)\r\n  const [rateCard,setRateCard] = useState(\"all\")\r\n  const {openPopup,setOpenPopup}=props;\r\n  const [selectedRows,setSelectedRows]=useState([]);\r\n  \r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  })\r\n\r\n\r\n    useEffect(() => {\r\n      rateCardData=[]\r\n      axiosInstance.get('projonline/allRateCards',{headers:{token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken}}).then(res=>{\r\n\r\n        console.log(res.data)\r\n            const filter = res.data.filter((task)=>(\r\n              task.rateCardSubcon._id === JSON.parse(localStorage.getItem(\"user\")).company._id && task.rateCardValidTo >= props.acceptedDate && task.rateCardValidFrom <= props.acceptedDate ) )\r\n              // console.log(filter)\r\n              filter.forEach(card => {\r\n                card.rateCardItems.forEach(item=>{\r\n                    item['rateCardDiv']=card.rateCardDiv\r\n                    rateCardData.push(item)\r\n                })\r\n                \r\n            });\r\n\r\n            \r\n            // console.log(rateCardData)\r\n            //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n            \r\n            return\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    } , [] )\r\n\r\n    \r\n\r\n\r\n    const columns = [   {title: 'ERP Code', field: 'erpCode', cellStyle: {width: 100,minWidth: 100, maxWidth:100,height:1}},\r\n                        {title: 'Rate Card Div', field: 'rateCardDiv', cellStyle: {width: 150,minWidth: 150, maxWidth:150, height:1}},\r\n                        {title: 'Item Discreption', field: 'itemDiscreption',cellStyle: {width: 400,minWidth: 400,maxWidth:400, height:1}},\r\n                        {title: 'UoM', field: 'itemUom',cellStyle:{width: 150,minWidth: 150, maxWidth:150, height:1}},    \r\n                        {title: 'Unit Rate', field: 'itemRate', type: 'currency', currencySetting: { currencyCode: 'LKR' }, cellStyle:{width: 200,minWidth: 200,maxWidth:200, height:1}}\r\n                    ]\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    const handleRowsSelect = () => {\r\n\r\n\r\n      if ( Array.isArray(selectedRows) && selectedRows.length ) {\r\n        props.callBk( filteredData.filter(row => selectedRows.includes(row)));\r\n      }\r\n      \r\n      setOpenPopup(false)\r\n\r\n      const newData = rateCardData.map((row) => ({\r\n        ...row,\r\n        tableData: {\r\n          checked: false,\r\n        },\r\n      }));\r\n  \r\n      setFilteredData(newData)\r\n\r\n      setSelectedRows([])\r\n\r\n\r\n    }\r\n\r\n    const handleRowsSelectClose=()=>{\r\n\r\n      setOpenPopup(false)\r\n\r\n      const newData = rateCardData.map((row) => ({\r\n        ...row,\r\n        tableData: {\r\n          checked: false,\r\n        },\r\n      }));\r\n  \r\n      setFilteredData(newData)\r\n\r\n      setSelectedRows([])\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setFilteredData(rateCard==='all'?rateCardData:rateCardData.filter(dt=>dt.rateCard===rateCard))  \r\n    },[rateCard])  \r\n\r\n    return (\r\n        <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n           \r\n          <DialogContent>\r\n                    \r\n            <MaterialTable title=\"BOQ Line Items\"\r\n            columns={columns}\r\n            data={filteredData}\r\n            icons={tableIcons}\r\n            onSelectionChange={(rows)=>(setSelectedRows(rows))}\r\n            \r\n            options={{\r\n                exportButton: true,\r\n                pageSizeOptions: [5, 10, 20],\r\n                paginationType: 'stepped',\r\n                showTextRowsSelected: false,\r\n                actionsColumnIndex: -1,\r\n                filtering: true,\r\n                selection:true,\r\n                tableLayout: \"auto\",\r\n                selectionProps:{},\r\n                rowStyle: {\r\n                    backgroundColor: '#EEE', \r\n                },\r\n                headerStyle: {\r\n                    backgroundColor: '#01579b',\r\n                    color: '#FFF'\r\n                  }\r\n                \r\n          \r\n              }}\r\n              actions={[\r\n                  {\r\n                      icon:()=><Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={rateCard}\r\n                      onChange={(e)=>setRateCard(e.target.value)}\r\n                      style={{width:100}}\r\n                    >\r\n                      <MenuItem value={\"all\"}><em>All</em></MenuItem>  \r\n                      <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                      <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                      <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                    </Select>,\r\n                    tooltip:\"Select Rate Card\",\r\n                    isFreeAction:true\r\n                  }\r\n              ]\r\n\r\n            }\r\n            components={{\r\n                Pagination: (props) => (\r\n                  <div>\r\n                    <Grid container style={{ pading: 15, background: '#f5f5f5' }}>\r\n                    \r\n                      <Grid sm={11} align=\"right\" item>\r\n                        <DialogActions>\r\n                          <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={handleRowsSelect}>Submit</Button>\r\n                        </DialogActions>\r\n                      </Grid>\r\n                      <Grid sm={1} align='center' item>\r\n                        <DialogActions>\r\n                          <Button variant=\"contained\" color=\"default\" onClick={handleRowsSelectClose } >Close</Button>\r\n                        </DialogActions>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <TablePagination {...props} />\r\n                  </div>\r\n                ),\r\n              }}/>     \r\n        \r\n          </DialogContent>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useState, useEffect, forwardRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport MaterialTable, { MTablePagination } from 'material-table';\nimport { TablePagination } from \"@material-ui/core\"\nimport BoQPopup from './BoQPopup'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Dialog from '@mui/material/Dialog';\nimport Box from '@mui/material/Box';\nimport DialogContent from '@mui/material/DialogContent';\nimport CircularProgress from '@mui/material/CircularProgress'\n\nimport AddBox from '@mui/icons-material/AddBox';\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\nimport Check from '@mui/icons-material/Check';\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport Clear from '@mui/icons-material/Clear';\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\nimport Edit from '@mui/icons-material/Edit';\nimport FilterList from '@mui/icons-material/FilterList';\nimport FirstPage from '@mui/icons-material/FirstPage';\nimport LastPage from '@mui/icons-material/LastPage';\nimport Remove from '@mui/icons-material/Remove';\nimport SaveAlt from '@mui/icons-material/SaveAlt';\nimport Search from '@mui/icons-material/Search';\nimport ViewColumn from '@mui/icons-material/ViewColumn';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n\nfunction VerifyBoqSpecificTaskBody(props) {\n\n    let [users, setUsers] = useState([]);\n    let [companies, setCompanies] = useState([]);\n    const [openPopup, setOpenPopup] = useState(false);\n    const [boqData, setBoqData] = useState([]);\n    // const [boqData, setBoqData] = useState(updatedData); // Test Code\n    const [totalCost, setTotalCost] = useState()\n    const [totalCapexOpexCost, setTotalCapexOpexCost] = useState()\n    const [approvalHistory, setApproalHistory] = useState([])\n    let [severity, setSeverity] = useState(\"\");\n    let [alart, setAlart] = useState(\"\");\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n\n    let [form, setForm] = useState({})\n    let [errors, setErrors] = useState({})\n    let [open, setOpen] = useState(false);\n    let [openDialog, setOpenDialog] = useState(false);\n\n    let setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n        if (!!errors[field]) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n    // Capex/Opex amount variable create\n    const [CapexPrAmount, setTotalCapexCost] = useState(0);\n    const [OpexPrAmount, setTotalOpexCost] = useState(0);\n\n    //const {id} = useParams();\n    //value={mapname.name}\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const findFormErrors = () => {\n        const { boqVerifiedComment } = form\n        const newErrors = {}\n\n        switch (true) {\n            case ((!boqVerifiedComment || boqVerifiedComment === '') && (getBoqCapexTotal() + getBoqOpexTotal() !== getBoqCapexOpexTotal())):\n                newErrors.boqVerifiedComment = 'Capex/Opex type and Comment cannot be blank!';\n                break;\n            case (!boqVerifiedComment || boqVerifiedComment === ''):\n                newErrors.boqVerifiedComment = 'Comment cannot be blank!';\n                break;\n            case (getBoqCapexTotal() + getBoqOpexTotal() !== getBoqCapexOpexTotal()):\n                newErrors.boqVerifiedComment = 'Capex/Opex type cannot be blank!';\n                break;\n        }\n\n        // name errors\n        // if (!boqVerifiedComment || boqVerifiedComment === '')newErrors.boqVerifiedComment = 'Comment cannot be blank!'                         //Test Code\n        // if (getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal())newErrors.boqVerifiedComment = 'Capex/Opex type cannot be blank!'  //Test Code\n        // if ((!boqVerifiedComment || boqVerifiedComment === '')||(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal()))newErrors.boqVerifiedComment = 'Capex/Opex type and Comment cannot be blank!'\n        // console.log(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal());\n        // console.log(!boqVerifiedComment || boqVerifiedComment === '');\n        // console.log((!boqVerifiedComment || boqVerifiedComment === '')&&(getBoqCapexTotal()+getBoqOpexTotal() !== getBoqCapexOpexTotal()));\n        return newErrors\n    }\n    \n    const findFormErrorsForReject = () => {\n        const { boqVerifiedComment } = form\n        const newErrors = {}\n        // name errors\n\n        if (!boqVerifiedComment || boqVerifiedComment === '') newErrors.boqVerifiedComment = 'cannot be blank!'\n        return newErrors\n    }\n    // To apply All Capex when click the button\n    const handleAllCapexClick = () => {\n        const updatedData = boqData.map((item) => ({\n            ...item,\n            capexopexLine: \"Capex\",  // added\n            // itemCapexOpexType: 'Capex'\n        }));\n        setBoqData(updatedData);\n        console.log(updatedData)\n        // console.log(updatedRows)\n\n    };\n    // To apply All Opex when click the button\n    const handleAllOpexClick = () => {\n        const updatedData = boqData.map((item) => ({\n            ...item,\n            capexopexLine: \"Opex\",  // added\n            // itemCapexOpexType: 'Opex'\n        }));\n        setBoqData(updatedData);\n        console.log(updatedData)\n    };\n\n    const columns = [\n        { title: 'ERP Code', field: 'erpCode', filtering: false, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Rate Card Div', field: 'rateCardDiv', editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Item Discreption', field: 'itemDiscreption', filtering: false, editable: false, cellStyle: { width: 300, minWidth: 300, maxWidth: 300, height: 1 } },\n        { title: 'UoM', field: 'itemUom', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Unit Rate', field: 'itemRate', editable: false, filtering: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Quantity', field: 'itemQty', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Item Total', field: 'itemTotal', type: 'currency', currencySetting: { currencyCode: 'LKR' }, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        // { title: 'Capex/Opex', field: 'itemCapexOpexType', lookup: { Capex: \"Capex\", Opex: \"Opex\" }, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 }, editable: 'onUpdate' }, // Working Code     \n        { title: 'Capex/Opex', field: 'capexopexLine',lookup: { Capex: \"Capex\", Opex: \"Opex\" }, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 }}, // Test Code\n\n\n        { title: 'Comment', field: 'itemComment', editable: \"onUpdate\", cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n    ];\n    // To calculate total Amount\n    function getBoqCapexOpexTotal() {\n        var capexOpexTotal = 0;\n        for (let i = 0; i < boqData.length; i++) {\n            capexOpexTotal = capexOpexTotal + boqData[i].itemTotal\n        }\n        setTotalCapexOpexCost(capexOpexTotal)\n        return capexOpexTotal;\n    }\n    // To calculate total CapexAmount\n    function getBoqCapexTotal() {\n        let capexTotal = 0;\n        for (let i = 0; i < boqData.length; i++) {\n            const capexopexLine = boqData[i].capexopexLine;\n            if (capexopexLine === \"Capex\") {\n                capexTotal += boqData[i].itemTotal;\n            }\n        }\n        setTotalCapexCost(capexTotal);\n        return capexTotal;\n    }\n\n    // To calculate total OpexAmount\n    function getBoqOpexTotal() {\n        var opexTotal = 0;\n        for (let i = 0; i < boqData.length; i++) {\n            const capexopexLine = boqData[i].capexopexLine;\n            if (capexopexLine === \"Opex\") {\n                opexTotal += boqData[i].itemTotal;\n            }\n        }\n        setTotalOpexCost(opexTotal);\n        return opexTotal;\n    }\n    //Approal History download table\n    const columns_AH = [\n        { field: 'taskStatus', headerName: 'Status', width: 250 },\n        { field: 'performedDate', headerName: 'Performed Date', width: 200, valueGetter: (params) => params.row.performedDate.split('T')[0] },\n        { field: 'performedBy', headerName: 'Performed by', width: 200, valueGetter: (params) => params.row.performedBy.name },\n        { field: 'comment', headerName: 'Comment', width: 500 }\n\n    ];\n\n    useEffect(() => {\n        // console.log(props.location.data.row)\n        setUsers([{ name: props.location.data.row.assignedMobitelOfficer.name }])\n        setCompanies([{ companyName: props.location.data.row.assignedSubcon.companyName }])\n        setForm({\n            'taskRef': props.location.data.row.taskRef,\n            'siteID': props.location.data.row.siteID,\n            'siteName': props.location.data.row.siteName,\n            'actualTaskStartDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task commenced').performedDate.split('T')[0],\n            'actualTaskCompletedDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task completed').performedDate.split('T')[0],\n            'taskAssignedDiv': props.location.data.row.taskAssignedDiv,\n            'assignedMobitelOfficer': props.location.data.row.assignedMobitelOfficer.name,\n            'workScope': props.location.data.row.workScope,\n            'assignedSubcon': props.location.data.row.assignedSubcon.companyName\n        })\n\n        setBoqData(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].boqData)  // original code        \n        setTotalCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].totalCost)\n        setApproalHistory(props.location.data.row.taskHistory.filter((e) => (e.taskStatus === \"BOQ Verified_0\") || (e.taskStatus === \"BOQ Verified_1\") || (e.taskStatus === \"BOQ Verified_2\") || (e.taskStatus === \"BOQ Rejected\") || (e.taskStatus === \"BOQ submitted\")))\n        //console.log(props.location.data.row.boqs[props.location.data.row.boqs.length-1].totalCost)    \n    }, [])\n\n    const smsFetch = async (mobileNo) => {\n        // console.log(mobileNo)\n        //console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\n        const url = \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\"\n        const Body = {\n            \"username\": \"smsdigisvc_sci\",\n            \"password\": \"Sci@#25\",\n            \"from\": \"Mobitel-PMS\",\n            \"to\": \"0\" + mobileNo,\n            \"text\": \"You have new BOQ to review. Please login to https://projectonline.mobitel.lk/\",\n            \"mesageType\": 0\n        }\n        //console.log(JSON.parse(localStorage.getItem(\"user\")))\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(Body),\n            mode: 'no-cors'\n        };\n        const response = await fetch(url, requestOptions);\n        // console.log(response)\n    };    \n\n    const onAccept = (e) => {\n        e.preventDefault()\n        const newErrors = findFormErrors()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n            console.log(boqData)\n        } else {\n            var taskObject\n            // console.log(props.location.data.row)\n\n            if ((props.location.data.row.taskStatus === \"BOQ submitted\")) {\n                taskObject = {\n                    taskStatus: 'BOQ Verified_0'\n                }\n                smsFetch(props.location.data.row.approvalPath[1].assignedOfficer.mobileNo)\n\n            } else if ((props.location.data.row.taskStatus === \"BOQ Verified_0\") && (props.location.data.row.approvalPath.length === 4)) {\n                taskObject = {\n                    taskStatus: 'BOQ Verified_1'\n                }\n                smsFetch(props.location.data.row.approvalPath[2].assignedOfficer.mobileNo)\n            } else if ((props.location.data.row.taskStatus === \"BOQ Verified_1\") || ((props.location.data.row.taskStatus === \"BOQ Verified_0\") && (props.location.data.row.approvalPath.length === 3))) {\n                taskObject = {\n                    taskStatus: 'BOQ Verified_2'\n                }\n                if (props.location.data.row.taskStatus === \"BOQ Verified_1\") {\n                    smsFetch(props.location.data.row.approvalPath[3].assignedOfficer.mobileNo)\n                } else {\n                    smsFetch(props.location.data.row.approvalPath[2].assignedOfficer.mobileNo)\n                }\n            }\n\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { CapexPrAmount, OpexPrAmount, totalCost, boqData, taskObject, taskHistory: { taskStatus: taskObject.taskStatus, comment: form.boqVerifiedComment } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)    \n                    // console.log(props.location.data.row._id)  \n                    console.log(\">>>>>>>>>>>>>>>>>\")\n                    console.log(boqData)\n                    console.log(\"CapexPrAmount=\" + CapexPrAmount)\n                    console.log(\"OpexPrAmount=\" + OpexPrAmount)\n                    console.log(\"totalCost=\" + totalCost)\n                    console.log(res.data)\n                    console.log(\">>>>>>>>>>>>>>>>>\")\n\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/verifyBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n    }\n\n    const onReject = (e) => {\n\n        e.preventDefault()\n\n        const newErrors = findFormErrorsForReject()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            const taskObject = {\n                taskStatus: 'BOQ Rejected'\n            };\n\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { totalCost, boqData, taskObject, taskHistory: { taskStatus: 'BOQ Rejected', comment: form.boqVerifiedComment } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/verifyBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <div>\n\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n                {/* Content Header (Page header) */}\n                <div className=\"content-header\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Verify BOQ Task ID: {form.taskRef} </h1>\n                                </div>\n                            </div>\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                {/* /.content-header */}\n                {/* Main content */}\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <Form >\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site ID</Form.Label>\n                                    <Form.Control disabled value={form.siteID} className=\"col-md-9\" type=\"text\" placeholder=\"Enter site ID\" isInvalid={!!errors.siteID} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteID}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site Name</Form.Label>\n                                    <Form.Control disabled value={form.siteName} type=\"text\" placeholder=\"Enter site Name\" isInvalid={!!errors.siteName} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"\">\n                                </Form.Group>\n                            </Row>\n\n                            <Row className=\"mb-3\">\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Commencement Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskStartDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskStartDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskStartDate}\n                                    </Form.Control.Feedback>\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Completed Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskCompletedDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskCompletedDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskCompletedDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                </Form.Group>\n\n                            </Row>\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Task Assigned Division</Form.Label>\n                                    <Form.Control disabled value={form.taskAssignedDiv} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.taskAssignedDiv}>\n                                        <option>Choose...</option>\n                                        <option>Project_Radio</option>\n                                        <option>Project_Core</option>\n                                        <option>Project_TX</option>\n                                        <option>Project_IBS</option>\n                                        <option>Project_WiFi</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.taskAssignedDiv}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned Mobitel Officer</Form.Label>\n                                    <Form.Control disabled as=\"select\" value={form.assignedMobitelOfficer} defaultValue=\"Choose...\" isInvalid={!!errors.assignedMobitelOfficer}>\n                                        <option>Choose...</option>\n                                        {users.map(opt => (\n                                            <option value={opt._id}>{opt.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedMobitelOfficer}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned subcontractor</Form.Label>\n                                    <Form.Control disabled value={form.assignedSubcon} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.assignedSubcon} >\n                                        <option>Choose...</option>\n                                        {companies.map(opt => (\n                                            <option value={opt._id}>{opt.companyName}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedSubcon}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Row>\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>High level work scope</Form.Label>\n                                    <Form.Control disabled value={form.workScope} as=\"textarea\" rows={2} placeholder=\"\" isInvalid={!!errors.workScope} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.workScope}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Row>\n                        </Form>\n\n                        <MaterialTable\n                            title={'Verify BOQ-'+ form.siteID + '_' + form.taskRef}\n                            data={boqData}\n                            columns={columns}\n                            icons={tableIcons}\n                            editable={{\n                                onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n                                    const index = oldRow.tableData.id;\n                                    const updatedRows = [...boqData];\n\n                                    console.log(updatedRow.capexopexLine);\n\n                                    // switch (updatedRow.itemCapexOpexType) {\n                                    //     case \"Capex\":\n                                    //         updatedRow.capexopex = \"Capex\";\n                                    //         break;\n                                    //     case \"Opex\":\n                                    //         updatedRow.capexopex = \"Opex\";\n                                    //         break;\n                                    //     default:\n                                    //         updatedRow.capexopex = \"\";\n                                    // }\n                                    updatedRow.itemTotal = updatedRow.itemRate * updatedRow.itemQty\n                                    updatedRows[index] = updatedRow\n                                    setTimeout(() => {\n                                        setBoqData(updatedRows)\n                                        resolve()\n                                    }, 1000)\n                                })\n                            }}\n                            options={{\n                                exportButton: true,\n                                pageSizeOptions: [boqData.length, 5, 10, 20],\n                                // pageSizeOptions: [All,5, 10, 20], // On Test\n\n                                paginationType: 'stepped',\n                                showTextRowsSelected: false,\n                                actionsColumnIndex: -1,\n                                filtering: false,\n                                tableLayout: \"auto\",\n                                rowStyle: {\n                                    backgroundColor: '#EEE'\n                                },\n                                headerStyle: {\n                                    backgroundColor: '#01579b',\n                                    color: '#FFF'\n                                }\n                            }}\n                            components={{\n                                Pagination: (props) => (\n                                    <>\n                                        <Grid container justifyContent=\"flex-end\">\n                                            <Button variant=\"primary\" style={{ marginRight: '8px' }} onClick={handleAllCapexClick}>All Capex</Button>\n                                            <Button variant=\"primary\" onClick={handleAllOpexClick}>All Opex</Button>\n                                        </Grid>\n\n                                        <Grid container style={{ pading: 300, background: '#f5f5f5' }}>\n                                            <Grid sm={9} item>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Capex Amount\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Opex Amount\n                                                </Typography>\n                                                <Typography align='right' fontWeight='bold' variant='subtitle1'>\n                                                    Total Amount\n                                                </Typography>\n                                            </Grid>\n                                            <Grid sm={3} align='center'>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    {\"LKR \" + getBoqCapexTotal().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                                                </Typography>\n                                                {/* // Test Code */}\n                                                {/* <Typography align='right' variant='subtitle1'>  \n                                                {\"LKR \" + (getBoqCapexTotal() ? getBoqCapexTotal() : boqData.CapexPrAmount)}\n                                                </Typography> */}\n\n                                                <Typography align='right' variant='subtitle1'>\n                                                    {\"LKR \" + getBoqOpexTotal().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1' fontWeight='bold'>\n                                                    {\"LKR \" + getBoqCapexOpexTotal().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <TablePagination {...props} />\n                                    </>\n                                ),\n                            }}\n                        >\n\n                        </MaterialTable>\n                        <br />\n                        <Row>\n                            <Form.Group as={Col} >\n                                <Form.Label>Approval History</Form.Label>\n                                <div style={{ height: 250, width: '100%' }}>\n                                    <DataGrid\n                                        getRowId={(history) => history._id}\n                                        rows={approvalHistory}\n                                        columns={columns_AH}\n                                        pageSize={5}\n                                        rowsPerPageOptions={[5]}\n                                        rowHeight={30}\n                                        headerHeight={40}\n                                    />\n\n                                </div>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Form.Group as={Col} >\n                                <Form.Label>Comments</Form.Label>\n                                <Form.Control onChange={e => setField('boqVerifiedComment', e.target.value)} as=\"textarea\" rows={2} value={form.boqVerifiedComment} placeholder=\"Enter your comments\" isInvalid={!!errors.boqVerifiedComment} />\n                                <Form.Control.Feedback type='invalid'>\n                                    {errors.boqVerifiedComment}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Row>\n                        <Button variant=\"warning\" onClick={onReject}>\n                            Reject BOQ\n                        </Button>{' '}\n\n                        <Button variant=\"primary\" onClick={onAccept}>\n                            BOQ Verified\n                        </Button>\n                    </div>{/* /.container-fluid */}\n                </section>\n                {/* /.content */}\n            </div>\n\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }} >\n                    {alart}\n                </Alert>\n            </Snackbar>\n            <Dialog\n                open={openDialog}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <Box sx={{ display: 'flex' }}>\n                        <CircularProgress />\n                    </Box>\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n\n}\n\nexport default withRouter(VerifyBoqSpecificTaskBody)"],"names":["rateCardData","BoQPopup","props","useState","filteredData","setFilteredData","rateCard","setRateCard","openPopup","setOpenPopup","selectedRows","setSelectedRows","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","console","log","data","filter","task","rateCardSubcon","_id","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","item","rateCardDiv","push","catch","err","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","handleRowsSelect","Array","isArray","length","callBk","row","includes","newData","map","tableData","checked","handleRowsSelectClose","dt","open","fullWidth","maxWidth","title","columns","field","cellStyle","width","minWidth","height","type","currencySetting","currencyCode","icons","onSelectionChange","rows","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","filtering","selection","tableLayout","selectionProps","rowStyle","backgroundColor","headerStyle","color","actions","icon","labelId","id","value","onChange","e","target","style","tooltip","isFreeAction","components","Pagination","container","pading","background","sm","align","variant","onClick","Alert","React","elevation","withRouter","users","setUsers","companies","setCompanies","boqData","setBoqData","totalCost","setTotalCost","setTotalCapexOpexCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","form","setForm","errors","setErrors","setOpen","openDialog","setOpenDialog","CapexPrAmount","setTotalCapexCost","OpexPrAmount","setTotalOpexCost","handleAllCapexClick","updatedData","capexopexLine","handleAllOpexClick","getBoqCapexOpexTotal","capexOpexTotal","i","itemTotal","getBoqCapexTotal","capexTotal","getBoqOpexTotal","opexTotal","name","location","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","taskHistory","find","x","taskStatus","performedDate","split","taskAssignedDiv","workScope","boqs","smsFetch","mobileNo","Body","requestOptions","method","body","stringify","mode","fetch","handleClose","event","reason","className","as","Col","disabled","placeholder","isInvalid","controlId","actualTaskStartDate","actualTaskCompletedDate","defaultValue","opt","editable","lookup","Capex","Opex","onRowUpdate","updatedRow","oldRow","Promise","resolve","reject","index","updatedRows","itemRate","itemQty","setTimeout","justifyContent","marginRight","fontWeight","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getRowId","history","headerName","valueGetter","params","performedBy","pageSize","rowsPerPageOptions","rowHeight","headerHeight","boqVerifiedComment","preventDefault","newErrors","findFormErrorsForReject","Object","keys","put","taskObject","comment","pathname","error","findFormErrors","approvalPath","assignedOfficer","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display"],"sourceRoot":""}