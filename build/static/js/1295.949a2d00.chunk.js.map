{"version":3,"file":"static/js/1295.949a2d00.chunk.js","mappings":"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","sources":["components/ApproveBoqSpecificTaskBody.jsx","components/BoQPopup.jsx"],"sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport MaterialTable, { MTablePagination } from 'material-table';\nimport { TablePagination } from \"@material-ui/core\"\nimport BoQPopup from './BoQPopup'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Dialog from '@mui/material/Dialog';\nimport Box from '@mui/material/Box';\nimport DialogContent from '@mui/material/DialogContent';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport AddBox from '@mui/icons-material/AddBox';\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\nimport Check from '@mui/icons-material/Check';\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport Clear from '@mui/icons-material/Clear';\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\nimport Edit from '@mui/icons-material/Edit';\nimport FilterList from '@mui/icons-material/FilterList';\nimport FirstPage from '@mui/icons-material/FirstPage';\nimport LastPage from '@mui/icons-material/LastPage';\nimport Remove from '@mui/icons-material/Remove';\nimport SaveAlt from '@mui/icons-material/SaveAlt';\nimport Search from '@mui/icons-material/Search';\nimport ViewColumn from '@mui/icons-material/ViewColumn';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n\n\nfunction ApproveBoqSpecificTaskBody(props) {\n\n    let [users, setUsers] = useState([]);\n    let [companies, setCompanies] = useState([]);\n    const [openPopup, setOpenPopup] = useState(false)\n    const [boqData, setBoqData] = useState([])\n    const [totalCost, setTotalCost] = useState()\n    const [CapexPrAmount, setTotalCapexCost] = useState(0);\n    const [OpexPrAmount, setTotalOpexCost] = useState(0);\n    const [approvalHistory, setApproalHistory] = useState([])\n    let [severity, setSeverity] = useState(\"\");\n    let [alart, setAlart] = useState(\"\");\n\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n\n    let [form, setForm] = useState({})\n    let [errors, setErrors] = useState({})\n    let [open, setOpen] = useState(false);\n    let [openDialog, setOpenDialog] = useState(false);\n\n    let setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n        if (!!errors[field]) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n\n\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const findFormErrors = () => {\n        const { comment } = form\n        const newErrors = {}\n        // name errors\n        if (!comment || comment === '') newErrors.comment = 'cannot be blank!'\n\n\n        return newErrors\n    }\n\n    const findFormErrorsForReject = () => {\n        const { comment } = form\n        const newErrors = {}\n        // name errors\n\n        if (!comment || comment === '') newErrors.comment = 'cannot be blank!'\n\n        return newErrors\n    }\n\n    //Approal History download table\n    const columns_AH = [\n        { field: 'taskStatus', headerName: 'Status', width: 250 },\n        { field: 'performedDate', headerName: 'Performed Date', width: 200, valueGetter: (params) => params.row.performedDate.split('T')[0] },\n        { field: 'performedBy', headerName: 'Performed by', width: 200, valueGetter: (params) => params.row.performedBy.name },\n        { field: 'comment', headerName: 'Comment', width: 500 }\n\n    ];\n\n    const columns = [\n        { title: 'ERP Code', field: 'erpCode', filtering: false, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Rate Card Div', field: 'rateCardDiv', editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Item Discreption', field: 'itemDiscreption', filtering: false, editable: false, cellStyle: { width: 300, minWidth: 300, maxWidth: 300, height: 1 } },\n        { title: 'UoM', field: 'itemUom', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Unit Rate', field: 'itemRate', editable: false, filtering: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Quantity', field: 'itemQty', editable: false, cellStyle: { width: 50, minWidth: 50, maxWidth: 50, height: 1 } },\n        { title: 'Item Total', field: 'itemTotal', type: 'currency', currencySetting: { currencyCode: 'LKR' }, editable: false, cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n        { title: 'Capex/Opex', field: 'capexopexLine', cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 }, editable: false }, // Working Code        \n        { title: 'Comment', field: 'itemComment', editable: \"onUpdate\", cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 } },\n    ];\n\n\n    useEffect(() => {\n        // console.log(props.location.data.row)\n        setUsers([{ name: props.location.data.row.assignedMobitelOfficer.name }])\n        setCompanies([{ companyName: props.location.data.row.assignedSubcon.companyName }])\n        setForm({\n            'taskRef': props.location.data.row.taskRef,\n            'siteID': props.location.data.row.siteID,\n            'siteName': props.location.data.row.siteName,\n            'actualTaskStartDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task commenced').performedDate.split('T')[0],\n            'actualTaskCompletedDate': props.location.data.row.taskHistory.find(x => x.taskStatus === 'Task completed').performedDate.split('T')[0],\n            'taskAssignedDiv': props.location.data.row.taskAssignedDiv,\n            'assignedMobitelOfficer': props.location.data.row.assignedMobitelOfficer.name,\n            'workScope': props.location.data.row.workScope,\n            'assignedSubcon': props.location.data.row.assignedSubcon.companyName,\n\n        })\n\n        setBoqData(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].boqData)\n        setTotalCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].totalCost)\n\n        // to set capex/opex amounts from backend\n        setTotalCapexCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].CapexPrAmount)\n        setTotalOpexCost(props.location.data.row.boqs[props.location.data.row.boqs.length - 1].OpexPrAmount)\n\n        setApproalHistory(props.location.data.row.taskHistory.filter((e) => (e.taskStatus === \"BOQ Verified_0\") || (e.taskStatus === \"BOQ Verified_1\") || (e.taskStatus === \"BOQ Verified_2\") || (e.taskStatus === \"BOQ Rejected\") || (e.taskStatus === \"BOQ submitted\")))\n    }, [])\n\n\n    const onAccept = (e) => {\n        e.preventDefault()\n\n        const newErrors = findFormErrors()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            let taskObject = {\n                taskStatus: 'BOQ Approved'\n            }\n\n            var otherApprovalLevel = props.location.data.row.approvalPath[props.location.data.row.approvalPath.length - 1].approvalLevel\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { CapexPrAmount, OpexPrAmount,totalCost, boqData, taskObject, taskHistory: { taskStatus: taskObject.taskStatus, comment: form.comment, otherApprovalLevel: otherApprovalLevel } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/approveBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n    }\n\n    const onReject = (e) => {\n\n        e.preventDefault()\n\n        const newErrors = findFormErrorsForReject()\n        // Conditional logic:\n        if (Object.keys(newErrors).length > 0) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            const taskObject = {\n                taskStatus: 'BOQ Rejected'\n            };\n\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/' + props.location.data.row._id, { totalCost, boqData, taskObject, taskHistory: { taskStatus: 'BOQ Rejected', comment: form.comment } }, { headers: { token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken } })\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n\n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({ pathname: '/approveBoqTasks' })\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n\n\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n\n\n\n    return (\n        <div>\n\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n                {/* Content Header (Page header) */}\n                <div className=\"content-header\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Approve BOQ Task ID: {form.taskRef}</h1>\n                                </div>\n                            </div>\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                {/* /.content-header */}\n                {/* Main content */}\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <Form >\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site ID</Form.Label>\n                                    <Form.Control disabled value={form.siteID} className=\"col-md-9\" type=\"text\" placeholder=\"Enter site ID\" isInvalid={!!errors.siteID} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteID}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Site Name</Form.Label>\n                                    <Form.Control disabled value={form.siteName} type=\"text\" placeholder=\"Enter site Name\" isInvalid={!!errors.siteName} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.siteName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"\">\n                                </Form.Group>\n\n                            </Row>\n\n\n                            <Row className=\"mb-3\">\n\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Commencement Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskStartDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskStartDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskStartDate}\n                                    </Form.Control.Feedback>\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Actual Work Completed Date</Form.Label>\n                                    <Form.Control disabled value={form.actualTaskCompletedDate} className=\"col-md-9\" type=\"date\" isInvalid={!!errors.actualTaskCompletedDate} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.actualTaskCompletedDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                </Form.Group>\n\n                            </Row>\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>Task Assigned Division</Form.Label>\n                                    <Form.Control disabled value={form.taskAssignedDiv} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.taskAssignedDiv}>\n                                        <option>Choose...</option>\n                                        <option>Project_Radio</option>\n                                        <option>Project_Core</option>\n                                        <option>Project_TX</option>\n                                        <option>Project_IBS</option>\n                                        <option>Project_WiFi</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.taskAssignedDiv}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned Mobitel Officer</Form.Label>\n                                    <Form.Control disabled as=\"select\" value={form.assignedMobitelOfficer} defaultValue=\"Choose...\" isInvalid={!!errors.assignedMobitelOfficer}>\n                                        <option>Choose...</option>\n                                        {users.map(opt => (\n                                            <option value={opt._id}>{opt.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedMobitelOfficer}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} >\n                                    <Form.Label>Assigned subcontractor</Form.Label>\n                                    <Form.Control disabled value={form.assignedSubcon} as=\"select\" defaultValue=\"Choose...\" isInvalid={!!errors.assignedSubcon} >\n                                        <option>Choose...</option>\n                                        {companies.map(opt => (\n                                            <option value={opt._id}>{opt.companyName}</option>\n                                        ))}\n                                    </Form.Control>\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.assignedSubcon}\n                                    </Form.Control.Feedback>\n\n                                </Form.Group>\n\n                            </Row>\n\n                            <Row>\n                                <Form.Group as={Col} >\n                                    <Form.Label>High level work scope</Form.Label>\n                                    <Form.Control disabled value={form.workScope} as=\"textarea\" rows={2} placeholder=\"\" isInvalid={!!errors.workScope} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {errors.workScope}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                            </Row>\n                        </Form>\n\n                        <MaterialTable\n                            title={'Approve BOQ-'+ form.siteID + '_' + form.taskRef}\n                            data={boqData}\n                            columns={columns}\n                            icons={tableIcons}\n                            editable={{\n                                onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n                                    const index = oldRow.tableData.id;\n                                    const updatedRows = [...boqData]\n                                    updatedRow.itemTotal = updatedRow.itemRate * updatedRow.itemQty\n                                    updatedRows[index] = updatedRow\n                                    setTimeout(() => {\n                                        setBoqData(updatedRows)\n                                        resolve()\n                                    }, 2000)\n                                })\n\n                            }}\n                            options={{\n                                exportButton: true,\n                                // pageSizeOptions: [5, 10, 20],\n                                pageSizeOptions: [boqData.length, 5, 10, 20],\n                                paginationType: 'stepped',\n                                showTextRowsSelected: false,\n                                actionsColumnIndex: -1,\n                                filtering: false,\n                                tableLayout: \"auto\",\n                                rowStyle: {\n                                    backgroundColor: '#EEE'\n                                },\n                                headerStyle: {\n                                    backgroundColor: '#01579b',\n                                    color: '#FFF'\n                                }\n                            }}\n                            components={{\n                                Pagination: (props) => (\n                                    <>\n                                        <Grid container style={{ pading: 300, background: '#f5f5f5' }}>\n                                            <Grid sm={9} item>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Capex Amount\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1'>\n                                                    Opex Amount\n                                                </Typography>\n                                                <Typography align='right' fontWeight='bold' variant='subtitle1'>\n                                                    Total Amount\n                                                </Typography>\n                                            </Grid>\n                                            <Grid sm={3} align='center'> \n                                                <Typography align='right' variant='subtitle1'>\n                                                        {\"LKR \" + CapexPrAmount}\n                                                </Typography>\n                                                <Typography align='right' variant='subtitle1'>\n                                                        {\"LKR \" + OpexPrAmount}\n                                                </Typography>\n                                                <Typography align='right' fontWeight='bold' variant='subtitle1'>\n                                                        {\"LKR \" + totalCost}\n                                                </Typography>                                            \n                                            </Grid> \n                                        </Grid>\n                                        <TablePagination {...props} />\n                                    </>\n                                ),\n                            }}\n                        >\n\n                        </MaterialTable>\n                        <br />\n                        <Row>\n                            <Form.Group as={Col} >\n                                <Form.Label>Task History</Form.Label>\n                                <div style={{ height: 250, width: '100%' }}>\n                                    <DataGrid\n                                        getRowId={(history) => history._id}\n                                        rows={approvalHistory}\n                                        columns={columns_AH}\n                                        pageSize={5}\n                                        rowsPerPageOptions={[5]}\n                                        rowHeight={30}\n                                        headerHeight={40}\n                                    />\n\n                                </div>\n                            </Form.Group>\n\n                        </Row>\n                        <Row>\n\n                            <Form.Group as={Col} >\n                                <Form.Label>Comments</Form.Label>\n                                <Form.Control onChange={e => setField('comment', e.target.value)} as=\"textarea\" rows={2} value={form.comment} placeholder=\"Enter your comments\" isInvalid={!!errors.comment} />\n                                <Form.Control.Feedback type='invalid'>\n                                    {errors.comment}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n\n                        </Row>\n                        <Button variant=\"warning\" onClick={onReject}>\n                            BOQ Rejected\n                        </Button>{' '}\n\n                        <Button variant=\"primary\" onClick={onAccept}>\n                            BOQ Approved\n                        </Button>\n                    </div>{/* /.container-fluid */}\n                </section>\n                {/* /.content */}\n\n\n            </div>\n\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }} >\n                    {alart}\n                </Alert>\n            </Snackbar>\n            <Dialog\n                open={openDialog}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <Box sx={{ display: 'flex' }}>\n                        <CircularProgress />\n                    </Box>\n\n\n                </DialogContent>\n            </Dialog>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(ApproveBoqSpecificTaskBody)","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState, forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AddBox from \"@mui/icons-material/AddBox\";\r\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\r\nimport Clear from \"@mui/icons-material/Clear\";\r\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport FilterList from \"@mui/icons-material/FilterList\";\r\nimport FirstPage from \"@mui/icons-material/FirstPage\";\r\nimport LastPage from \"@mui/icons-material/LastPage\";\r\nimport Remove from \"@mui/icons-material/Remove\";\r\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\r\nimport Search from \"@mui/icons-material/Search\";\r\nimport ViewColumn from \"@mui/icons-material/ViewColumn\";\r\n\r\nlet rateCardData = [];\r\n\r\nexport default function BoQPopup(props) {\r\n  const [filteredData, setFilteredData] = useState(rateCardData);\r\n  const [rateCard, setRateCard] = useState(\"all\");\r\n  const { openPopup, setOpenPopup } = props;\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    rateCardData = [];\r\n    axiosInstance\r\n      .get(\"projonline/allRateCards\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        const filter = res.data.filter(\r\n          (task) =>\r\n            task.rateCardSubcon._id ===\r\n              JSON.parse(localStorage.getItem(\"user\")).company._id &&\r\n            task.rateCardValidTo >= props.acceptedDate &&\r\n            task.rateCardValidFrom <= props.acceptedDate\r\n        );\r\n        // console.log(filter)\r\n        filter.forEach((card) => {\r\n          card.rateCardItems.forEach((item) => {\r\n            item[\"rateCardDiv\"] = card.rateCardDiv;\r\n            rateCardData.push(item);\r\n          });\r\n        });\r\n\r\n        // console.log(rateCardData)\r\n        //setUsers(res.data.users.filter((obj) => (obj[\"userCanAssignForTask\"] === true)))\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ERP Code\",\r\n      field: \"erpCode\",\r\n      cellStyle: { width: 100, minWidth: 100, maxWidth: 100, height: 1 },\r\n    },\r\n    {\r\n      title: \"Rate Card Div\",\r\n      field: \"rateCardDiv\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Item Discreption\",\r\n      field: \"itemDiscreption\",\r\n      cellStyle: { width: 400, minWidth: 400, maxWidth: 400, height: 1 },\r\n    },\r\n    {\r\n      title: \"UoM\",\r\n      field: \"itemUom\",\r\n      cellStyle: { width: 150, minWidth: 150, maxWidth: 150, height: 1 },\r\n    },\r\n    {\r\n      title: \"Unit Rate\",\r\n      field: \"itemRate\",\r\n      type: \"currency\",\r\n      currencySetting: { currencyCode: \"LKR\" },\r\n      cellStyle: { width: 200, minWidth: 200, maxWidth: 200, height: 1 },\r\n    },\r\n  ];\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const handleRowsSelect = () => {\r\n    if (Array.isArray(selectedRows) && selectedRows.length) {\r\n      props.callBk(filteredData.filter((row) => selectedRows.includes(row)));\r\n    }\r\n\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleRowsSelectClose = () => {\r\n    setOpenPopup(false);\r\n\r\n    const newData = rateCardData.map((row) => ({\r\n      ...row,\r\n      tableData: {\r\n        checked: false,\r\n      },\r\n    }));\r\n\r\n    setFilteredData(newData);\r\n\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      rateCard === \"all\"\r\n        ? rateCardData\r\n        : rateCardData.filter((dt) => dt.rateCard === rateCard)\r\n    );\r\n  }, [rateCard]);\r\n\r\n  return (\r\n    <Dialog open={openPopup} fullWidth maxWidth=\"lg\">\r\n      <DialogContent>\r\n        <MaterialTable\r\n          title=\"BOQ Line Items\"\r\n          columns={columns}\r\n          data={filteredData}\r\n          icons={tableIcons}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          options={{\r\n            exportButton: true,\r\n            pageSizeOptions: [5, 10, 20],\r\n            paginationType: \"stepped\",\r\n            showTextRowsSelected: false,\r\n            actionsColumnIndex: -1,\r\n            filtering: true,\r\n            selection: true,\r\n            tableLayout: \"auto\",\r\n            selectionProps: {},\r\n            rowStyle: {\r\n              backgroundColor: \"#EEE\",\r\n            },\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              color: \"#FFF\",\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => (\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={rateCard}\r\n                  onChange={(e) => setRateCard(e.target.value)}\r\n                  style={{ width: 100 }}\r\n                >\r\n                  <MenuItem value={\"all\"}>\r\n                    <em>All</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"TX\"}>TX</MenuItem>\r\n                  <MenuItem value={\"IBS\"}>IBS</MenuItem>\r\n                  <MenuItem value={\"BTS\"}>BTS</MenuItem>\r\n                </Select>\r\n              ),\r\n              tooltip: \"Select Rate Card\",\r\n              isFreeAction: true,\r\n            },\r\n          ]}\r\n          components={{\r\n            Pagination: (props) => (\r\n              <div>\r\n                <Grid container style={{ pading: 15, background: \"#f5f5f5\" }}>\r\n                  <Grid sm={11} align=\"right\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        onClick={handleRowsSelect}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                  <Grid sm={1} align=\"center\" item>\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        onClick={handleRowsSelectClose}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Grid>\r\n                </Grid>\r\n                <TablePagination {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":["Alert","React","props","ref","elevation","variant","withRouter","users","setUsers","useState","companies","setCompanies","openPopup","setOpenPopup","boqData","setBoqData","totalCost","setTotalCost","CapexPrAmount","setTotalCapexCost","OpexPrAmount","setTotalOpexCost","approvalHistory","setApproalHistory","severity","setSeverity","alart","setAlart","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","openDialog","setOpenDialog","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","useEffect","name","location","data","row","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","taskHistory","find","x","taskStatus","performedDate","split","taskAssignedDiv","workScope","boqs","length","filter","e","handleClose","event","reason","className","as","Col","disabled","value","type","placeholder","isInvalid","controlId","actualTaskStartDate","actualTaskCompletedDate","defaultValue","map","opt","_id","rows","title","columns","field","filtering","editable","cellStyle","width","minWidth","maxWidth","height","currencySetting","currencyCode","icons","onRowUpdate","updatedRow","oldRow","Promise","resolve","reject","index","tableData","id","updatedRows","itemTotal","itemRate","itemQty","setTimeout","options","exportButton","pageSizeOptions","paginationType","showTextRowsSelected","actionsColumnIndex","tableLayout","rowStyle","backgroundColor","headerStyle","color","components","Pagination","container","style","pading","background","sm","item","align","fontWeight","getRowId","history","headerName","valueGetter","params","performedBy","pageSize","rowsPerPageOptions","rowHeight","headerHeight","onChange","setField","target","comment","onClick","preventDefault","newErrors","findFormErrorsForReject","Object","keys","taskObject","put","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","push","pathname","catch","error","console","log","findFormErrors","otherApprovalLevel","approvalPath","approvalLevel","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","rateCardData","BoQPopup","filteredData","setFilteredData","rateCard","setRateCard","selectedRows","setSelectedRows","get","task","rateCardSubcon","company","rateCardValidTo","acceptedDate","rateCardValidFrom","forEach","card","rateCardItems","rateCardDiv","err","handleRowsSelect","Array","isArray","callBk","includes","newData","checked","handleRowsSelectClose","dt","fullWidth","onSelectionChange","selection","selectionProps","actions","icon","labelId","tooltip","isFreeAction"],"sourceRoot":""}