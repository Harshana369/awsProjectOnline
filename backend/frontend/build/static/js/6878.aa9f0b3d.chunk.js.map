{"version":3,"file":"static/js/6878.aa9f0b3d.chunk.js","mappings":"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","sources":["components/UpdateSpecificUser.jsx","../node_modules/form-data/lib/browser.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport XLSX from \"xlsx\";\r\nimport FormData from \"form-data\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction UpdateSpecificUser(props) {\r\n  let [users, setUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [msg, setMsg] = useState(\"\");\r\n  let [variant, setVariant] = useState(\"\");\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    // console.log(field,value)\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const {\r\n      email,\r\n      company,\r\n      projectCoordinator,\r\n      userDiv,\r\n      visbilityBasedOn,\r\n      mobileNo,\r\n      verificationOne,\r\n      verificationTwo,\r\n      approval,\r\n    } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n\r\n    if (company === \"Mobitel\" && userDiv === \"Choose...\")\r\n      newErrors.userDiv = \"Choose a division!\";\r\n    if (company === \"Mobitel\" && visbilityBasedOn === \"Choose...\")\r\n      newErrors.visbilityBasedOn = \"Choose a option!\";\r\n    //if ( company === 'Mobitel' && projectCoordinator === 'Choose...') newErrors.projectCoordinator = 'Choose a project Coordinator!'\r\n    // if ( company === 'Mobitel' && verificationOne === 'Choose...') newErrors.verificationOne = 'Choose a option!'\r\n    // if ( company === 'Mobitel' && verificationTwo === 'Choose...') newErrors.verificationTwo = 'Choose a option!'\r\n    // if ( company === 'Mobitel' && approval === 'Choose...') newErrors.approval = 'Choose a option!'\r\n    if (!email || email === \"\") newErrors.email = \"cannot be blank!\";\r\n    if (!mobileNo || mobileNo === \"\") newErrors.mobileNo = \"cannot be blank!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(props.location.data)\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj.company.companyName === \"Mobitel\")\r\n        );\r\n        setCompanies(res.data.companys);\r\n\r\n        // console.log(props.location.data.row.company.companyName)\r\n        if (props.location.data.row.company.companyName === \"Mobitel\") {\r\n          let verificationOneId = \"\";\r\n          let verificationTwoId = \"\";\r\n          let approvalId = \"\";\r\n\r\n          switch (props.location.data.row.approvalPath.length) {\r\n            case 0:\r\n              verificationOneId = \"1\";\r\n              verificationTwoId = \"1\";\r\n              approvalId = \"1\";\r\n              break;\r\n            case 1:\r\n              verificationOneId = props.location.data.row.approvalPath[0]._id;\r\n              verificationTwoId = \"1\";\r\n              approvalId = \"1\";\r\n              break;\r\n            case 2:\r\n              verificationOneId = props.location.data.row.approvalPath[0]._id;\r\n              verificationTwoId = \"2\";\r\n              approvalId = props.location.data.row.approvalPath[1]._id;\r\n              break;\r\n            case 3:\r\n              verificationOneId = props.location.data.row.approvalPath[0]._id;\r\n              verificationTwoId = props.location.data.row.approvalPath[1]._id;\r\n              approvalId = props.location.data.row.approvalPath[2]._id;\r\n              break;\r\n          }\r\n          setForm({\r\n            name: props.location.data.row.name,\r\n            email: props.location.data.row.email,\r\n            company: props.location.data.row.company.companyName,\r\n            userDiv: props.location.data.row.userDiv,\r\n            mobileNo: props.location.data.row.mobileNo,\r\n            username: props.location.data.row.username,\r\n            adminRights: props.location.data.row.adminRights,\r\n            activeStatus: props.location.data.row.activeStatus,\r\n            userCanAssignForTask: props.location.data.row.userCanAssignForTask,\r\n            visbilityBasedOn: props.location.data.row.visbilityBasedOn,\r\n            projectCoordinator: props.location.data.row.projectCoordinator,\r\n            isProjectCoordinator: props.location.data.row.isProjectCoordinator,\r\n            verificationOneId: verificationOneId,\r\n            verificationTwoId: verificationTwoId,\r\n            approvalId: approvalId,\r\n          });\r\n        } else {\r\n          setForm({\r\n            name: props.location.data.row.name,\r\n            email: props.location.data.row.email,\r\n            company: props.location.data.row.company.companyName,\r\n            userDiv: props.location.data.row.userDiv,\r\n            mobileNo: props.location.data.row.mobileNo,\r\n            username: props.location.data.row.username,\r\n            adminRights: props.location.data.row.adminRights,\r\n            activeStatus: props.location.data.row.activeStatus,\r\n            userCanAssignForTask: props.location.data.row.userCanAssignForTask,\r\n            visbilityBasedOn: props.location.data.row.visbilityBasedOn,\r\n            projectCoordinator: props.location.data.row.projectCoordinator,\r\n            isProjectCoordinator: props.location.data.row.isProjectCoordinator,\r\n          });\r\n        }\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let userObject = {};\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      if (form.company === \"Mobitel\") {\r\n        var approvalPath = [\r\n          form.verificationOneId,\r\n          form.verificationTwoId,\r\n          form.approvalId,\r\n        ]\r\n          .filter((element) => element !== \"1\")\r\n          .filter((element) => element !== \"2\");\r\n        // console.log(approvalPath)\r\n\r\n        userObject = {\r\n          name: form.name,\r\n          email: form.email,\r\n          company: companies.find((item) => item.companyName === form.company)\r\n            ._id,\r\n          userDiv: form.userDiv,\r\n          mobileNo: form.mobileNo,\r\n          username: form.username,\r\n          adminRights: form.adminRights,\r\n          activeStatus: form.activeStatus,\r\n          userCanAssignForTask: form.userCanAssignForTask,\r\n          visbilityBasedOn: form.visbilityBasedOn,\r\n          projectCoordinator:\r\n            form.projectCoordinator == \"1\" ? null : form.projectCoordinator,\r\n          isProjectCoordinator: form.isProjectCoordinator,\r\n          approvalPath: approvalPath,\r\n        };\r\n      } else {\r\n        userObject = {\r\n          name: form.name,\r\n          email: form.email,\r\n          company: companies.find((item) => item.companyName === form.company)\r\n            ._id,\r\n          visbilityBasedOn: form.visbilityBasedOn,\r\n          userDiv: form.userDiv,\r\n          mobileNo: form.mobileNo,\r\n          username: form.username,\r\n          activeStatus: form.activeStatus,\r\n        };\r\n      }\r\n\r\n      //   console.log(userObject);\r\n\r\n      axiosInstance\r\n        .put(\"projonline/user/\" + props.location.data.row._id, userObject, {\r\n          headers: {\r\n            token:\r\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          // console.log(props.location.data.row._id)\r\n          setOpenDialog(true);\r\n          setTimeout(() => {\r\n            setMsg(res.data.msg);\r\n            setVariant(res.data.variant);\r\n            setOpen(true);\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setOpenDialog(false);\r\n            setOpen(false);\r\n            props.history.push({ pathname: \"/updateUser\" });\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Update User Details</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <form onSubmit={onSubmit} enctype=\"multipart/form-data\">\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"name\", e.target.value)}\r\n                    value={form.name}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    isInvalid={!!errors.name}\r\n                    disabled\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.name}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"username\", e.target.value)}\r\n                    value={form.username}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    isInvalid={!!errors.username}\r\n                    disabled\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"email\", e.target.value)}\r\n                    value={form.email}\r\n                    className=\"col-md-9\"\r\n                    type=\"text\"\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Company</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"company\", e.target.value)}\r\n                    value={form.company}\r\n                    className=\"col-md-9\"\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.company}\r\n                  >\r\n                    {companies.map((opt) => (\r\n                      <option value={opt.companyName}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.company}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>User Division</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"userDiv\", e.target.value)}\r\n                    value={form.userDiv}\r\n                    className=\"col-md-9\"\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.userDiv}\r\n                    disabled={form.company !== \"Mobitel\" ? true : false}\r\n                  >\r\n                    <option value=\"Choose...\">Choose...</option>\r\n                    <option>Planning_Radio</option>\r\n                    <option>Planning_Core</option>\r\n                    <option>Planning_TX</option>\r\n                    <option>Planning_IBS</option>\r\n                    <option>Planning_WiFi</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.userDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Mobile No</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"mobileNo\", e.target.value)}\r\n                    value={form.mobileNo}\r\n                    className=\"col-md-9\"\r\n                    type=\"number\"\r\n                    isInvalid={!!errors.mobileNo}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.mobileNo}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Visibility Based On</Form.Label>\r\n                  {form.company !== \"Mobitel\" ? (\r\n                    <Form.Control\r\n                      onChange={(e) =>\r\n                        setField(\"visbilityBasedOn\", e.target.value)\r\n                      }\r\n                      value={form.visbilityBasedOn}\r\n                      className=\"col-md-9\"\r\n                      as=\"select\"\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.visbilityBasedOn}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      <option value=\"Subcon\">Subcon</option>\r\n                      <option value=\"Vender\">Vender</option>\r\n                    </Form.Control>\r\n                  ) : (\r\n                    <div>\r\n                      <Form.Control\r\n                        onChange={(e) =>\r\n                          setField(\"visbilityBasedOn\", e.target.value)\r\n                        }\r\n                        value={form.visbilityBasedOn}\r\n                        className=\"col-md-9\"\r\n                        as=\"select\"\r\n                        defaultValue=\"Choose...\"\r\n                        isInvalid={!!errors.visbilityBasedOn}\r\n                      >\r\n                        <option>Choose...</option>\r\n                        <option value=\"Admin\">Admin</option>\r\n                        <option value=\"Planning\">Planning</option>\r\n                        <option value=\"Project_Div_Head\">\r\n                          Project_Div_Head\r\n                        </option>\r\n                        <option value=\"Project_PM\">Project_PM</option>\r\n                        <option value=\"Project_TO\">Project_TO</option>\r\n                        <option value=\"Project_Coor\">Project_Coor</option>\r\n                        <option value=\"Subcon\">Subcon</option>\r\n                        <option value=\"Vender\">Vender</option>\r\n                        <option value=\"Optimization\">Optimization</option>\r\n                      </Form.Control>\r\n                    </div>\r\n                  )}\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.visbilityBasedOn}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Project Coordinator</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) =>\r\n                      setField(\"projectCoordinator\", e.target.value)\r\n                    }\r\n                    value={form.projectCoordinator}\r\n                    className=\"col-md-9\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.visbilityBasedOn}\r\n                    disabled={form.company !== \"Mobitel\" ? true : false}\r\n                  >\r\n                    <option value=\"1\">Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.projectCoordinator}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Is Project Coordinator</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) =>\r\n                      setField(\r\n                        \"isProjectCoordinator\",\r\n                        !form.isProjectCoordinator\r\n                      )\r\n                    }\r\n                    value={form.isProjectCoordinator}\r\n                    checked={form.isProjectCoordinator}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-4\"\r\n                    type=\"switch\"\r\n                    disabled={form.company !== \"Mobitel\" ? true : false}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Admin Rights</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) => setField(\"adminRights\", !form.adminRights)}\r\n                    value={form.adminRights}\r\n                    checked={form.adminRights}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-1\"\r\n                    type=\"switch\"\r\n                    disabled={form.company !== \"Mobitel\" ? true : false}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Active Status</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) =>\r\n                      setField(\"activeStatus\", !form.activeStatus)\r\n                    }\r\n                    value={form.activeStatus}\r\n                    checked={form.activeStatus}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-2\"\r\n                    type=\"switch\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>User Can Assign For Task</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) =>\r\n                      setField(\r\n                        \"userCanAssignForTask\",\r\n                        !form.userCanAssignForTask\r\n                      )\r\n                    }\r\n                    value={form.userCanAssignForTask}\r\n                    checked={form.userCanAssignForTask}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-3\"\r\n                    type=\"switch\"\r\n                    disabled={form.company !== \"Mobitel\" ? true : false}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 1)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    className=\"col-md-9\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationOneId\", e.target.value)\r\n                    }\r\n                    value={form.verificationOneId}\r\n                    defaultValue=\"Choose...\"\r\n                    disabled={\r\n                      form.company !== \"Mobitel\" ||\r\n                      form.userCanAssignForTask === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    <option value=\"1\">Choose..</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 2)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    className=\"col-md-9\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationTwoId\", e.target.value)\r\n                    }\r\n                    value={form.verificationTwoId}\r\n                    defaultValue=\"Choose...\"\r\n                    disabled={\r\n                      form.company !== \"Mobitel\" ||\r\n                      form.userCanAssignForTask === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    <option value=\"1\">Choose..</option>\r\n                    <option value=\"2\">Not Applicable</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Approval by</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    className=\"col-md-9\"\r\n                    onChange={(e) => setField(\"approvalId\", e.target.value)}\r\n                    value={form.approvalId}\r\n                    defaultValue=\"Choose...\"\r\n                    disabled={\r\n                      form.company !== \"Mobitel\" ||\r\n                      form.userCanAssignForTask === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    <option value=\"1\">Choose..</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Update User Details\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={variant} sx={{ width: \"100%\" }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateSpecificUser);\r\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n"],"names":["Alert","React","props","ref","elevation","variant","withRouter","users","setUsers","useState","companies","setCompanies","msg","setMsg","setVariant","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","openDialog","setOpenDialog","setField","field","value","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","filter","obj","company","companyName","companys","location","row","verificationOneId","verificationTwoId","approvalId","approvalPath","length","_id","name","email","userDiv","mobileNo","username","adminRights","activeStatus","userCanAssignForTask","visbilityBasedOn","projectCoordinator","isProjectCoordinator","catch","err","console","log","handleClose","event","reason","className","onSubmit","e","preventDefault","userObject","newErrors","verificationOne","verificationTwo","approval","findFormErrors","Object","keys","element","find","item","put","setTimeout","history","push","pathname","error","enctype","as","Col","onChange","target","type","isInvalid","disabled","defaultValue","map","opt","checked","id","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","display","module","exports","self","FormData","window"],"sourceRoot":""}