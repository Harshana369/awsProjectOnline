{"version":3,"file":"static/js/2636.046c46cb.chunk.js","mappings":"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","sources":["components/VenderDashbordBody.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { TaskContext } from \"../context/taskContext/TaskContext\";\r\nimport { getTasks } from \"../context/taskContext/apiCalls\";\r\nimport moment from \"moment\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nexport default function VenderDashbordBody() {\r\n  let [projects, setProjects] = useState([]);\r\n  let [projectsData, setProjectsData] = useState([]);\r\n  let [subProjects, setSubProjects] = useState([]);\r\n  let [filterTasks, setFilterTasks] = useState([]);\r\n  let [items, setItems] = useState([]);\r\n  let [allItems, setAllItems] = useState([]);\r\n  let [data, setData] = useState([]);\r\n  let [dailyData, setDailyData] = useState([]);\r\n  const { tasks, dispatch } = useContext(TaskContext);\r\n  let [form, setForm] = useState({});\r\n  let [stat, setStat] = useState({});\r\n  let [projectID, setProjectID] = useState(0);\r\n  let [assignedProjectManager, setAssignedProjectManager] = useState(\"\");\r\n  let [companies, setCompanies] = useState([]);\r\n  let [users, setUsers] = useState([]);\r\n  let [lineChart1, setLineChart1] = useState([]);\r\n  let [lineChart2, setLineChart2] = useState([]);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const changeProject = (e) => {\r\n    setField(\"project\", e.target.value);\r\n    //         console.log(e.target.value)\r\n    //  console.log(projectsData)\r\n    // console.log(projectsData)\r\n    let t = projectsData.filter((task) => task.project == e.target.value);\r\n    setSubProjects([...new Set(t.map((ele) => ele.subProject))]);\r\n    // console.log(t)\r\n    for (var i = 0; i < projectsData.length; i++) {\r\n      if (\r\n        e.target.value == projectsData[i].project &&\r\n        form.subProject == projectsData[i].subProject\r\n      ) {\r\n        // console.log(projectsData[i])\r\n        setProjectID(projectsData[i].projectID);\r\n        // console.log(projectsData[i].projectID)\r\n\r\n        i = projectsData.length;\r\n      } else if (i == projectsData.length - 1) {\r\n        setProjectID(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeSubProject = (e) => {\r\n    // console.log(filterTasks)\r\n    setField(\"subProject\", e.target.value);\r\n    // console.log(e.target.value)\r\n\r\n    for (var i = 0; i < projectsData.length; i++) {\r\n      if (\r\n        form.project == projectsData[i].project &&\r\n        e.target.value == projectsData[i].subProject\r\n      ) {\r\n        setAssignedProjectManager(projectsData[i].assignedProjectManager);\r\n        setProjectID(projectsData[i].projectID);\r\n        // console.log(projectsData[i])\r\n\r\n        i = projectsData.length;\r\n      } else if (i == projectsData.length - 1) {\r\n        setProjectID(\"\");\r\n        setAssignedProjectManager(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpenDialog(true);\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj[\"userCanAssignForTask\"] === true)\r\n        );\r\n        setCompanies(\r\n          res.data.companys.filter((obj) => obj.companyName !== \"Mobitel\")\r\n        );\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axiosInstance\r\n      .get(\"projonline/venderProject\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n          company_id: JSON.parse(localStorage.getItem(\"user\")).company._id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setForm({});\r\n\r\n        setProjects([\r\n          ...new Set(res.data.projTemplates.map((ele) => ele.project)),\r\n        ]);\r\n        setSubProjects([\r\n          ...new Set(res.data.projTemplates.map((ele) => ele.subProject)),\r\n        ]);\r\n        setProjectsData(res.data.projTemplates);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axiosInstance\r\n      .get(\"projonline/gettasks\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setItems(\r\n          res.data.tasks.filter((obj) => obj[\"taskStatus\"] != \"Withdraw\")\r\n        );\r\n        setAllItems(\r\n          res.data.tasks.filter((obj) => obj[\"taskStatus\"] != \"Withdraw\")\r\n        );\r\n        setStatFields(\r\n          res.data.tasks.filter((obj) => obj[\"taskStatus\"] != \"Withdraw\")\r\n        );\r\n        setOpenDialog(false);\r\n        //setData(res.data.chartData)\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setLineChart1([\r\n      {\r\n        name: \"No of tasks acceptance\",\r\n        dataKey: \"taskAccept\",\r\n        stroke: \"#dc3545\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task commencement\",\r\n        dataKey: \"taskCommencement\",\r\n        stroke: \"#4834d4\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of tasks completion\",\r\n        dataKey: \"taskComplete\",\r\n        stroke: \"#17a2bb\",\r\n        active: true,\r\n      },\r\n\r\n      {\r\n        name: \"No of tasks commission\",\r\n        dataKey: \"taskCommission\",\r\n        stroke: \"#38a852\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task SAR\",\r\n        dataKey: \"taskSAR\",\r\n        stroke: \"#6c757d\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task PAT\",\r\n        dataKey: \"taskPAT\",\r\n        stroke: \"#677c14\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task onAir\",\r\n        dataKey: \"taskOnAir\",\r\n        stroke: \"#d1882b\",\r\n        active: true,\r\n      },\r\n    ]);\r\n\r\n    setLineChart2([\r\n      {\r\n        name: \"No of tasks acceptance\",\r\n        dataKey: \"TaskAccept\",\r\n        stroke: \"#dc3545\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task commencement\",\r\n        dataKey: \"TaskCommenced\",\r\n        stroke: \"#4834d4\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of tasks completion\",\r\n        dataKey: \"TaskComplete\",\r\n        stroke: \"#17a2bb\",\r\n        active: true,\r\n      },\r\n\r\n      {\r\n        name: \"No of tasks commission\",\r\n        dataKey: \"taskCommission\",\r\n        stroke: \"#38a852\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task SAR\",\r\n        dataKey: \"taskSAR\",\r\n        stroke: \"#6c757d\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task PAT\",\r\n        dataKey: \"taskPAT\",\r\n        stroke: \"#677c14\",\r\n        active: true,\r\n      },\r\n      {\r\n        name: \"No of task onAir\",\r\n        dataKey: \"taskOnAir\",\r\n        stroke: \"#d1882b\",\r\n        active: true,\r\n      },\r\n    ]);\r\n\r\n    // getChartData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = allItems.filter(\r\n      (t) =>\r\n        (form.project ? t.project === form.project : true) &&\r\n        (form.subProject ? t.subProject === form.subProject : true) &&\r\n        (form.subcon ? t.assignedSubcon?.companyName === form.subcon : true) &&\r\n        (form.siteEngineer\r\n          ? t.assignedMobitelOfficer?._id === form.siteEngineer\r\n          : true)\r\n    );\r\n    setItems(result);\r\n  }, [form]);\r\n\r\n  useEffect(() => {\r\n    getChartData();\r\n    getDailyChartData();\r\n    setStatFields(items);\r\n  }, [items]);\r\n\r\n  const legend1Onclick = (e) => {\r\n    lineChart1.map((c) => {\r\n      if (e.dataKey === c.dataKey) {\r\n        var isActive = c.active;\r\n        c.active = !isActive;\r\n      }\r\n    });\r\n    setLineChart1(lineChart1);\r\n    getChartData();\r\n    legend2Onclick();\r\n  };\r\n\r\n  const legend2Onclick = (e) => {\r\n    lineChart2.map((c) => {\r\n      // console.log(e.dataKey, \" \", c.dataKey);\r\n      if (e.dataKey === c.dataKey) {\r\n        var isActive = c.active;\r\n        c.active = !isActive;\r\n      }\r\n    });\r\n    setLineChart2(lineChart2);\r\n    getDailyChartData();\r\n  };\r\n\r\n  const getChartData = () => {\r\n    var chartData = [];\r\n    var date = new Date();\r\n    date.setDate(date.getDate() - 30);\r\n\r\n    for (var i = 0; i <= 30; i++) {\r\n      chartData[i] = {\r\n        date: date.toISOString().split(\"T\")[0],\r\n        taskAccept: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find(\r\n                (x) => x.taskStatus === \"Task accepted\"\r\n              ) !== \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.taskStatus === \"Task accepted\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n        taskCommencement: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find(\r\n                (x) => x.taskStatus === \"Task commenced\"\r\n              ) !== \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.taskStatus === \"Task commenced\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n\r\n        taskComplete: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find(\r\n                (x) => x.taskStatus === \"Task completed\"\r\n              ) !== \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.taskStatus === \"Task completed\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n        taskCommission: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find(\r\n                (x) => x.comStatus === \"Site Commissioned\"\r\n              ) !== \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.comStatus === \"Site Commissioned\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n        taskSAR: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find((x) => x.sarStatus === \"SAR Pass\") !==\r\n              \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.sarStatus === \"SAR Pass\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n        taskPAT: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find((x) => x.patStatus === \"PAT Pass\") !==\r\n              \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.patStatus === \"PAT Pass\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n        taskOnAir: items\r\n          .filter(\r\n            (obj) =>\r\n              typeof obj.taskHistory.find(\r\n                (x) => x.onairStatus === \"Site On-Air\"\r\n              ) !== \"undefined\"\r\n          )\r\n          .filter(\r\n            (obj) =>\r\n              obj.taskHistory\r\n                .find((x) => x.onairStatus === \"Site On-Air\")\r\n                .performedDate.split(\"T\")[0] == date.toISOString().split(\"T\")[0]\r\n          ).length,\r\n      };\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n    // console.log(chartData);\r\n    setData(chartData);\r\n  };\r\n\r\n  const getDailyChartData = () => {\r\n    var chartData = [];\r\n    var date = new Date();\r\n\r\n    date.setDate(date.getDate() - 30);\r\n\r\n    for (var i = 0; i <= 30; i++) {\r\n      var pendingsub = items\r\n        .filter(\r\n          (obj) =>\r\n            typeof obj.taskHistory.find(\r\n              (x) => x.taskStatus === \"Task handed over\"\r\n            ) !== \"undefined\"\r\n        )\r\n        .filter(\r\n          (obj) =>\r\n            obj.taskHistory\r\n              .reverse()\r\n              .find((x) => x.taskStatus === \"Task handed over\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n        ).length;\r\n      //console.log(items.filter((obj) => typeof obj.taskHistory.find(x => x.taskStatus === 'Task handed over') !== 'undefined').filter((obj) => obj.taskHistory.reverse().find(x => (x.taskStatus === 'Task handed over' || x.taskStatus==='Task rejected')).performedDate.split('T')[0] <= date.toISOString().split('T')[0]))\r\n      var SubconAllocated = items.filter((obj) =>\r\n        typeof obj.taskHistory.find(\r\n          (x) => x.taskStatus === \"Subcon allocated\"\r\n        ) !== \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Subcon allocated\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n\r\n      var pendingacc = items\r\n        .filter(\r\n          (obj) =>\r\n            typeof obj.taskHistory.find(\r\n              (x) => x.taskStatus === \"Subcon allocated\"\r\n            ) !== \"undefined\"\r\n        )\r\n        .filter(\r\n          (obj) =>\r\n            obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Subcon allocated\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n        ).length;\r\n      var TaskAccept = items.filter((obj) =>\r\n        typeof obj.taskHistory.find((x) => x.taskStatus === \"Task accepted\") !==\r\n        \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Task accepted\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n\r\n      var pendingcomme = items\r\n        .filter(\r\n          (obj) =>\r\n            typeof obj.taskHistory.find(\r\n              (x) => x.taskStatus === \"Task accepted\"\r\n            ) !== \"undefined\"\r\n        )\r\n        .filter(\r\n          (obj) =>\r\n            obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Task accepted\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n        ).length;\r\n      var TaskCommenced = items.filter((obj) =>\r\n        typeof obj.taskHistory.find(\r\n          (x) => x.taskStatus === \"Task commenced\"\r\n        ) !== \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Task commenced\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n\r\n      var pendingcom = items\r\n        .filter(\r\n          (obj) =>\r\n            typeof obj.taskHistory.find(\r\n              (x) => x.taskStatus === \"Task commenced\"\r\n            ) !== \"undefined\"\r\n        )\r\n        .filter(\r\n          (obj) =>\r\n            obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Task commenced\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n        ).length;\r\n      var TaskComplete = items.filter((obj) =>\r\n        typeof obj.taskHistory.find(\r\n          (x) => x.taskStatus === \"Task completed\"\r\n        ) !== \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.taskStatus === \"Task completed\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n\r\n      var TaskCommissioned = items.filter((obj) =>\r\n        typeof obj.taskHistory.find(\r\n          (x) => x.comStatus === \"Site Commissioned\"\r\n        ) !== \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.comStatus === \"Site Commissioned\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n      var TaskSARed = items.filter((obj) =>\r\n        typeof obj.taskHistory.find((x) => x.sarStatus === \"SAR Pass\") !==\r\n        \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.sarStatus === \"SAR Pass\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n      var TaskPATed = items.filter((obj) =>\r\n        typeof obj.taskHistory.find((x) => x.patStatus === \"PAT Pass\") !==\r\n        \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.patStatus === \"PAT Pass\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n      var TaskOnAired = items.filter((obj) =>\r\n        typeof obj.taskHistory.find((x) => x.onairStatus === \"Site On-Air\") !==\r\n        \"undefined\"\r\n          ? obj.taskHistory\r\n              .find((x) => x.onairStatus === \"Site On-Air\")\r\n              .performedDate.split(\"T\")[0] <= date.toISOString().split(\"T\")[0]\r\n          : false\r\n      ).length;\r\n\r\n      chartData[i] = {\r\n        date: date.toISOString().split(\"T\")[0],\r\n        TaskAccept: pendingacc - TaskAccept,\r\n        TaskCommenced: TaskAccept - TaskCommenced,\r\n        TaskComplete: TaskCommenced - TaskComplete,\r\n        taskCommission: TaskComplete - TaskCommissioned,\r\n        taskSAR: TaskComplete - TaskSARed,\r\n        taskPAT: TaskComplete - TaskPATed,\r\n        taskOnAir: TaskComplete - TaskOnAired,\r\n      };\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    // console.log(chartData);\r\n    setDailyData(chartData);\r\n  };\r\n\r\n  const setStatFields = (items) => {\r\n    let noOfTotalTasks = items.length;\r\n    let noOfPendingSubconAllocations = items.filter(\r\n      (obj) =>\r\n        obj[\"taskStatus\"] === \"Task handed over\" ||\r\n        obj[\"taskStatus\"] === \"Task rejected\"\r\n    ).length;\r\n\r\n    let noOfSubconAllocated = noOfTotalTasks - noOfPendingSubconAllocations;\r\n    let noOfPendingTaskAcceptance = items.filter(\r\n      (obj) => obj[\"taskStatus\"] === \"Subcon allocated\"\r\n    ).length;\r\n\r\n    let NoOfAcceptedTasks = noOfSubconAllocated - noOfPendingTaskAcceptance;\r\n\r\n    let noOfPendingTaskCommencement = items.filter(\r\n      (obj) => obj[\"taskStatus\"] === \"Task accepted\"\r\n    ).length;\r\n\r\n    let NoOfCommencedTasks = NoOfAcceptedTasks - noOfPendingTaskCommencement;\r\n\r\n    let NoOfPendingTaskCompletion = items.filter(\r\n      (obj) => obj[\"taskStatus\"] === \"Task commenced\"\r\n    ).length;\r\n    let noOfWorkCompletion = NoOfCommencedTasks - NoOfPendingTaskCompletion;\r\n\r\n    let NoOfCommission = items.filter(\r\n      (obj) => obj[\"comStatus\"] === \"Site Commissioned\"\r\n    ).length;\r\n\r\n    let NoOfPendingTaskCommission = noOfWorkCompletion - NoOfCommission;\r\n\r\n    let NoOfSar = items.filter((obj) => obj[\"sarStatus\"] === \"SAR Pass\").length;\r\n\r\n    let NoOfPendingTaskSar = noOfWorkCompletion - NoOfSar;\r\n\r\n    let NoOfPat = items.filter((obj) => obj[\"patStatus\"] === \"PAT Pass\").length;\r\n\r\n    let NoOfPendingTaskPat = noOfWorkCompletion - NoOfPat;\r\n\r\n    let NoOfOnAir = items.filter(\r\n      (obj) => obj[\"onairStatus\"] === \"Site On-Air\"\r\n    ).length;\r\n\r\n    let NoOfPendingTaskOnAir = noOfWorkCompletion - NoOfOnAir;\r\n\r\n    // console.log(NoOfPendingTaskCompletion, noOfPendingTaskAcceptance);\r\n\r\n    const noOfCompleteAcceptance =\r\n      noOfSubconAllocated - noOfPendingTaskAcceptance;\r\n    const noOfCompleteCommencement =\r\n      noOfCompleteAcceptance - noOfPendingTaskCommencement;\r\n    const noOfCompleteCompletion =\r\n      noOfCompleteCommencement - NoOfPendingTaskCompletion;\r\n    const noOfCompleteCommission =\r\n      noOfCompleteCompletion - NoOfPendingTaskCommission;\r\n    const noOfCompleteSar = noOfCompleteCompletion - NoOfPendingTaskSar;\r\n    const noOfCompletePat = noOfCompleteCompletion - NoOfPendingTaskPat;\r\n    const noOfCompleteOnAir = noOfCompleteCompletion - NoOfPendingTaskOnAir;\r\n\r\n    setStat({\r\n      NoOfSubconAllocated: noOfSubconAllocated,\r\n\r\n      NoOfPendingTaskAcceptance: noOfPendingTaskAcceptance,\r\n      NoOfCompleteAcceptance: noOfCompleteAcceptance,\r\n\r\n      NoOfPendingTaskCommencement: noOfPendingTaskCommencement,\r\n      NoOfCompleteCommencement: noOfCompleteCommencement,\r\n\r\n      NoOfPendingTaskCompletion: NoOfPendingTaskCompletion,\r\n      NoOfCompleteCompletion: noOfCompleteCompletion,\r\n\r\n      NoOfPendingCommission: NoOfPendingTaskCommission,\r\n      NoOfCompleteCommission: noOfCompleteCommission,\r\n\r\n      NoOfPendingSar: NoOfPendingTaskSar,\r\n      NoOfCompleteSar: noOfCompleteSar,\r\n\r\n      NoOfPendingPat: NoOfPendingTaskPat,\r\n      NoOfCompletePat: noOfCompletePat,\r\n\r\n      NoOfPendingOnAir: NoOfPendingTaskOnAir,\r\n      NoOfCompleteOnAir: noOfCompleteOnAir,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <Row className=\"mb-3\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                onChange={changeProject}\r\n                value={form.project}\r\n                as=\"select\"\r\n                defaultValue=\"All Projects\"\r\n              >\r\n                <option value=\"\">All Projects</option>\r\n                {projects.map((opt) => (\r\n                  <option value={opt}>{opt}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Control\r\n                onChange={changeSubProject}\r\n                value={form.subProject}\r\n                as=\"select\"\r\n                defaultValue=\"All Subproects\"\r\n              >\r\n                <option value=\"\">All Subprojects</option>\r\n                {subProjects.map((opt) => (\r\n                  <option value={opt}>{opt}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {/* <Form.Group as={Col}>\r\n              <Form.Control\r\n                onChange={(e) => setField(\"subcon\", e.target.value)}\r\n                value={form.subcon}\r\n                as=\"select\"\r\n                defaultValue=\"All Subcons\"\r\n              >\r\n                <option value=\"\">All Subcons</option>\r\n                {companies.map((opt) => (\r\n                  <option value={opt.companyName}>{opt.companyName}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group> */}\r\n            {/* <Form.Group as={Col}>\r\n              <Form.Control\r\n                onChange={(e) => setField(\"siteEngineer\", e.target.value)}\r\n                value={form.siteEngineer}\r\n                as=\"select\"\r\n                defaultValue=\"All Site Engineers\"\r\n              >\r\n                <option value=\"\">All Site Engineers</option>\r\n                {users.map((opt) => (\r\n                  <option value={opt._id}>{opt.name}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group> */}\r\n          </Row>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            {/* Small boxes (Stat box) */}\r\n            <div className=\"row \">\r\n              <div className=\"col-md-8 row d-flex align-items-end\">\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box\"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#dc3545\" }}\r\n                    >\r\n                      <i className=\"fas fa-users\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task Acceptance\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingTaskAcceptance}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n\r\n                  {/* /.info-box */}\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box\"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#4834d4\" }}\r\n                    >\r\n                      <i className=\"fas fa-meh\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task commencement\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingTaskCommencement}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n\r\n                  {/* /.info-box */}\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box\"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#17a2bb\" }}\r\n                    >\r\n                      <i className=\"fas fa-people-carry\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task Completion\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingTaskCompletion}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n\r\n                  {/* /.info-box */}\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box\"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#38a852\" }}\r\n                    >\r\n                      <i className=\"fas fa-check-double\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task Commission\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingCommission}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n\r\n                  {/* /.info-box */}\r\n                </div>\r\n\r\n                {/* /.col */}\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box mb-3 \"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#6c757d\" }}\r\n                    >\r\n                      <i className=\"fas fa-file-import\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task SAR\r\n                      </span>\r\n                      <span className=\"info-box-number text-white \">\r\n                        {stat.NoOfPendingSar}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                  {/* /.info-box */}\r\n                </div>\r\n                {/* /.col */}\r\n                {/* fix for small devices only */}\r\n                <div className=\"clearfix hidden-md-up\" />\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box mb-3 \"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#677c14\" }}\r\n                    >\r\n                      <i className=\"fas fa-file-signature\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task PAT\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingPat}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                  {/* /.info-box */}\r\n                </div>\r\n                {/* /.col */}\r\n                <div className=\"col-12 col-sm-6 col-md-4\">\r\n                  <div\r\n                    className=\"info-box mb-3\"\r\n                    style={{ backgroundColor: \"#314757\" }}\r\n                  >\r\n                    <span\r\n                      className=\"info-box-icon elevation-1 text-light\"\r\n                      style={{ backgroundColor: \"#d1882b\" }}\r\n                    >\r\n                      <i className=\"fas fa-clipboard-list\" />\r\n                    </span>\r\n                    <div className=\"info-box-content\">\r\n                      <span className=\"info-box-text text-white\">\r\n                        Pending Task OnAir\r\n                      </span>\r\n                      <span className=\"info-box-number text-white\">\r\n                        {stat.NoOfPendingOnAir}\r\n                      </span>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                  {/* /.info-box */}\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <div class=\"progress-group\">\r\n                  No of accepted tasks\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteAcceptance}</b>/{\" \"}\r\n                    {stat.NoOfSubconAllocated}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#dc3545\",\r\n                        width: `calc(100% *${stat.NoOfCompleteAcceptance}/${stat.NoOfSubconAllocated})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of work commencement\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteCommencement}</b>/{\" \"}\r\n                    {stat.NoOfCompleteAcceptance}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#4834d4\",\r\n                        width: `calc(100% *${stat.NoOfCompleteCommencement}/${stat.NoOfCompleteAcceptance})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of work completion\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteCompletion}</b>/{\" \"}\r\n                    {stat.NoOfCompleteCommencement}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#17a2bb\",\r\n                        width: `calc(100% *${stat.NoOfCompleteCompletion}/${stat.NoOfCompleteCommencement})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of Commission\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteCommission}</b>/{\" \"}\r\n                    {stat.NoOfCompleteCompletion}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#38a852\",\r\n                        width: `calc(100% *${stat.NoOfCompleteCommission}/${stat.NoOfCompleteCompletion})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of Sar\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteSar}</b>/{\" \"}\r\n                    {stat.NoOfCompleteCompletion}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#6c757d\",\r\n                        width: `calc(100% *${stat.NoOfCompleteSar}/${stat.NoOfCompleteCompletion})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of Pat\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompletePat}</b>/{\" \"}\r\n                    {stat.NoOfCompleteCompletion}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#677c14\",\r\n                        width: `calc(100% *${stat.NoOfCompletePat}/${stat.NoOfCompleteCompletion})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"progress-group\">\r\n                  No of OnAir\r\n                  <span class=\"float-right\">\r\n                    <b> {stat.NoOfCompleteOnAir}</b>/{\" \"}\r\n                    {stat.NoOfCompleteCompletion}\r\n                  </span>\r\n                  <div class=\"progress progress-sm\">\r\n                    <div\r\n                      class=\"progress-bar\"\r\n                      style={{\r\n                        backgroundColor: \"#d1882b\",\r\n                        width: `calc(100% *${stat.NoOfCompleteOnAir}/${stat.NoOfCompleteCompletion})`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* /.row */}\r\n            {/* Main row */}\r\n            <div className=\"row\">\r\n              {/* Left col */}\r\n              <section className=\"col-lg-12 connectedSortable\">\r\n                {/* Custom tabs (Charts with tabs)*/}\r\n                <div className=\"card bg-light\" style={{ height: \"32rem\" }}>\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <i className=\"fas fa-chart-pie mr-1\" />\r\n                      Daily stats\r\n                    </h3>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body \">\r\n                    <ResponsiveContainer>\r\n                      <LineChart\r\n                        data={data}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 25,\r\n                          left: 0,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"1 1\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend onClick={legend1Onclick} />\r\n                        {lineChart1.map((c) => (\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            name={c.name}\r\n                            dataKey={c.dataKey}\r\n                            stroke={c.stroke}\r\n                            strokeWidth={3}\r\n                            hide={!c.active}\r\n                          />\r\n                        ))}\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                  {/* /.card-body */}\r\n                </div>\r\n                {/* /.card */}\r\n              </section>\r\n              {/* /.Left col */}\r\n            </div>\r\n            {/* /.row (main row) */}\r\n\r\n            {/* /.row */}\r\n            {/* Main row */}\r\n            <div className=\"row\">\r\n              {/* Left col */}\r\n              <section className=\"col-lg-12 connectedSortable\">\r\n                {/* Custom tabs (Charts with tabs)*/}\r\n                <div className=\"card bg-light\" style={{ height: \"32rem\" }}>\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">\r\n                      <i className=\"fas fa-chart-pie mr-1\" />\r\n                      Pending Stats\r\n                    </h3>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body \">\r\n                    <ResponsiveContainer>\r\n                      <LineChart\r\n                        data={dailyData}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 25,\r\n                          left: 0,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"1 1\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend onClick={legend2Onclick} />\r\n                        {lineChart2.map((c) => (\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            name={c.name}\r\n                            dataKey={c.dataKey}\r\n                            stroke={c.stroke}\r\n                            strokeWidth={3}\r\n                            hide={!c.active}\r\n                          />\r\n                        ))}\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                  {/* /.card-body */}\r\n                </div>\r\n                {/* /.card */}\r\n              </section>\r\n              {/* /.Left col */}\r\n            </div>\r\n            {/* /.row (main row) */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n      <Dialog\r\n        open={openDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["VenderDashbordBody","projects","setProjects","useState","projectsData","setProjectsData","subProjects","setSubProjects","filterTasks","setFilterTasks","items","setItems","allItems","setAllItems","data","setData","dailyData","setDailyData","tasks","dispatch","useContext","TaskContext","form","setForm","stat","setStat","projectID","setProjectID","assignedProjectManager","setAssignedProjectManager","companies","setCompanies","users","setUsers","lineChart1","setLineChart1","lineChart2","setLineChart2","openDialog","setOpenDialog","axiosInstance","axios","baseURL","process","setField","field","value","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","filter","obj","companys","companyName","catch","err","console","log","company_id","company","_id","Set","projTemplates","map","ele","project","subProject","setStatFields","name","dataKey","stroke","active","result","t","subcon","assignedSubcon","siteEngineer","assignedMobitelOfficer","getChartData","getDailyChartData","legend2Onclick","e","c","isActive","chartData","date","Date","setDate","getDate","i","toISOString","split","taskAccept","taskHistory","find","x","taskStatus","performedDate","length","taskCommencement","taskComplete","taskCommission","comStatus","taskSAR","sarStatus","taskPAT","patStatus","taskOnAir","onairStatus","reverse","pendingacc","TaskAccept","TaskCommenced","TaskComplete","TaskCommissioned","TaskSARed","TaskPATed","TaskOnAired","noOfSubconAllocated","noOfPendingTaskAcceptance","NoOfAcceptedTasks","noOfPendingTaskCommencement","NoOfCommencedTasks","NoOfPendingTaskCompletion","noOfWorkCompletion","NoOfPendingTaskCommission","NoOfPendingTaskSar","NoOfPendingTaskPat","NoOfPendingTaskOnAir","noOfCompleteAcceptance","noOfCompleteCommencement","noOfCompleteCompletion","NoOfSubconAllocated","NoOfPendingTaskAcceptance","NoOfCompleteAcceptance","NoOfPendingTaskCommencement","NoOfCompleteCommencement","NoOfCompleteCompletion","NoOfPendingCommission","NoOfCompleteCommission","NoOfPendingSar","NoOfCompleteSar","NoOfPendingPat","NoOfCompletePat","NoOfPendingOnAir","NoOfCompleteOnAir","className","onChange","target","task","as","defaultValue","opt","style","backgroundColor","class","width","height","margin","top","right","left","bottom","strokeDasharray","onClick","type","strokeWidth","hide","open","sx","display"],"sourceRoot":""}