{"version":3,"file":"static/js/4984.838fdeaf.chunk.js","mappings":"4PAqHA,SAAeA,EAAAA,EAAAA,KA1Gf,SAA0BC,GACxB,IAAKC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IACjC,MAAMG,EAAgBC,IAAAA,OAAa,CACjCC,QAASC,4DAGXC,EAAAA,EAAAA,YAAU,KACRR,GAAc,GACdI,EACGK,IAAI,0CAA2C,CAC9CC,QAAS,CACPC,MACE,UAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAG1DC,MAAMC,IACLf,EAASe,EAAIC,KAAKC,OAClBC,QAAQC,IAAIJ,EAAIC,KAAKC,OACrBpB,GAAc,EACR,IAEPuB,OAAOC,IACNH,QAAQC,IAAIE,EAAI,GAChB,GACH,IAOH,MAAMC,EAAU,CACd,CAAEC,MAAO,UAAWC,WAAY,UAAWC,MAAO,KAClD,CAAEF,MAAO,SAAUC,WAAY,UAAWC,MAAO,KACjD,CACEF,MAAO,iBACPC,WAAY,2BACZC,MAAO,IACPC,YAAcC,IAAM,eACoB,QADpB,EACO,QADP,EAClBA,EAAOC,IAAIC,sBAAc,aAAzB,EAA2BC,mBAAW,aAAIC,CAAS,GAEvD,CACER,MAAO,yBACPC,WAAY,mBACZC,MAAO,IACPC,YAAcC,IAAM,eACqB,QADrB,EACe,QADf,EAClBA,EAAOC,IAAII,8BAAsB,aAAjC,EAAmCC,YAAI,aAAIF,CAAS,IAY1D,OACE,4BAEE,iBAAKG,UAAU,kBAAiB,WAC9B,gBAAKA,UAAU,iBAAgB,UAC7B,oBAASA,UAAU,iBAAgB,UACjC,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,WAAU,UACvB,gBAAKA,UAAU,WAAU,UACvB,wBAAI,8BAQd,gBAAKC,MAAO,CAAEC,OAAQ,IAAKX,MAAO,QAAS,UACzC,SAAC,MAAQ,CACPY,SAAWC,GAASA,EAAKC,IACzBC,KAAMzC,EACNuB,QAASA,EACTmB,SAAU,GACVC,mBAAoB,CAAC,IACrBC,UAAW,GACXC,aAAc,GACdC,WAAY,CAAEC,QAASC,EAAAA,aAK7B,SAAC,IAAM,CACLC,KAAMpD,EACNqD,QAzCc,CAACC,EAAOC,KACX,cAAXA,GAIJtD,GAAc,EAAM,EAqChB,kBAAgB,qBAChB,mBAAiB,2BAA0B,UAE3C,SAAC,IAAa,WACZ,SAAC,IAAG,CAACuD,GAAI,CAAEC,QAAS,QAAS,UAC3B,SAAC,IAAgB,YAM7B,G,kCClHA,SAAiB,C,kBCDF,SAASC,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,C","sources":["components/WithdrawTaskBody.jsx","webpack://frontend/./src/components/style.css?15d9","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport style from \"./style.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction WithdrawTaskBody(props) {\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  let [items, setItems] = useState([]);\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setOpenDialog(true);\r\n    axiosInstance\r\n      .get(\"projonline/gettasks/alreadyWithdrawTask\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setItems(res.data.tasks);\r\n        console.log(res.data.tasks);\r\n        setOpenDialog(false);\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // const handleClick=(event, cellValues)=>{\r\n  //     // console.log(cellValues)\r\n  //     props.history.push({pathname:'/raisePrSpecificTask', data: cellValues})\r\n  // }\r\n\r\n  const columns = [\r\n    { field: \"taskRef\", headerName: \"Task ID\", width: 350 },\r\n    { field: \"siteID\", headerName: \"Site ID\", width: 130 },\r\n    {\r\n      field: \"assignedSubcon\",\r\n      headerName: \"Assigned Subcon / Vendor\",\r\n      width: 290,\r\n      valueGetter: (params) =>\r\n        params.row.assignedSubcon?.companyName ?? undefined,\r\n    },\r\n    {\r\n      field: \"assignedMobitelOfficer\",\r\n      headerName: \"Assigned Officer\",\r\n      width: 250,\r\n      valueGetter: (params) =>\r\n        params.row.assignedMobitelOfficer?.name ?? undefined,\r\n    },\r\n  ];\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Withdraw Tasks</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n\r\n        <div style={{ height: 610, width: \"100%\" }}>\r\n          <DataGrid\r\n            getRowId={(item) => item._id}\r\n            rows={items}\r\n            columns={columns}\r\n            pageSize={15}\r\n            rowsPerPageOptions={[15]}\r\n            rowHeight={30}\r\n            headerHeight={40}\r\n            components={{ Toolbar: GridToolbar }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(WithdrawTaskBody);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["withRouter","props","openDialog","setOpenDialog","useState","items","setItems","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","tasks","console","log","catch","err","columns","field","headerName","width","valueGetter","params","row","assignedSubcon","companyName","undefined","assignedMobitelOfficer","name","className","style","height","getRowId","item","_id","rows","pageSize","rowsPerPageOptions","rowHeight","headerHeight","components","Toolbar","GridToolbar","open","onClose","event","reason","sx","display","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}