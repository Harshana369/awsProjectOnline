{"version":3,"file":"static/js/6484.a600af31.chunk.js","mappings":"0SAqSA,SAAeA,EAAAA,EAAAA,KAvRf,SAAwBC,GACtB,IAAKC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GAC3C,MAAOG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,IAE7CO,EAAgBC,IAAAA,OAAa,CACjCC,QAASC,8BAGXC,EAAAA,EAAAA,YAAU,KACRT,GAAc,GACdK,EACGK,IAAI,kDAAmD,CACtDC,QAAS,CACPC,MACE,UAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,eAG1DC,MAAMC,IACLtB,EACEsB,EAAIC,KAAKC,MAAMC,QACZC,GACuB,qBAAtBA,EAAgB,YACM,kBAAtBA,EAAgB,YACM,iBAAtBA,EAAgB,YACM,cAAtBA,EAAgB,YACM,aAAtBA,EAAgB,cAGtBvB,GAAc,EAGR,IAEPwB,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAEhB,GACH,IAEH,MAQML,GAAOQ,EAAAA,EAAAA,UAAQ,IAAMhC,GAAO,CAACA,IAsB7BiC,GAAUD,EAAAA,EAAAA,UACd,IAAM,CACJ,CACEE,OAAQ,SACRC,SAAU,WAEVC,KAAM,QAAC,IAAEC,GAAK,SACZ,kBACEC,KAAK,WACLC,SAAU,IA7BS,KAAc,IAAb,IAAEF,GAAK,EACnC,MAAMG,EAAOH,EAAII,SAEjBjC,GAAkBkC,GAEGA,EAAkBC,MAClCC,GAAMA,EAAEC,UAAYL,EAAKK,UAKnBH,EAAkBhB,QAAQkB,GAAMA,EAAEC,UAAYL,EAAKK,UAGnD,IAAIH,EAAmBF,IAEhC,EAasBM,CAAqB,CAAET,QACvCU,QAASV,EAAIW,YACb,EAEJC,QAAQ,GAEV,CACEf,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,UACRC,SAAU,UAEZ,CACED,OAAQ,YACRC,SAAU,YAEZ,CACED,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,cACRC,SAAU,cAEZ,CACED,OAAQ,cACRC,SAAU,cAEZ,CACED,OAAQ,cACRC,SAAWE,GACqB,qBAAvBA,EAAIa,eACP,KACAb,EAAIa,eAAeC,aAG3B,CACEjB,OAAQ,2BACRC,SAAWE,GAC6B,qBAA/BA,EAAIe,uBACP,KACAf,EAAIe,uBAAuBC,QAGrC,KAGI,cAAEC,EAAa,kBAAEC,EAAiB,aAAEC,EAAY,KAAEC,EAAI,WAAEC,IAC5DC,EAAAA,EAAAA,UACE,CAAE1B,UAAST,OAAMoC,cAAe,CAAEX,OAAQY,EAAAA,KAC1CC,EAAAA,WACAC,EAAAA,WA6DJ,OACE,4BAEE,iBAAKC,UAAU,kBAAiB,WAC9B,gBAAKA,UAAU,iBAAgB,UAC7B,oBAASA,UAAU,iBAAgB,UACjC,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,WAAU,WACvB,gBAAKA,UAAU,WAAU,UACvB,wBAAI,gCAEN,iBAAKA,UAAU,sBAAqB,WAElC,SAAC,IAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QA/CG,KACnB,MAIMC,EAAapE,EAAMqE,KAAKC,IAAI,CAChC,UAAWA,EAAKzB,QAChB,UAAWyB,EAAKC,OAChB,YAAaD,EAAKE,SAClB,eAAgBF,EAAKG,QACrB,cAAeH,EAAKI,WACpB,cAAeJ,EAAKK,WACpB,eAAgBL,EAAKpB,eAAeC,YACpC,2BAA4BmB,EAAKlB,uBAAuBC,SAIpDuB,EAAK,CAAEC,OAAQ,CAAErD,KADZsD,EAAAA,MAAAA,cAAyBV,IACDW,WAAY,CAAC,SAC1CC,EAAcF,EAAAA,MAAWF,EAAI,CACjCK,SAAU,OACV3C,KAAM,UAKF4C,GAFc,IAAIC,MAEUC,eAAe,QADjC,CAAEC,SAAU,iBAGtBC,EAAW,IAAIC,KAAK,CAACP,GAAc,CAAE1C,KAzBzC,oFA0BFkD,EAAAA,OAAiBF,EAAS,cAAD,OAAgBJ,GAAa,OAzBhC,SAyBmD,EAoBzDO,MAAO,CAAEC,YAAa,OAAQ,SAC/B,qBAID,SAAC,IAAM,CACLzB,QAAQ,YACRC,MAAM,UACNC,QAAUwB,IAlLR,EAACA,EAAOpF,KAC1BR,EAAM6F,QAAQC,KAAK,CACjBC,SAAU,sBACVtE,KAAMjB,GACN,EA+KgBwF,CAAYJ,EAAOpF,EAAc,EACjC,SACH,wBAUX,gBAAKkF,MAAO,CAAEO,MAAO,QAAS,UAC5B,UAAC,IAAK,CAACC,UAAQ,EAACC,OAAK,KAAK5C,IAAe,WACvC,2BACGE,EAAaa,KAAK8B,IACjB,kBAAQA,EAAYC,sBAAqB,SACtCD,EAAYpF,QAAQsD,KAAKgC,IACxB,mBAAQA,EAAOC,iBAAgB,WAC7B,mBAASD,EAAOE,uBAAsB,SACnCF,EAAOG,OAAO,aAEjB,SAAC,KAAM,CAACH,OAAQA,gBAO1B,qBAAW9C,IAAmB,SAC3BE,EAAKY,KAAKhC,IACTqB,EAAWrB,IAET,kBAAQA,EAAIoE,cAAa,SACtBpE,EAAIqE,MAAMrC,KAAKsC,IACd,kBAAQA,EAAKC,eAAc,SAAGD,EAAKH,OAAO,4BAS1D,SAAC,IAAM,CACLK,KAAM1G,EACN,kBAAgB,qBAChB,mBAAiB,2BAA0B,UAE3C,SAAC,IAAa,WACZ,SAAC,IAAG,CAAC2G,GAAI,CAAEC,QAAS,QAAS,UAC3B,SAAC,IAAgB,YAM7B,G,6FChSO,MAAO9D,EAAS,IAAiB,IAAhB,OAAEoD,GAAQ,EAChC,OACE,gBAAKZ,MAAO,CAAEuB,UAAW,GAAI,SAC1BX,EAAOY,WAAaZ,EAAOG,OAAO,WAC/B,EAIG3C,EAAsB,IAM5B,IALLwC,QAAQ,YACNa,EAAW,UACXC,EACAC,iBAAiB,OAAEC,KAEtB,EACC,OACE,SAAC,IAAK,CACJC,MAAOJ,GAAe,GACtB3E,SAAWgF,IACTJ,EAAUI,EAAEC,OAAOF,YAASG,EAAU,EAExCC,YAAW,kBAAaL,EAAM,UAC9B,C,iGCPN,SAASM,EAAKC,EAAMD,GAAM,MACJ,oBAATA,EAAsBA,EAAO,CAAEE,SAAS,GAC1B,iBAATF,IACd7F,QAAQgG,KAAK,sDACbH,EAAO,CAAEE,SAAUF,IAKjBA,EAAKE,SAAW,6EAA6EE,KAAKH,EAAKtF,MAClG,IAAIiD,KAAK,CAAC,SAA6BqC,GAAO,CAAEtF,KAAMsF,EAAKtF,OAE7DsF,CACR,CAED,SAASI,EAAUJ,EAAKD,EAAMK,GAC5B,IAAIC,EAAM,IAAIC,eACdD,EAAIpB,KAAK,MAAOe,GAChBK,EAAIE,aAAe,OACnBF,EAAIG,OAAS,WACXC,EAAOJ,EAAIK,SAAUX,EAAMK,EAC5B,EACDC,EAAIM,QAAU,WACZzG,QAAQ0G,MAAM,0BACf,EACDP,EAAIQ,MACL,CAED,SAASR,EAAaL,GACpB,IAAID,EAAM,IAAIO,eAEdP,EAAId,KAAK,OAAQe,GAAjB,GACA,IACED,EAAIc,MACL,CAAC,MAAOb,GAAK,CACd,OAAqB,KAAd,EAAIc,QAA+B,KAAd,EAAIA,MACjC,CAGD,SAASnB,EAAOK,GACd,IACEA,EAAKe,cAAc,IAAIC,WAAW,SACnC,CAAC,MAAOZ,GACP,IAAIL,EAAMkB,SAASC,YAAY,eAC/BnB,EAAIoB,eAAe,SAAnB,KAAwCC,OAAQ,EAAG,EAAG,EAAG,GACnC,IADtB,WACsD,EAAG,MACzDpB,EAAKe,cAAchB,EACpB,CACF,C,IAtDGsB,EAA4B,iBAAXD,QAAuBA,OAAOA,SAAWA,OAC1DA,OAAyB,iBAATE,MAAqBA,KAAKA,OAASA,KACnDA,KAAyB,iBAAXC,EAAAA,GAAuBA,EAAAA,EAAOA,SAAWA,EAAAA,EACvDA,EAAAA,OADO,EAyDPvB,EAAiBqB,EAAQG,WAAa,YAAYrB,KAAKqB,UAAUC,YAAc,cAActB,KAAKqB,UAAUC,aAAe,SAAStB,KAAKqB,UAAUC,WAEnJhB,EAASY,EAAQK,SAEA,iBAAXN,QAAuBA,SAAWC,EACtC,WAAiC,EAGlC,aAAcM,kBAAkBC,YAAc5B,EAC/C,SAAiBD,EAAMU,EAAMoB,GAAM,IAC/BC,EAAMT,EAAQU,KAAOV,EAAQW,UAC7BC,EAAIhB,SAASiB,cAAc,KAC/BzB,EAAOA,GAAQV,EAAKtE,MAAQ,WAE5BwG,EAAEE,SAAW1B,EACbwB,EAAEG,IAAM,WAKY,iBAATrC,GAETkC,EAAEI,KAAOtC,EACLkC,EAAEK,SAAWC,SAASD,OAKxB3C,EAAMsC,GAJN5B,EAAY4B,EAAEI,MACVjC,EAASL,EAAMU,EAAMoB,GACrBlC,EAAMsC,EAAGA,EAAErC,OAAS,YAM1BqC,EAAEI,KAAOP,EAAIU,gBAAgBzC,GAC7B0C,YAAW,WAAcX,EAAIY,gBAAgBT,EAAEI,KAAO,GAAE,KACxDI,YAAW,WAAc9C,EAAMsC,EAAI,GAAE,GAExC,EAGC,qBAAsBT,UACtB,SAAiBH,EAAMZ,EAAMoB,GAG7B,GAFApB,EAAOA,GAAQY,EAAK5F,MAAQ,WAER,iBAAT4F,EAUTG,UAAUmB,iBAAiB5C,EAAIsB,EAAMQ,GAAOpB,QAT5C,GAAIJ,EAAYgB,GACdjB,EAASiB,EAAMZ,EAAMoB,OAChB,CACL,IAAIC,EAAIb,SAASiB,cAAc,KAC/BJ,EAAEO,KAAOhB,EACTS,EAAElC,OAAS,SACX6C,YAAW,WAAc9C,EAAMmC,EAAI,GACpC,CAIJ,EAGC,SAAiB/B,EAAMM,EAAMV,EAAMc,GASnC,IANAA,EAAQA,GAASxB,KAAK,GAAI,aAExBwB,EAAMQ,SAAS2B,MACfnC,EAAMQ,SAAS4B,KAAKC,UAAY,kBAGd,iBAAT/C,EAAmB,OAAOK,EAASL,EAAMM,EAAMV,GAThB,IAWtCkC,EAAsB,6BAAd9B,EAAKrF,KACboH,EAAW,eAAe3B,KAAKkB,EAAQ0B,cAAgB1B,EAAQ2B,OAC/Df,EAAc,eAAe9B,KAAKqB,UAAUC,WAEhD,IAAKQ,GAAgBJ,GAASC,GAAa9B,IAAyC,oBAAfiD,WAA4B,CAE/F,IAAIC,EAAS,IAAID,WACjBC,EAAOC,UAAY,WACjB,IAAInD,EAAMkD,EAAOE,OACjBpD,EAAMiC,EAAcjC,EAAMA,EAAIqD,QAAQ,eAAgB,yBAClD5C,EAAOA,EAAM8B,SAASF,KAAOrC,EAC5BuC,SAAWvC,EAChBS,EAAQ,IACT,EACDyC,EAAOI,cAAcvD,EACtB,KAAM,KACDwD,EAAMlC,EAAQU,KAAOV,EAAQW,UAC7BwB,EAAMD,EAAIf,gBAAgBzC,GAC1BU,EAAOA,EAAM8B,SAAWiB,EACvBjB,SAASF,KAAOmB,EACrB/C,EAAQ,KACRgC,YAAW,WAAcc,EAAIb,gBAAgBc,EAAM,GAAE,IACtD,CACF,GAGHnC,EAAQK,OAASjB,EAAOiB,OAASjB,EAG/BgD,EAAOC,QAAUjD,C","sources":["components/ModifyTaskBody.jsx","components/filters.jsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Button } from \"@mui/material\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Filter, DefaultColumnFilter } from \"./filters\";\r\nimport { useTable, useSortBy, useFilters } from \"react-table\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction ModifyTaskBody(props) {\r\n  let [items, setItems] = useState([]);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setOpenDialog(true);\r\n    axiosInstance\r\n      .get(\"projonline/getalltasksfortable/toBeModifiedTask\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setItems(\r\n          res.data.tasks.filter(\r\n            (obj) =>\r\n              obj[\"taskStatus\"] !== \"Task handed over\" &&\r\n              obj[\"taskStatus\"] !== \"Task rejected\" &&\r\n              obj[\"taskStatus\"] !== \"BOQ Approved\" &&\r\n              obj[\"taskStatus\"] !== \"PR Raised\" &&\r\n              obj[\"taskStatus\"] !== \"Withdraw\"\r\n          )\r\n        );\r\n        setOpenDialog(false);\r\n\r\n        // console.log(res.data.tasks);\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //localStorage.setItem('user', JSON.stringify(null))\r\n      });\r\n  }, []);\r\n\r\n  const handleClick = (event, selectedTasks) => {\r\n    props.history.push({\r\n      pathname: \"/modifySpecificTask\",\r\n      data: selectedTasks,\r\n    });\r\n  };\r\n\r\n  // Define your data\r\n  const data = useMemo(() => items, [items]);\r\n\r\n  const handleCheckboxChange = ({ row }) => {\r\n    const task = row.original;\r\n\r\n    setSelectedTasks((prevSelectedTasks) => {\r\n      // Check if the task is already in the selectedTasks array\r\n      const isSelected = prevSelectedTasks.some(\r\n        (t) => t.taskRef === task.taskRef\r\n      );\r\n\r\n      if (isSelected) {\r\n        // If selected, remove the task from the array\r\n        return prevSelectedTasks.filter((t) => t.taskRef !== task.taskRef);\r\n      } else {\r\n        // If not selected, add the task to the array\r\n        return [...prevSelectedTasks, task];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Define your columns\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Select\",\r\n        accessor: \"selected\",\r\n\r\n        Cell: ({ row }) => (\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={() => handleCheckboxChange({ row })}\r\n            checked={row.isSelected}\r\n          />\r\n        ),\r\n        Filter: false,\r\n      },\r\n      {\r\n        Header: \"Task ID\",\r\n        accessor: \"taskRef\",\r\n      },\r\n      {\r\n        Header: \"Site ID\",\r\n        accessor: \"siteID\",\r\n      },\r\n      {\r\n        Header: \"Site Name\",\r\n        accessor: \"siteName\",\r\n      },\r\n      {\r\n        Header: \"Project\",\r\n        accessor: \"project\",\r\n      },\r\n      {\r\n        Header: \"Sub Project\",\r\n        accessor: \"subProject\",\r\n      },\r\n      {\r\n        Header: \"Task Status\",\r\n        accessor: \"taskStatus\",\r\n      },\r\n      {\r\n        Header: \"companyName\",\r\n        accessor: (row) =>\r\n          typeof row.assignedSubcon === \"undefined\"\r\n            ? \"NA\"\r\n            : row.assignedSubcon.companyName,\r\n      },\r\n\r\n      {\r\n        Header: \"Assigned Mobitel Officer\",\r\n        accessor: (row) =>\r\n          typeof row.assignedMobitelOfficer === \"undefined\"\r\n            ? \"NA\"\r\n            : row.assignedMobitelOfficer.name,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      { columns, data, defaultColumn: { Filter: DefaultColumnFilter } },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n  // const handleExport = () => {\r\n  //   const fileType =\r\n  //     \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  //   const fileExtension = \".xlsx\";\r\n\r\n  //   const exportData = items.map((item) => ({\r\n  //     \"Task ID\": item.taskRef,\r\n  //     \"Site ID\": item.siteID,\r\n  //     \"Site Name\": item.siteName,\r\n  //     \"Project Name\": item.project,\r\n  //     \"Sub Project\": item.subProject,\r\n  //     \"Task Status\": item.taskStatus,\r\n  //     \"Company Name\": item.assignedSubcon.companyName,\r\n  //     \"Assigned Mobitel Officer\": item.assignedMobitelOfficer.name,\r\n  //   }));\r\n\r\n  //   const ws = XLSX.utils.json_to_sheet(exportData);\r\n  //   const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n  //   const excelBuffer = XLSX.write(wb, {\r\n  //     bookType: \"xlsx\",\r\n  //     type: \"array\",\r\n  //   });\r\n\r\n  //   const dataBlob = new Blob([excelBuffer], { type: fileType });\r\n  //   FileSaver.saveAs(dataBlob, \"tasks\" + fileExtension);\r\n  // };\r\n\r\n  const handleExport = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n\r\n    const exportData = items.map((item) => ({\r\n      \"Task ID\": item.taskRef,\r\n      \"Site ID\": item.siteID,\r\n      \"Site Name\": item.siteName,\r\n      \"Project Name\": item.project,\r\n      \"Sub Project\": item.subProject,\r\n      \"Task Status\": item.taskStatus,\r\n      \"Company Name\": item.assignedSubcon.companyName,\r\n      \"Assigned Mobitel Officer\": item.assignedMobitelOfficer.name,\r\n    }));\r\n\r\n    const ws = XLSX.utils.json_to_sheet(exportData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n\r\n    const currentDate = new Date();\r\n    const options = { timeZone: \"Asia/Colombo\" };\r\n    const formattedDate = currentDate.toLocaleString(\"en-US\", options);\r\n\r\n    const dataBlob = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(dataBlob, `modifyTask-${formattedDate}${fileExtension}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>All Tasks to be modified</h1>\r\n                </div>\r\n                <div className=\"col-sm-6 text-right\">\r\n                  {/* Move the button to the right side */}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleExport}\r\n                    style={{ marginRight: \"5px\" }}\r\n                  >\r\n                    Export to Excel\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(event) => {\r\n                      handleClick(event, selectedTasks);\r\n                    }}\r\n                  >\r\n                    Modify\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n\r\n        <div style={{ width: \"100%\" }}>\r\n          <Table bordered hover {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      <div {...column.getSortByToggleProps()}>\r\n                        {column.render(\"Header\")}\r\n                      </div>\r\n                      <Filter column={column} />\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    ))}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={openDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ModifyTaskBody);\r\n","import React from \"react\";\r\nimport { Input, CustomInput } from \"reactstrap\";\r\n\r\nexport const  Filter = ({ column }) => {\r\n  return (\r\n    <div style={{ marginTop: 5 }}>\r\n      {column.canFilter && column.render(\"Filter\")}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultColumnFilter = ({\r\n  column: {\r\n    filterValue,\r\n    setFilter,\r\n    preFilteredRows: { length },\r\n  },\r\n}) => {\r\n  return (\r\n    <Input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`search (${length}) ...`}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SelectColumnFilter = ({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) => {\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <CustomInput\r\n      id=\"custom-select\"\r\n      type=\"select\"\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </CustomInput>\r\n  );\r\n};\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["withRouter","props","items","setItems","useState","openDialog","setOpenDialog","list","setList","selectedTasks","setSelectedTasks","axiosInstance","axios","baseURL","process","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","tasks","filter","obj","catch","err","console","log","useMemo","columns","Header","accessor","Cell","row","type","onChange","task","original","prevSelectedTasks","some","t","taskRef","handleCheckboxChange","checked","isSelected","Filter","assignedSubcon","companyName","assignedMobitelOfficer","name","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","defaultColumn","DefaultColumnFilter","useFilters","useSortBy","className","variant","color","onClick","exportData","map","item","siteID","siteName","project","subProject","taskStatus","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","formattedDate","Date","toLocaleString","timeZone","dataBlob","Blob","FileSaver","style","marginRight","event","history","push","pathname","handleClick","width","bordered","hover","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","getRowProps","cells","cell","getCellProps","open","sx","display","marginTop","canFilter","filterValue","setFilter","preFilteredRows","length","value","e","target","undefined","placeholder","b","a","autoBom","warn","test","c","d","XMLHttpRequest","responseType","onload","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}