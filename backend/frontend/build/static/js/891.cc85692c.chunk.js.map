{"version":3,"file":"static/js/891.cc85692c.chunk.js","mappings":"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","sources":["components/HandoverNewTasks.jsx","../node_modules/form-data/lib/browser.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport XLSX from \"xlsx\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport FormData from \"form-data\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { Next } from \"react-bootstrap/esm/PageItem\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst EXTENSIONS = [\"csv\", \"xls\", \"xlsx\"];\r\n\r\nfunction HandoverNewTasks(props) {\r\n  let [rates, setRates] = useState([]);\r\n  let [headersConfig, setHeadersConfig] = useState([]);\r\n  let [alart, setAlart] = useState(\"\");\r\n  let [projects, setProjects] = useState([]);\r\n  let [projectsData, setProjectsData] = useState([]);\r\n  let [subProjects, setSubProjects] = useState([]);\r\n  let [projectID, setProjectID] = useState(0);\r\n  let [assignedProjectManager, setAssignedProjectManager] = useState(\"\");\r\n  let [severity, setSeverity] = useState(\"\");\r\n  let [properties, setProperties] = useState(\"\");\r\n  let [tasks, setTasks] = useState([]);\r\n  let [filterTasks, setFilterTasks] = useState([]);\r\n  let [selectedFile, setSelectedFile] = useState([]);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  let ref = useRef();\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { project, subProject, taskAssignedFromDiV, taskAssignedDiv } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!project || project === \"\" || taskAssignedFromDiV === \"Choose...\")\r\n      newErrors.project = \"cannot be blank!\";\r\n    if (!subProject || subProject === \"\" || taskAssignedFromDiV === \"Choose...\")\r\n      newErrors.subProject = \"cannot be blank!\";\r\n    if (\r\n      !taskAssignedFromDiV ||\r\n      taskAssignedFromDiV === \"\" ||\r\n      taskAssignedFromDiV === \"Choose...\"\r\n    )\r\n      newErrors.taskAssignedFromDiV = \"Choose a division!\";\r\n    if (\r\n      !taskAssignedDiv ||\r\n      taskAssignedDiv === \"\" ||\r\n      taskAssignedDiv === \"Choose...\"\r\n    )\r\n      newErrors.taskAssignedDiv = \"Choose a division!\";\r\n    if (!headersConfig || headersConfig.length === 0)\r\n      newErrors.file = \"Attachment missing!\";\r\n    return newErrors;\r\n  };\r\n  const findDownloadErrors = () => {\r\n    const { project, subProject, taskAssignedFromDiV, taskAssignedDiv } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!project || project === \"\" || taskAssignedFromDiV === \"Choose...\")\r\n      newErrors.project = \"cannot be blank!\";\r\n    if (!subProject || subProject === \"\" || taskAssignedFromDiV === \"Choose...\")\r\n      newErrors.subProject = \"cannot be blank!\";\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/project\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setForm({});\r\n\r\n        setProjects([\r\n          ...new Set(res.data.projTemplates.map((ele) => ele.project)),\r\n        ]);\r\n        setSubProjects([\r\n          ...new Set(res.data.projTemplates.map((ele) => ele.subProject)),\r\n        ]);\r\n        setProjectsData(res.data.projTemplates);\r\n        const data = res.data.tasks.filter((task) => {\r\n          if (task.taskStatus != \"Withdraw\") {\r\n            return task;\r\n          }\r\n        });\r\n        setTasks(data);\r\n        setFilterTasks(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const convertToJson = (headers, fileData) => {\r\n    const rows = [];\r\n    fileData.forEach((row, i) => {\r\n      let rowData = {};\r\n      rowData[\"id\"] = i;\r\n      row.forEach((element, index) => {\r\n        rowData[headers[index]] = element;\r\n      });\r\n      rows.push(rowData);\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const changeProject = (e) => {\r\n    setField(\"project\", e.target.value);\r\n    // console.log(e.target.value)\r\n    // console.log(projectsData)\r\n    // console.log(projectsData)\r\n    let t = projectsData.filter((task) => task.project == e.target.value);\r\n    setSubProjects([...new Set(t.map((ele) => ele.subProject))]);\r\n    // console.log(t)\r\n    for (var i = 0; i < projectsData.length; i++) {\r\n      if (\r\n        e.target.value == projectsData[i].project &&\r\n        form.subProject == projectsData[i].subProject\r\n      ) {\r\n        // console.log(projectsData[i])\r\n        setProjectID(projectsData[i].projectID);\r\n        // console.log(projectsData[i].projectID)\r\n\r\n        i = projectsData.length;\r\n      } else if (i == projectsData.length - 1) {\r\n        setProjectID(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeSubProject = (e) => {\r\n    // console.log(filterTasks)\r\n    setField(\"subProject\", e.target.value);\r\n    // console.log(e.target.value)\r\n\r\n    for (var i = 0; i < projectsData.length; i++) {\r\n      if (\r\n        form.project == projectsData[i].project &&\r\n        e.target.value == projectsData[i].subProject\r\n      ) {\r\n        setAssignedProjectManager(projectsData[i].assignedProjectManager);\r\n        setProjectID(projectsData[i].projectID);\r\n        // console.log(projectsData[i])\r\n\r\n        i = projectsData.length;\r\n      } else if (i == projectsData.length - 1) {\r\n        setProjectID(\"\");\r\n        setAssignedProjectManager(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //     if(form['project'] && form['subProject']){\r\n  //         setFilterTasks(tasks.filter((task)=>(task.project==form['project'] && task.subProject == form['subProject'])) )\r\n  //     }\r\n  // },[form['project'],form['subProject']])\r\n\r\n  const getExtention = (file) => {\r\n    const parts = file.name.split(\".\");\r\n    const extension = parts[parts.length - 1];\r\n    return EXTENSIONS.includes(extension);\r\n  };\r\n\r\n  const importExcel = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    setErrors({\r\n      ...errors,\r\n      file: null,\r\n    });\r\n\r\n    setSelectedFile(e.target.files);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      //parse data\r\n      const bstr = e.target.result;\r\n      const workBook = XLSX.read(bstr, { type: \"binary\" });\r\n\r\n      //get First Sheet\r\n      const workSheetName = workBook.SheetNames[0];\r\n      const workSheet = workBook.Sheets[workSheetName];\r\n      //convert to array\r\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 });\r\n      const header = fileData[0];\r\n      const headers = [];\r\n      for (let j = 0; j < projectsData.length; j++) {\r\n        // console.log(projectsData[j].projectID, \"_\", projectID)\r\n\r\n        if (projectsData[j].projectID === projectID) {\r\n          if (arrayEquals(projectsData[j].properties, header)) {\r\n            // console.log(projectsData[j])\r\n            for (var i = 0; i < fileData[0].length; i++) {\r\n              // console.log(\"rates\")\r\n              let element = {\r\n                field: fileData[0][i],\r\n                headerName: fileData[0][i],\r\n                minWidth: 150,\r\n                flex: 1,\r\n              };\r\n              headers.push(element);\r\n            }\r\n\r\n            setHeadersConfig(headers);\r\n\r\n            fileData.splice(0, 1);\r\n            setProperties(fileData);\r\n            setRates(convertToJson(header, fileData));\r\n            // console.log(fileData)\r\n            //totalInputHeader = projects[j].properties.splice(0, 3)\r\n            j = projectsData.length;\r\n          } else {\r\n            setOpen(true);\r\n            setSeverity(\"error\");\r\n            setAlart(\"Project Template is different\");\r\n            setRates([]);\r\n            setHeadersConfig([]);\r\n            j = projectsData.length;\r\n            //totalInputHeader = projects[j].properties.splice(0, 3)\r\n          }\r\n        } else if (j == projectsData.length - 1) {\r\n          setOpen(true);\r\n          setSeverity(\"error\");\r\n          setAlart(\"Project Supproject combination is not available\");\r\n          setRates([]);\r\n          setHeadersConfig([]);\r\n        }\r\n      }\r\n    };\r\n    if (file) {\r\n      if (getExtention(file)) {\r\n        reader.readAsBinaryString(file);\r\n      } else {\r\n        alert(\"Invalid file\");\r\n      }\r\n    } else {\r\n      setRates([]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      var uploadfiles = new FormData();\r\n\r\n      uploadfiles.append(\"files\", selectedFile[0]);\r\n      // console.log(selectedFile[0])\r\n      // console.log(uploadfiles)\r\n\r\n      const taskObject = {\r\n        taskAssignedFromDiV: form.taskAssignedFromDiV,\r\n        taskAssignedDiv: form.taskAssignedDiv,\r\n        assignedProjectManager: assignedProjectManager._id,\r\n        project: form.project,\r\n        subProject: form.subProject,\r\n        projectID: projectID,\r\n        taskStatus: \"Task handed over\",\r\n        properties: properties,\r\n        priority: form.priority,\r\n        headerProperties: headersConfig.map((item) => item.field),\r\n      };\r\n\r\n      // console.log(taskObject)\r\n      setOpenDialog(true);\r\n\r\n      axiosInstance\r\n        .post(\"projonline/upload\", uploadfiles, {\r\n          headers: {\r\n            token:\r\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            \"Content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res1) => {\r\n          taskObject.handoverFiles = res1.data;\r\n          // console.log(taskObject)\r\n          axiosInstance\r\n            .post(\"projonline/addTask\", taskObject, {\r\n              headers: {\r\n                token:\r\n                  \"Bearer \" +\r\n                  JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              // console.log(\"Test\")\r\n              // console.log(res.data.msg)\r\n\r\n              setTimeout(() => {\r\n                setAlart(res.data.msg);\r\n                setSeverity(res.data.variant);\r\n                setForm({\r\n                  taskAssignedFromDiV: \"\",\r\n                  taskAssignedDiv: \"\",\r\n                  project: \"\",\r\n                  subProject: \"\",\r\n                  priority: \"None\",\r\n                });\r\n                setProjectID(\"\");\r\n                setAssignedProjectManager(\"\");\r\n                setOpen(true);\r\n              }, 2000);\r\n              setTimeout(() => {\r\n                setOpenDialog(false);\r\n                setOpen(false);\r\n                setRates([]);\r\n                setHeadersConfig([]);\r\n                ref.current.value = \"\";\r\n              }, 5000);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const downloadHandover = (e) => {\r\n    const newErrors = findDownloadErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else if (filterTasks.length > 0) {\r\n      // if (!projectID == '' ){\r\n      //Create Downloadable excel file\r\n      var workbook = XLSX.utils.book_new();\r\n\r\n      //get selected projects\r\n      // var selectedProjects = [...new Set(props.location.data.map(ele=>ele.projectID))]\r\n      var worksheetData = [];\r\n      var filteredTasks = tasks.filter(\r\n        (task) =>\r\n          task.project == form[\"project\"] &&\r\n          task.subProject == form[\"subProject\"]\r\n      );\r\n      var data = [];\r\n      // console.log(filteredTasks)\r\n      for (var i = 0; i < filteredTasks.length; i++) {\r\n        let prop = filteredTasks[i].properties;\r\n        // console.log(prop)\r\n        // console.log(filteredTasks[i].taskRef)\r\n        prop.unshift(filteredTasks[i].taskRef);\r\n        worksheetData.unshift(prop);\r\n        //console.log(worksheetData)\r\n      }\r\n      let headerProp = filteredTasks[0].headerProperties;\r\n      headerProp.unshift(\"Task ID\");\r\n      worksheetData.unshift(headerProp);\r\n      var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n      XLSX.utils.book_append_sheet(workbook, ws, \"sheet1\");\r\n      //console.log(worksheetData)\r\n      XLSX.writeFile(workbook, \"Already handedover tasks.xlsx\");\r\n      // console.log(filteredTasks)\r\n      worksheetData = [];\r\n      filteredTasks = [];\r\n      headerProp = [];\r\n      setTasks(filterTasks);\r\n    } else {\r\n      setOpen(true);\r\n      setSeverity(\"error\");\r\n      setAlart(\"Project Supproject combination is not available\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Handover New Tasks</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <Form onSubmit={onSubmit}>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>From: Division</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskAssignedFromDiV\", e.target.value)\r\n                    }\r\n                    value={form.taskAssignedFromDiV}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedFromDiV}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Planning_Radio</option>\r\n                    <option>Planning_Core</option>\r\n                    <option>Planning_TX</option>\r\n                    <option>Planning_IBS</option>\r\n                    <option>Planning_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedFromDiV}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assign to: Division</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskAssignedDiv\", e.target.value)\r\n                    }\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Project Manager</Form.Label>\r\n                  <Form.Control\r\n                    disabled\r\n                    value={assignedProjectManager.name}\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Project Manager\"\r\n                    isInvalid={!!errors.assignedProjectManager}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col sm={4}>\r\n                  <Form.Group>\r\n                    <Form.Label>Project</Form.Label>\r\n                    <Form.Control\r\n                      onChange={changeProject}\r\n                      value={form.project}\r\n                      as=\"select\"\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.project}\r\n                    >\r\n                      <option value=\"\">Choose...</option>\r\n                      {projects.map((opt) => (\r\n                        <option value={opt}>{opt}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.project}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  <Form.Group>\r\n                    <Form.Label>Sub Project</Form.Label>\r\n                    <Form.Control\r\n                      onChange={changeSubProject}\r\n                      disabled={form.project ? false : true}\r\n                      value={form.subProject}\r\n                      as=\"select\"\r\n                      defaultValue=\"Choose...\"\r\n                      isInvalid={!!errors.subProject}\r\n                    >\r\n                      <option>Choose...</option>\r\n                      {subProjects.map((opt) => (\r\n                        <option value={opt}>{opt}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.subProject}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Form.Group>\r\n                    <Form.Label>Project ID</Form.Label>\r\n                    <Form.Control\r\n                      disabled\r\n                      value={projectID}\r\n                      className=\"\"\r\n                      type=\"text\"\r\n                      placeholder=\"Project ID\"\r\n                      isInvalid={!!errors.projectID}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.projectID}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Form.Group>\r\n                    <Form.Label>Priority</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(e) => setField(\"priority\", e.target.value)}\r\n                      disabled={form.project ? false : true}\r\n                      value={form.priority}\r\n                      as=\"select\"\r\n                      defaultValue=\"None\"\r\n                      isInvalid={!!errors.priority}\r\n                    >\r\n                      <option>None</option>\r\n                      <option>High Priority</option>\r\n                      <option>VIP</option>\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.priority}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Upload new task handover</Form.Label>\r\n                  <Form.Control\r\n                    onChange={importExcel}\r\n                    ref={ref}\r\n                    type=\"file\"\r\n                    isInvalid={!!errors.file}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.file}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Handover new tasks\r\n                </Button>\r\n                <Col>\r\n                  {\" \"}\r\n                  <Button variant=\"outline-success\" onClick={downloadHandover}>\r\n                    Dowanload already handed over tasks\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n\r\n            <div style={{ height: 610, width: \"100%\" }}>\r\n              <DataGrid\r\n                getRowId={(item) => item.id}\r\n                rows={rates}\r\n                columns={headersConfig}\r\n                pageSize={15}\r\n                rowsPerPageOptions={[15]}\r\n                rowHeight={30}\r\n                headerHeight={40}\r\n                components={{ Toolbar: GridToolbar }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {alart}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction arrayEquals(a, b) {\r\n  return (\r\n    Array.isArray(a) &&\r\n    Array.isArray(b) &&\r\n    a.length === b.length &&\r\n    a.every((val, index) => val === b[index])\r\n  );\r\n}\r\n\r\nexport default withRouter(HandoverNewTasks);\r\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n"],"names":["Alert","React","props","ref","elevation","variant","EXTENSIONS","arrayEquals","a","b","Array","isArray","length","every","val","index","withRouter","rates","setRates","useState","headersConfig","setHeadersConfig","alart","setAlart","projects","setProjects","projectsData","setProjectsData","subProjects","setSubProjects","projectID","setProjectID","assignedProjectManager","setAssignedProjectManager","severity","setSeverity","properties","setProperties","tasks","setTasks","filterTasks","setFilterTasks","selectedFile","setSelectedFile","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","openDialog","setOpenDialog","useRef","setField","field","value","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","Set","data","projTemplates","map","ele","project","subProject","filter","task","taskStatus","catch","err","console","log","convertToJson","fileData","rows","forEach","row","i","rowData","element","push","handleClose","event","reason","className","onSubmit","e","preventDefault","newErrors","taskAssignedFromDiV","taskAssignedDiv","file","findFormErrors","Object","keys","uploadfiles","FormData","append","taskObject","_id","priority","headerProperties","item","post","res1","handoverFiles","setTimeout","msg","current","error","as","Col","onChange","target","defaultValue","isInvalid","type","disabled","name","placeholder","sm","t","opt","files","reader","FileReader","onload","bstr","result","workBook","XLSX","workSheetName","SheetNames","workSheet","Sheets","header","j","headerName","minWidth","flex","splice","parts","split","extension","includes","getExtention","readAsBinaryString","alert","onClick","findDownloadErrors","workbook","worksheetData","filteredTasks","prop","unshift","taskRef","headerProp","ws","style","height","width","getRowId","id","columns","pageSize","rowsPerPageOptions","rowHeight","headerHeight","components","Toolbar","GridToolbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","module","exports","self","window"],"sourceRoot":""}