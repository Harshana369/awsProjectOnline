{"version":3,"file":"static/js/3886.6e3820ca.chunk.js","mappings":"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","sources":["components/AllApprovedChangesBody.jsx","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { Button, Modal, Form, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction AllApprovedChangesBody() {\r\n  let [items, setItems] = useState([]);\r\n  let [item, setItem] = useState([]);\r\n  let [properties, setProperties] = useState([]);\r\n  let [headerProperties, setHeaderProperties] = useState([]);\r\n\r\n  const handleChange = (e, index) => {\r\n    setProperties({ ...properties, [index]: e.target.value });\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (row) => {\r\n    setItem(row);\r\n    setProperties(row.newProperties);\r\n    setHeaderProperties(row.headerProperties);\r\n    setShow(true);\r\n  };\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axiosInstance\r\n      .get(\"projonline/allhandoverchanges/all\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setItems(res.data);\r\n        // console.log(res.data)\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"taskRef\", headerName: \"TaskID\", width: 250 },\r\n    { field: \"siteID\", headerName: \"SiteID\", width: 150 },\r\n    { field: \"siteName\", headerName: \"Site Name\", width: 175 },\r\n    { field: \"project\", headerName: \"Project\", width: 250 },\r\n    { field: \"subProject\", headerName: \"Sub Project\", width: 250 },\r\n    {\r\n      field: \"All Approved Handover Changes\",\r\n      width: 250,\r\n      align: \"center\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"primary\"\r\n            style={{ width: 100 }}\r\n            onClick={() => handleShow(cellValues.row)}\r\n          >\r\n            Show\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>All Approved Handover Changes</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n\r\n        <div style={{ height: 610, width: \"100%\" }}>\r\n          <DataGrid\r\n            getRowId={(item) => item._id}\r\n            rows={items}\r\n            columns={columns}\r\n            pageSize={15}\r\n            rowsPerPageOptions={[15]}\r\n            rowHeight={30}\r\n            headerHeight={40}\r\n            components={{ Toolbar: GridToolbar }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose} size=\"lg\" animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Handover</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleClose}>\r\n            {headerProperties?.map((headerProperty, index) => {\r\n              if (index < 3) {\r\n                return (\r\n                  <Row>\r\n                    <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\r\n                      <Form.Label>{headerProperty}</Form.Label>\r\n                      <Form.Control\r\n                        className=\"mr-1 ml-1\"\r\n                        value={properties[index]}\r\n                        onChange={(e) => handleChange(e, index)}\r\n                        type=\"text\"\r\n                        readOnly\r\n                      />\r\n                    </Form.Group>\r\n                  </Row>\r\n                );\r\n              } else {\r\n                return (\r\n                  <Row>\r\n                    <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\r\n                      <Form.Label>{headerProperty}</Form.Label>\r\n                      <div className=\"d-flex flex-row\">\r\n                        <Form.Control\r\n                          className=\"mr-1 ml-1\"\r\n                          value={item.existingProperties[index]}\r\n                          type=\"text\"\r\n                          readOnly\r\n                        />\r\n                        <Form.Control\r\n                          className={`mr-1 ml-1 ${\r\n                            item.existingProperties[index] != properties[index]\r\n                              ? \"text-danger\"\r\n                              : \"\"\r\n                          }`}\r\n                          value={properties[index]}\r\n                          onChange={(e) => handleChange(e, index)}\r\n                          type=\"text\"\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </Row>\r\n                );\r\n              }\r\n            })}\r\n            <Row>\r\n              <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n                <Form.Label>Reason for the change request</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  required\r\n                  value={item.comment}\r\n                  readonly\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row>\r\n              <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n                <Form.Label>Approve Comment</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  readonly\r\n                  value={item.approveComment}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AllApprovedChangesBody);\r\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["withRouter","items","setItems","useState","item","setItem","properties","setProperties","headerProperties","setHeaderProperties","handleChange","e","index","target","value","show","setShow","handleClose","axiosInstance","axios","baseURL","process","useEffect","getData","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","catch","err","console","log","columns","field","headerName","width","align","renderCell","cellValues","variant","style","onClick","handleShow","row","newProperties","className","height","getRowId","_id","rows","pageSize","rowsPerPageOptions","rowHeight","headerHeight","components","Toolbar","GridToolbar","onHide","size","animation","closeButton","onSubmit","map","headerProperty","controlId","as","Col","onChange","type","readOnly","existingProperties","required","comment","readonly","approveComment","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","_excluded","DEVICE_SIZES","Row","React","_ref","ref","bsPrefix","noGutters","_ref$as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_extends","classNames","concat","displayName","defaultProps","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}