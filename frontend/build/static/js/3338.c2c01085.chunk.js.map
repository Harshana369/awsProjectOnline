{"version":3,"file":"static/js/3338.c2c01085.chunk.js","mappings":"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","sources":["components/RequestHandoverChangesBody.jsx","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport style from \"./style.css\";\r\nimport { Select, MenuItem } from \"@mui/material\";\r\nimport { Button, Modal, Form, Row, Col, Container } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport XLSX from \"xlsx\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst EXTENSIONS = [\"csv\", \"xls\", \"xlsx\"];\r\n\r\nfunction RequestHandoverChangesBody() {\r\n  let [items, setItems] = useState([]);\r\n  let [item, setItem] = useState([]);\r\n  let [properties, setProperties] = useState([]);\r\n  let [headerProperties, setHeaderProperties] = useState([]);\r\n  let [open, setOpen] = useState(false);\r\n  let [severity, setSeverity] = useState(\"\");\r\n  let [alart, setAlart] = useState(\"\");\r\n  let [comment, setComment] = useState(\"\");\r\n  let [commentStatus, setCommentStatus] = useState(\"\");\r\n  let [status, setStatus] = useState(\"\");\r\n  let [continuesStatus, setContinuesStatus] = useState(\"\");\r\n  let [errors, setErrors] = useState({});\r\n  let [newProperties, setNewProperties] = useState([]);\r\n  let [projectsData, setProjectsData] = useState([]);\r\n  let [headersConfig, setHeadersConfig] = useState([]);\r\n  let [rates, setRates] = useState([]);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n  let [mobitelUsersName, setMobitelUsersName] = useState([]);\r\n  let [changeHandoverApprover, setHandoverChangeApprover] = useState();\r\n  let [projectManager, setProjectManager] = useState();\r\n  let [handoverChangeApproverName, setHandoverChangeApproverName] = useState();\r\n\r\n  const handleChange = (e, index) => {\r\n    setProperties({ ...properties, [index]: e.target.value });\r\n  };\r\n\r\n  const [singleTask, setSingleTask] = useState(false);\r\n  const [bulkTask, setBulkTask] = useState(false);\r\n  const fileRef = useRef();\r\n\r\n  const handleClose = () => setSingleTask(false);\r\n  const bulkHandleClose = () => {\r\n    setRates([]);\r\n    setNewProperties([]);\r\n    setBulkTask(false);\r\n  };\r\n  const handleSingleTask = (row) => {\r\n    setItem(row);\r\n    for (var i = row.taskHistory.length - 2; i >= 0; i--) {\r\n      if (row.taskHistory[i + 1].taskStatus == \"Hold requested\") {\r\n        setContinuesStatus(row.taskHistory[i].taskStatus);\r\n        break;\r\n      }\r\n    }\r\n    setProperties(row.properties);\r\n    setHeaderProperties(row.headerProperties);\r\n    setStatus(row.taskStatus);\r\n    setComment(\"\");\r\n    setSingleTask(true);\r\n  };\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getMobitelUserName();\r\n\r\n    setOpenDialog(true);\r\n    getData();\r\n\r\n    axiosInstance\r\n      .get(\"projonline/project\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setProjectsData(res.data.projTemplates);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setHandoverChangeApproverfunction();\r\n  }, [changeHandoverApprover]);\r\n\r\n  const getMobitelUserName = () => {\r\n    axiosInstance\r\n      .get(\"projonline/mobitelusers\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const mobitelUsersName = res.data.map((user) => ({\r\n          name: user.name,\r\n          _id: user._id,\r\n        }));\r\n\r\n        // console.log(mobitelUsersName);\r\n        setMobitelUsersName(mobitelUsersName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    axiosInstance\r\n      .get(\"projonline/gettasks\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const data = res.data.tasks.filter((x) => {\r\n          if (x.taskStatus != \"Withdraw\") {\r\n            return x;\r\n          }\r\n        });\r\n        setItems(data);\r\n\r\n        setOpenDialog(false);\r\n\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getProjectManager = (assignedProjectManager) => {\r\n    let projectManager = null;\r\n    mobitelUsersName.forEach((obj) => {\r\n      if (obj._id === assignedProjectManager) {\r\n        projectManager = obj.name;\r\n      }\r\n    });\r\n\r\n    // Update the state after the loop\r\n    setProjectManager(projectManager);\r\n  };\r\n\r\n  const setHandoverChangeApproverfunction = () => {\r\n    let HandoverChangeApproverName = null;\r\n\r\n    mobitelUsersName.forEach((obj) => {\r\n      if (obj._id === changeHandoverApprover) {\r\n        HandoverChangeApproverName = obj.name;\r\n      }\r\n    });\r\n\r\n    // console.log(HandoverChangeApproverName);\r\n    setHandoverChangeApproverName(HandoverChangeApproverName);\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!comment || comment === \"\") newErrors.comment = \"cannot be blank!\";\r\n    // console.log(newErrors)\r\n    return newErrors;\r\n  };\r\n  const findFormErrorsStatus = () => {\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!commentStatus || commentStatus === \"\")\r\n      newErrors.commentStatus = \"cannot be blank!\";\r\n    // console.log(newErrors)\r\n    return newErrors;\r\n  };\r\n  const handleSubmit = () => {\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/addhandoverchanges\",\r\n          {\r\n            taskRef: item.taskRef,\r\n            siteID: item.siteID,\r\n            siteName: item.siteName,\r\n            newProperties: properties,\r\n            existingProperties: item.properties,\r\n            headerProperties: headerProperties,\r\n            project: item.project,\r\n            assignedProjectManager: item.assignedProjectManager,\r\n            subProject: item.subProject,\r\n            taskRefID: item._id,\r\n            status: \"Pending\",\r\n            changeHandOverUser: changeHandoverApprover,\r\n            comment: comment,\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      axiosInstance\r\n        .put(\r\n          `projonline/update/${item._id}`,\r\n          {\r\n            taskObject: {},\r\n            taskHistory: {\r\n              taskStatus: \"Handover change requested\",\r\n              comment: comment,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res)\r\n          setOpen(true);\r\n          setSeverity(\"success\");\r\n          setAlart(\"Handover successfully requested\");\r\n          setSingleTask(false);\r\n          return;\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err)\r\n          setOpen(true);\r\n          setSeverity(\"error\");\r\n          setAlart(\"Error occured\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const bulkSubmit = () => {\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      newProperties.forEach((prop) => {\r\n        const temp = items.filter((it) => prop[0] == it.taskRef);\r\n\r\n        let newProperties = prop;\r\n        newProperties.splice(0, 1);\r\n        axiosInstance\r\n          .post(\r\n            \"projonline/addhandoverchanges\",\r\n            {\r\n              taskRef: temp[0].taskRef,\r\n              siteID: temp[0].siteID,\r\n              siteName: temp[0].siteName,\r\n              existingProperties: temp[0].properties,\r\n              newProperties: newProperties,\r\n              headerProperties: temp[0].headerProperties,\r\n              project: temp[0].project,\r\n              assignedProjectManager: temp[0].assignedProjectManager,\r\n              subProject: temp[0].subProject,\r\n              taskRefID: temp[0]._id,\r\n              status: \"Pending\",\r\n              taskStatus: status,\r\n              comment: commentStatus,\r\n            },\r\n            {\r\n              headers: {\r\n                token:\r\n                  \"Bearer \" +\r\n                  JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            // console.log(res)\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        axiosInstance\r\n          .put(\r\n            `projonline/update/${temp[0]._id}`,\r\n            {\r\n              taskObject: {},\r\n              taskHistory: {\r\n                taskStatus: \"Handover change requested\",\r\n                comment: commentStatus,\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                token:\r\n                  \"Bearer \" +\r\n                  JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            // console.log(res)\r\n            setOpen(true);\r\n            setComment(\"\");\r\n            setSeverity(\"success\");\r\n            setAlart(\"Handover successfully requested\");\r\n            bulkHandleClose();\r\n            return;\r\n          })\r\n          .catch((err) => {\r\n            // console.log(err)\r\n            setComment(\"\");\r\n            setOpen(true);\r\n            setSeverity(\"error\");\r\n            setAlart(\"Error occured\");\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  function arrayEquals(a, b) {\r\n    return (\r\n      Array.isArray(a) &&\r\n      Array.isArray(b) &&\r\n      a.length === b.length &&\r\n      a.every((val, index) => val === b[index])\r\n    );\r\n  }\r\n\r\n  const changeStatus = () => {\r\n    const newErrors = findFormErrorsStatus();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else if (status != item.taskStatus) {\r\n      axiosInstance\r\n        .post(\r\n          \"projonline/addhandoverchanges\",\r\n          {\r\n            taskRef: item.taskRef,\r\n            siteID: item.siteID,\r\n            siteName: item.siteName,\r\n            newProperties: properties,\r\n            existingProperties: item.properties,\r\n            headerProperties: headerProperties,\r\n            project: item.project,\r\n            assignedProjectManager: item.assignedProjectManager,\r\n            subProject: item.subProject,\r\n            taskRefID: item._id,\r\n            status: \"Pending\",\r\n            taskStatus: status,\r\n            changeHandOverUser: changeHandoverApprover,\r\n            comment: `Approver: ${handoverChangeApproverName} / Reason: ${commentStatus}`,\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      axiosInstance\r\n        .put(\r\n          `projonline/update/${item._id}`,\r\n          {\r\n            taskObject: {},\r\n            taskHistory: {\r\n              taskStatus: `${status} requested`,\r\n              comment: `Approver: ${handoverChangeApproverName} / Reason: ${commentStatus}`,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              token:\r\n                \"Bearer \" +\r\n                JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res)\r\n          setOpen(true);\r\n          setSeverity(\"success\");\r\n          setAlart(\"status change successfully requested\");\r\n          setSingleTask(false);\r\n          return;\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err)\r\n          setOpen(true);\r\n          setSeverity(\"error\");\r\n          setAlart(\"Error occured\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const importExcel = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    setErrors({\r\n      ...errors,\r\n      file: null,\r\n    });\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      //parse data\r\n      const bstr = e.target.result;\r\n      const workBook = XLSX.read(bstr, { type: \"binary\" });\r\n\r\n      //get First Sheet\r\n      const workSheetName = workBook.SheetNames[0];\r\n      const workSheet = workBook.Sheets[workSheetName];\r\n      //convert to array\r\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 });\r\n      const header = fileData[0];\r\n      const headers = [];\r\n      let err = { iserror: false, msg: \"\" };\r\n      if (\r\n        fileData[0][0] === \"Task ID\" &&\r\n        fileData[0][2] === \"Site ID\" &&\r\n        fileData[0][3] === \"Site Name\"\r\n      ) {\r\n        for (var i = 1; i < fileData.length; i++) {\r\n          let temp = items.filter((it) => fileData[i][0] == it.taskRef);\r\n          if (temp.length == 0) {\r\n            err = {\r\n              iserror: true,\r\n              msg: `Please check the Task ID: ${fileData[i][0]}`,\r\n            };\r\n            break;\r\n          }\r\n          if (!arrayEquals(temp[0].headerProperties, header.slice(1))) {\r\n            err = { iserror: true, msg: `Please check the header` };\r\n            break;\r\n          }\r\n          // console.log(header)\r\n\r\n          if (fileData[i][2] != temp[0].siteID) {\r\n            err = {\r\n              iserror: true,\r\n              msg: `Please check the Site ID of Task : ${fileData[i][0]}`,\r\n            };\r\n            break;\r\n          }\r\n          if (fileData[i][3] != temp[0].siteName) {\r\n            err = {\r\n              iserror: true,\r\n              msg: `Please check the Site Name of Task : ${fileData[i][0]}`,\r\n            };\r\n            break;\r\n          }\r\n          if (fileData[i].length != temp[0].properties.length + 1) {\r\n            err = {\r\n              iserror: true,\r\n              msg: `Please check the number of attributes : ${fileData[i][0]}`,\r\n            };\r\n            break;\r\n          }\r\n        }\r\n        if (!err.iserror) {\r\n          for (var i = 0; i < fileData[0].length; i++) {\r\n            let element = {\r\n              field: fileData[0][i],\r\n              headerName: fileData[0][i],\r\n              minWidth: 150,\r\n              flex: 1,\r\n            };\r\n            headers.push(element);\r\n          }\r\n          setHeadersConfig(headers);\r\n\r\n          fileData.splice(0, 1);\r\n          setNewProperties(fileData);\r\n          setRates(convertToJson(header, fileData));\r\n        } else {\r\n          fileRef.current.value = \"\";\r\n          setOpen(true);\r\n          setSeverity(\"error\");\r\n          setAlart(err.msg);\r\n          setRates([]);\r\n          setHeadersConfig([]);\r\n        }\r\n      } else {\r\n        fileRef.current.value = \"\";\r\n        setOpen(true);\r\n        setSeverity(\"error\");\r\n        setAlart(\r\n          \"Task ID, Site ID and Site Name should be in Column No 1, 3 and 4\"\r\n        );\r\n        setRates([]);\r\n        setHeadersConfig([]);\r\n      }\r\n    };\r\n    if (file) {\r\n      if (getExtention(file)) {\r\n        reader.readAsBinaryString(file);\r\n      } else {\r\n        alert(\"Invalid file\");\r\n      }\r\n    } else {\r\n      setRates([]);\r\n    }\r\n  };\r\n  const convertToJson = (headers, fileData) => {\r\n    const rows = [];\r\n    fileData.forEach((row, i) => {\r\n      let rowData = {};\r\n      rowData[\"id\"] = i;\r\n      row.forEach((element, index) => {\r\n        rowData[headers[index]] = element;\r\n      });\r\n      rows.push(rowData);\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const getExtention = (file) => {\r\n    const parts = file.name.split(\".\");\r\n    const extension = parts[parts.length - 1];\r\n    return EXTENSIONS.includes(extension);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"taskRef\", headerName: \"TaskID\", width: 250 },\r\n    {\r\n      field: \"SiteID\",\r\n      headerName: \"SiteID\",\r\n      width: 150,\r\n      valueGetter: (items) => items.row.properties[1],\r\n    },\r\n    {\r\n      field: \"Site Name\",\r\n      headerName: \"Site Name\",\r\n      width: 175,\r\n      valueGetter: (items) => items.row.properties[2],\r\n    },\r\n    { field: \"project\", headerName: \"Project\", width: 175 },\r\n    { field: \"subProject\", headerName: \"Sub Project\", width: 175 },\r\n    {\r\n      field: \"Change the Handover\",\r\n      width: 250,\r\n      align: \"center\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"primary\"\r\n            style={{ width: 100 }}\r\n            onClick={() => {\r\n              getProjectManager(cellValues.row.assignedProjectManager);\r\n\r\n              handleSingleTask(cellValues.row);\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div>\r\n                <div>\r\n                  <Container>\r\n                    <Row>\r\n                      <Col xs={4}>\r\n                        <h1>Request Handover Changes</h1>\r\n                      </Col>\r\n\r\n                      <Col xs={2}></Col>\r\n\r\n                      <Col>\r\n                        <div className=\"vr\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"vr\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => setBulkTask(true)}\r\n                        >\r\n                          Handover Bulk Changes\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n\r\n        <div style={{ height: 610, width: \"100%\" }}>\r\n          <DataGrid\r\n            getRowId={(item) => item._id}\r\n            rows={items}\r\n            columns={columns}\r\n            pageSize={15}\r\n            rowsPerPageOptions={[15]}\r\n            rowHeight={30}\r\n            headerHeight={40}\r\n            components={{ Toolbar: GridToolbar }}\r\n          />\r\n        </div>\r\n        {/* View excel */}\r\n      </div>\r\n      <Modal\r\n        show={bulkTask}\r\n        onHide={bulkHandleClose}\r\n        animation={false}\r\n        dialogClassName=\"bulk-modal-size\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Handover</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Upload edited task handover</Form.Label>\r\n                <Form.Control\r\n                  onChange={importExcel}\r\n                  ref={fileRef}\r\n                  type=\"file\"\r\n                  isInvalid={!!errors.file}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.file}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <div style={{ height: 610, width: \"100%\" }}>\r\n                <DataGrid\r\n                  getRowId={(item) => item.id}\r\n                  rows={rates}\r\n                  columns={headersConfig}\r\n                  pageSize={15}\r\n                  rowsPerPageOptions={[15]}\r\n                  rowHeight={30}\r\n                  headerHeight={40}\r\n                  components={{ Toolbar: GridToolbar }}\r\n                />\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n                <Form.Label>Reason for the change request</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  isInvalid={!!errors.comment}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide comment\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={bulkHandleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={bulkSubmit}>\r\n                Request approval\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* // */}\r\n\r\n      <Modal show={singleTask} onHide={handleClose} size=\"lg\" animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Handover</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            {headerProperties?.map((headerProperty, index) => {\r\n              if (index < 3) {\r\n                return (\r\n                  <Row>\r\n                    <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\r\n                      <Form.Label>{headerProperty}</Form.Label>\r\n                      <Form.Control\r\n                        className=\"mr-1 ml-1\"\r\n                        value={properties[index]}\r\n                        onChange={(e) => handleChange(e, index)}\r\n                        type=\"text\"\r\n                        readOnly={true}\r\n                      />\r\n                    </Form.Group>\r\n                  </Row>\r\n                );\r\n              } else {\r\n                return (\r\n                  <Row>\r\n                    <Form.Group className=\"m-2\" controlId=\"refid\" as={Col}>\r\n                      <Form.Label>{headerProperty}</Form.Label>\r\n                      <Form.Control\r\n                        value={properties[index]}\r\n                        onChange={(e) => handleChange(e, index)}\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Row>\r\n                );\r\n              }\r\n            })}\r\n            <Row>\r\n              <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n                <Form.Label>Reason for the change request</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  value={comment}\r\n                  rows={3}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  isInvalid={!!errors.comment}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide comment\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n                <Form.Label> Change Handover Approver</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue={item.taskStatus}\r\n                  onChange={(e) => setHandoverChangeApprover(e.target.value)}\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  {mobitelUsersName.map((user) => (\r\n                    <option key={user._id} value={user._id}>\r\n                      {user.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Row>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleSubmit}>\r\n                Request approval\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n\r\n          <Row>\r\n            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n              <Form.Label>Change Status</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue={item.taskStatus}\r\n                onChange={(e) => setStatus(e.target.value)}\r\n              >\r\n                <option hidden value={item.taskStatus}>\r\n                  {item.taskStatus}\r\n                </option>\r\n                <option value=\"Withdraw\">Withdraw</option>\r\n                {item?.taskStatus == \"Hold\" ? (\r\n                  <option value={continuesStatus}>Continue...</option>\r\n                ) : (\r\n                  <option value=\"Hold\">Hold</option>\r\n                )}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n              <Form.Label> Change Handover Approver</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue={item.taskStatus}\r\n                onChange={(e) => setHandoverChangeApprover(e.target.value)}\r\n              >\r\n                <option value=\"\">Choose...</option>\r\n                {mobitelUsersName.map((user) => (\r\n                  <option key={user._id} value={user._id}>\r\n                    {user.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n              <Form.Label>Reason for the Status Change</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={commentStatus}\r\n                onChange={(e) => setCommentStatus(e.target.value)}\r\n                isInvalid={!!errors.commentStatus}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please provide comment\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group className=\"m-3\" controlId=\"refid\" as={Col}>\r\n              <Form.Label>Project Manager</Form.Label>\r\n              {\" - \" + projectManager}\r\n            </Form.Group>\r\n          </Row>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={changeStatus}\r\n            disabled={item.taskStatus === status}\r\n          >\r\n            Change Status\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={alertClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={alertClose} severity={severity} sx={{ width: \"100%\" }}>\r\n          {alart}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RequestHandoverChangesBody);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["Alert","React","props","ref","elevation","variant","EXTENSIONS","withRouter","useState","items","setItems","item","setItem","properties","setProperties","headerProperties","setHeaderProperties","open","setOpen","severity","setSeverity","alart","setAlart","comment","setComment","commentStatus","setCommentStatus","status","setStatus","continuesStatus","setContinuesStatus","errors","setErrors","newProperties","setNewProperties","setProjectsData","headersConfig","setHeadersConfig","rates","setRates","openDialog","setOpenDialog","mobitelUsersName","setMobitelUsersName","changeHandoverApprover","setHandoverChangeApprover","projectManager","setProjectManager","handoverChangeApproverName","setHandoverChangeApproverName","handleChange","e","index","target","value","singleTask","setSingleTask","bulkTask","setBulkTask","fileRef","useRef","handleClose","bulkHandleClose","axiosInstance","axios","baseURL","process","useEffect","getMobitelUserName","getData","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","data","projTemplates","catch","err","console","log","setHandoverChangeApproverfunction","map","user","name","_id","tasks","filter","x","taskStatus","HandoverChangeApproverName","forEach","obj","findFormErrors","newErrors","arrayEquals","a","b","Array","isArray","length","every","val","alertClose","event","reason","convertToJson","fileData","rows","row","i","rowData","element","push","getExtention","file","parts","split","extension","includes","columns","field","headerName","width","valueGetter","align","renderCell","cellValues","style","onClick","assignedProjectManager","getProjectManager","taskHistory","handleSingleTask","className","xs","type","height","getRowId","pageSize","rowsPerPageOptions","rowHeight","headerHeight","components","Toolbar","GridToolbar","show","onHide","animation","dialogClassName","closeButton","as","Col","onChange","files","reader","FileReader","onload","bstr","result","workBook","XLSX","workSheetName","SheetNames","workSheet","Sheets","header","iserror","msg","temp","it","taskRef","slice","siteID","siteName","current","minWidth","flex","splice","readAsBinaryString","alert","isInvalid","id","controlId","Object","keys","prop","post","existingProperties","project","subProject","taskRefID","put","taskObject","size","headerProperty","readOnly","defaultValue","changeHandOverUser","hidden","findFormErrorsStatus","disabled","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","_excluded","Container","_ref","bsPrefix","fluid","_ref$as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","_extends","classNames","displayName","defaultProps"],"sourceRoot":""}