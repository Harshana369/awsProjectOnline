{"version":3,"file":"static/js/1913.8ecd3ec5.chunk.js","mappings":"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","sources":["components/SubconAllocationBody.jsx","../node_modules/form-data/lib/browser.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport XLSX from \"xlsx\";\r\nimport FormData from \"form-data\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nlet selectedMobitelOfficer = null;\r\nlet selectedSubcon = null;\r\n\r\nfunction SubconAllocationBody(props) {\r\n  console.log(props.location.data);\r\n  let [users, setUsers] = useState([]);\r\n  let [subconUsers, setSubconUsers] = useState([]);\r\n  let [companies, setCompanies] = useState([]);\r\n  let [approvalPath, setApprovalPath] = useState([]);\r\n  let [verificationOne, setVerificationOne] = useState([]);\r\n  let [verificationTwo, setVerificationTwo] = useState([]);\r\n  let [approval, setApproval] = useState([]);\r\n  let [msg, setMsg] = useState(\"\");\r\n  let [variant, setVariant] = useState(\"\");\r\n  let [projects, setProjects] = useState([]);\r\n  let [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [isBoqRequired, setIsBoqRequired] = useState(true); // Default value is 'true'\r\n  const axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  });\r\n\r\n  let [form, setForm] = useState({});\r\n  let [tasks, setTasks] = useState([]);\r\n  let [errors, setErrors] = useState({});\r\n  let [open, setOpen] = useState(false);\r\n  let [openDialog, setOpenDialog] = useState(false);\r\n\r\n  let setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n     // Get Assign Officer and Subcon Names to the Task History\r\n     const temp1 = users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0]\r\n     const temp2 = companies.filter((obj) => (obj._id === form.assignedSubcon))[0]\r\n \r\n     if(temp1,temp2){\r\n             selectedMobitelOfficer = temp1.name   \r\n             selectedSubcon = temp2.companyName           \r\n     }  \r\n\r\n  const findFormErrors = () => {\r\n    const {\r\n      plannedTaskStartDate,\r\n      targetTaskComDate,\r\n      taskAssignedDiv,\r\n      assignedMobitelOfficer,\r\n      workScope,\r\n      assignedSubcon,\r\n      verificationOneId,\r\n      approvalId,\r\n    } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!plannedTaskStartDate || plannedTaskStartDate === \"\")\r\n      newErrors.plannedTaskStartDate = \"cannot be blank!\";\r\n    else if (new Date(plannedTaskStartDate).getTime() <= new Date().getTime())\r\n      newErrors.plannedTaskStartDate = \"Select a correct date!\";\r\n    if (!targetTaskComDate || targetTaskComDate === \"\")\r\n      newErrors.targetTaskComDate = \"cannot be blank!\";\r\n    else if (\r\n      new Date(targetTaskComDate).getTime() <= new Date().getTime() ||\r\n      new Date(targetTaskComDate).getTime() <=\r\n        new Date(plannedTaskStartDate).getTime()\r\n    )\r\n      newErrors.targetTaskComDate = \"Select a correct date!\";\r\n    if (\r\n      !taskAssignedDiv ||\r\n      taskAssignedDiv === \"\" ||\r\n      taskAssignedDiv === \"Choose...\"\r\n    )\r\n      newErrors.taskAssignedDiv = \"Choose a division!\";\r\n    if (\r\n      !assignedMobitelOfficer ||\r\n      assignedMobitelOfficer === \"\" ||\r\n      assignedMobitelOfficer === \"Choose...\"\r\n    )\r\n      newErrors.assignedMobitelOfficer = \"Choose a Mobitel Officer!\";\r\n    if (!workScope || workScope === \"\")\r\n      newErrors.workScope = \"cannot be blank!\";\r\n    if (!assignedSubcon || assignedSubcon === \"\")\r\n      newErrors.assignedSubcon = \"Choose a Subcontractor!\";\r\n    // if (!verificationOneId || verificationOneId === \"\")\r\n    //   newErrors.verificationOneId = \"Choose a officer!\";\r\n    // if (!approvalId || approvalId === \"\")\r\n    //   newErrors.approvalId = \"Choose a officer!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"projonline/users\", {\r\n        headers: {\r\n          token:\r\n            \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data.users)\r\n        setTasks(props.location.data);\r\n        setSubconUsers(\r\n          res.data.users.filter((obj) => obj.company.companyName !== \"Mobitel\")\r\n        );\r\n        setUsers(\r\n          res.data.users.filter((obj) => obj[\"userCanAssignForTask\"] === true)\r\n        );\r\n\r\n        setCompanies(\r\n          res.data.companys.filter((obj) => obj.companyName !== \"Mobitel\")\r\n        );\r\n        setApprovalPath(res.data.users);\r\n\r\n        setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n        setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n        setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n        setForm({\r\n          taskAssignedDiv: props.location.data[0].taskAssignedDiv,\r\n        });\r\n\r\n        //get available project templates\r\n        setProjects(res.data.projects);\r\n        console.log(\"---\");\r\n        console.log(res.data.projects);\r\n        console.log(\"---\");\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const downloadHandover = (e) => {\r\n    //Create Downloadable excel file\r\n    var workbook = XLSX.utils.book_new();\r\n    var aoa_projects = [];\r\n\r\n    //get selected projects\r\n    var selectedProjects = [\r\n      ...new Set(props.location.data.map((ele) => ele.projectID)),\r\n    ];\r\n    var selectedProjectsHeaderData = [];\r\n\r\n    for (var i = 0; i < projects.length; i++) {\r\n      for (var j = 0; j < selectedProjects.length; j++) {\r\n        // console.log(projects[i])\r\n        if (selectedProjects[j] === projects[i].projectID) {\r\n          var worksheetData = [];\r\n\r\n          worksheetData = props.location.data\r\n            .filter((ele) => ele.projectID === selectedProjects[j])\r\n            .map((ele) => ele.properties);\r\n          worksheetData.unshift(projects[i].properties);\r\n          // console.log(worksheetData)\r\n          var ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n          XLSX.utils.book_append_sheet(\r\n            workbook,\r\n            ws,\r\n            projects[i].subProject + \"_\" + projects[i].projectID\r\n          );\r\n        }\r\n      }\r\n    }\r\n    XLSX.writeFile(workbook, \"Handover details.xlsx\");\r\n    // console.log(workbook)\r\n  };\r\n\r\n  const smsFetch = async (mobileNo, msg) => {\r\n    // console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\r\n    const url =\r\n      \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\";\r\n    const Body = {\r\n      username: \"smsdigisvc_sci\",\r\n      password: \"Sci@#25\",\r\n      from: \"Mobitel-PMS\",\r\n      to: \"0\" + mobileNo.toString(),\r\n      text: \"New \" + tasks.length + msg,\r\n      mesageType: 0,\r\n    };\r\n    //console.log(JSON.parse(localStorage.getItem(\"user\")))\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Body),\r\n      mode: \"no-cors\",\r\n    };\r\n    const response = await fetch(url, requestOptions);\r\n    // console.log(response)\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      var uploadfiles = new FormData();\r\n\r\n      for (var x = 0; x < selectedFiles.length; x++) {\r\n        uploadfiles.append(\"files\", selectedFiles[x]);\r\n      }\r\n\r\n      var taskApprovalPath = [\r\n        {\r\n          approvalLevel: \"Verification Level 0\",\r\n          assignedOfficer: form.assignedMobitelOfficer,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 1\",\r\n          assignedOfficer: form.verificationOneId,\r\n        },\r\n        {\r\n          approvalLevel: \"Verification Level 2\",\r\n          assignedOfficer: form.verificationTwoId,\r\n        },\r\n        { approvalLevel: \"Final approval\", assignedOfficer: form.approvalId },\r\n      ].filter((element) => element.assignedOfficer != \"\");\r\n\r\n      const taskObject = {\r\n        plannedTaskStartDate: form.plannedTaskStartDate,\r\n        targetTaskComDate: form.targetTaskComDate,\r\n        taskAssignedDiv: form.taskAssignedDiv,\r\n        assignedMobitelOfficer: form.assignedMobitelOfficer,\r\n        workScope: form.workScope,\r\n        assignedSubcon: form.assignedSubcon,\r\n        taskStatus: \"Subcon allocated\",\r\n        approvalPath: taskApprovalPath,\r\n        boqprojectrequirement: isBoqRequired,\r\n      };\r\n\r\n      setOpenDialog(true);\r\n      axiosInstance\r\n        .post(\"projonline/upload\", uploadfiles, {\r\n          headers: {\r\n            token:\r\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            \"Content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res1) => {\r\n          // console.log(res1)\r\n          taskObject.files = res1.data;\r\n          //props.history.push({pathname:'/initiateSubconAllocationBody', data: {msg,variant}})\r\n          axiosInstance\r\n            .post(\r\n              \"projonline/update\",\r\n              {\r\n                tasks,\r\n                taskObject,\r\n                taskHistory: { taskStatus: taskObject.taskStatus, comment: \"Officer: \"+selectedMobitelOfficer+\" || \"+\"Subcon: \"+selectedSubcon },\r\n              },\r\n              {\r\n                headers: {\r\n                  token:\r\n                    \"Bearer \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n                },\r\n              }\r\n            )\r\n            .then((res) => {\r\n              // console.log(res.statusText)\r\n              //setOpenDialog(true)\r\n              smsFetch(\r\n                users.filter(\r\n                  (obj) => obj._id === form.assignedMobitelOfficer\r\n                )[0].mobileNo,\r\n                \" task/s were assigned to you.\"\r\n              );\r\n              subconUsers.forEach((ele) => {\r\n                if (ele.company._id === form.assignedSubcon) {\r\n                  smsFetch(\r\n                    ele.mobileNo,\r\n                    \" task/s were handedover to \" + ele.company.companyName\r\n                  );\r\n                }\r\n              });\r\n\r\n              setTimeout(() => {\r\n                setMsg(res.data.msg);\r\n                setVariant(res.data.variant);\r\n                setOpen(true);\r\n              }, 2000);\r\n\r\n              setTimeout(() => {\r\n                setOpenDialog(false);\r\n                setOpen(false);\r\n                setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n                setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n                setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n                setTasks([]);\r\n                setForm({\r\n                  plannedTaskStartDate: \"\",\r\n                  targetTaskComDate: \"\",\r\n                  taskAssignedDiv: \"\",\r\n                  verificationOneId: \"\",\r\n                  verificationTwoId: \"\",\r\n                  approvalId: \"\",\r\n                  assignedMobitelOfficer: \"\",\r\n                  workScope: \"\",\r\n                  assignedSubcon: \"\",\r\n                  approvalType: \"Default\",\r\n                  isBoqRequired: isBoqRequired,\r\n                });\r\n                props.history.push({\r\n                  pathname: \"/initiateSubconAllocationBody\",\r\n                });\r\n              }, 5000);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Upload Files\r\n  const onChangeFiles = (e) => {\r\n    setSelectedFiles(e.target.files);\r\n    // console.log(e.target.files)\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  //Assigned Mobitel Officer Handler\r\n  const onChangeAssignedMobitelOfficer = (e) => {\r\n    if (e.target.value === \"Choose...\") {\r\n      setField(\"assignedMobitelOfficer\", e.target.value);\r\n      setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n      setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n      setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n    }\r\n\r\n    for (let i = 0; i < approvalPath.length; i++) {\r\n      if (approvalPath[i]._id === e.target.value) {\r\n        // console.log(e.target.value)\r\n        // console.log(form)\r\n\r\n        switch (approvalPath[i].approvalPath.length) {\r\n          case 0:\r\n            setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: \"\",\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 1:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setField(\"verificationOneId\", approvalPath[i].approvalPath[0]._id);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n            setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: \"\",\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n          case 2:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: \"\",\r\n              approvalId: approvalPath[i].approvalPath[1]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n            break;\r\n          case 3:\r\n            setVerificationOne([\r\n              {\r\n                _id: approvalPath[i].approvalPath[0]._id,\r\n                name: approvalPath[i].approvalPath[0].name,\r\n              },\r\n            ]);\r\n            setVerificationTwo([\r\n              {\r\n                _id: approvalPath[i].approvalPath[1]._id,\r\n                name: approvalPath[i].approvalPath[1].name,\r\n              },\r\n            ]);\r\n            setApproval([\r\n              {\r\n                _id: approvalPath[i].approvalPath[2]._id,\r\n                name: approvalPath[i].approvalPath[2].name,\r\n              },\r\n            ]);\r\n            setForm({\r\n              ...form,\r\n              verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n              verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n              approvalId: approvalPath[i].approvalPath[2]._id,\r\n              assignedMobitelOfficer: e.target.value,\r\n              approvalType: \"Default\",\r\n            });\r\n            if (!!errors[\"assignedMobitelOfficer\"])\r\n              setErrors({\r\n                ...errors,\r\n                assignedMobitelOfficer: null,\r\n              });\r\n\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Approval Path Handler\r\n  const onChangeApprovalType = (e) => {\r\n    // console.log(e.target.value)\r\n    // console.log(form.approvalType)\r\n\r\n    if (e.target.value === \"New\") {\r\n      let mobitelUsers = approvalPath.filter(\r\n        (obj) => obj.company.companyName === \"Mobitel\"\r\n      );\r\n      setVerificationOne(mobitelUsers);\r\n      setVerificationTwo(mobitelUsers);\r\n      setApproval(mobitelUsers);\r\n      setForm({\r\n        ...form,\r\n        verificationOneId: mobitelUsers[0]._id,\r\n        verificationTwoId: mobitelUsers[0]._id,\r\n        approvalId: mobitelUsers[0]._id,\r\n        approvalType: e.target.value,\r\n      });\r\n      if (!!errors[\"approvalType\"])\r\n        setErrors({\r\n          ...errors,\r\n          assignedMobitelOfficer: null,\r\n        });\r\n    } else if (e.target.value === \"Default\") {\r\n      for (let i = 0; i < approvalPath.length; i++) {\r\n        if (approvalPath[i]._id === form.assignedMobitelOfficer) {\r\n          switch (approvalPath[i].approvalPath.length) {\r\n            case 0:\r\n              setVerificationOne([{ _id: \"\", name: \"Choose...\" }]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: \"\",\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 1:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setField(\r\n                \"verificationOneId\",\r\n                approvalPath[i].approvalPath[0]._id\r\n              );\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose...\" }]);\r\n              setApproval([{ _id: \"\", name: \"Choose...\" }]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: \"\",\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n            case 2:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([{ _id: \"\", name: \"Choose....\" }]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: \"\",\r\n                approvalId: approvalPath[i].approvalPath[1]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n              break;\r\n            case 3:\r\n              setVerificationOne([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[0]._id,\r\n                  name: approvalPath[i].approvalPath[0].name,\r\n                },\r\n              ]);\r\n              setVerificationTwo([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[1]._id,\r\n                  name: approvalPath[i].approvalPath[1].name,\r\n                },\r\n              ]);\r\n              setApproval([\r\n                {\r\n                  _id: approvalPath[i].approvalPath[2]._id,\r\n                  name: approvalPath[i].approvalPath[2].name,\r\n                },\r\n              ]);\r\n              setForm({\r\n                ...form,\r\n                verificationOneId: approvalPath[i].approvalPath[0]._id,\r\n                verificationTwoId: approvalPath[i].approvalPath[1]._id,\r\n                approvalId: approvalPath[i].approvalPath[2]._id,\r\n                approvalType: e.target.value,\r\n              });\r\n              if (!!errors[\"approvalType\"])\r\n                setErrors({\r\n                  ...errors,\r\n                  approvalType: null,\r\n                });\r\n\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Content Wrapper. Contains page content */}\r\n      <div className=\"content-wrapper\">\r\n        {/* Content Header (Page header) */}\r\n        <div className=\"content-header\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>Initiate Sub-Contractor Allocation</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* /.container-fluid */}\r\n          </section>\r\n        </div>\r\n        {/* /.content-header */}\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <form onSubmit={onSubmit} enctype=\"multipart/form-data\">\r\n              <div>\r\n                <Row>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Ref</th>\r\n                        <th>Site ID</th>\r\n                        <th>Site Name</th>\r\n                        <th>Task Assigned Div</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tasks.map((item) => (\r\n                        <tr>\r\n                          <td>{item.taskRef}</td>\r\n                          <td>{item.siteID}</td>\r\n                          <td>{item.siteName}</td>\r\n                          <td>{item.taskAssignedDiv}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </div>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Commencement Date</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"plannedTaskStartDate\", e.target.value)\r\n                    }\r\n                    value={form.plannedTaskStartDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.plannedTaskStartDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.plannedTaskStartDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Planned Work Completion Date</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"targetTaskComDate\", e.target.value)\r\n                    }\r\n                    value={form.targetTaskComDate}\r\n                    className=\"col-md-9\"\r\n                    type=\"date\"\r\n                    isInvalid={!!errors.targetTaskComDate}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.targetTaskComDate}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}></Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Task Assigned Division</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) =>\r\n                      setField(\"taskAssignedDiv\", e.target.value)\r\n                    }\r\n                    value={form.taskAssignedDiv}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.taskAssignedDiv}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option>Project_Radio</option>\r\n                    <option>Project_Core</option>\r\n                    <option>Project_TX</option>\r\n                    <option>Project_IBS</option>\r\n                    <option>Project_WiFi</option>\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.taskAssignedDiv}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned Officer</Form.Label>\r\n                  <Form.Control\r\n                    onChange={onChangeAssignedMobitelOfficer}\r\n                    as=\"select\"\r\n                    value={form.assignedMobitelOfficer}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedMobitelOfficer}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {users.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedMobitelOfficer}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Approval Path</Form.Label>\r\n                  <Form.Control\r\n                    onChange={onChangeApprovalType}\r\n                    as=\"select\"\r\n                    value={form.approvalType}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.name}\r\n                  >\r\n                    <option>Default</option>\r\n                    <option>New</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 1)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationOneId\", e.target.value)\r\n                    }\r\n                    value={form.verificationOneId}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.verificationOneId}\r\n                  >\r\n                    {verificationOne.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.verificationOneId}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Verification by (Level 2)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) =>\r\n                      setField(\"verificationTwoId\", e.target.value)\r\n                    }\r\n                    value={form.verificationTwoId}\r\n                    defaultValue=\"Choose...\"\r\n                  >\r\n                    {verificationTwo.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Approval by</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => setField(\"approvalId\", e.target.value)}\r\n                    value={form.approvalId}\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.approvalId}\r\n                  >\r\n                    {approval.map((opt) => (\r\n                      <option value={opt._id}>{opt.name}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.approvalId}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>High level work scope</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"workScope\", e.target.value)}\r\n                    value={form.workScope}\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"\"\r\n                    isInvalid={!!errors.workScope}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.workScope}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Assigned subcontractor</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => setField(\"assignedSubcon\", e.target.value)}\r\n                    value={form.assignedSubcon}\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    isInvalid={!!errors.assignedSubcon}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    {companies.map((opt) => (\r\n                      <option value={opt._id}>{opt.companyName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.assignedSubcon}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Handover Details</Form.Label>\r\n                  <br />\r\n                  <Button\r\n                    onClick={downloadHandover}\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Click to Download\r\n                  </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label> Boq project requirement</Form.Label>\r\n                  <Form.Check\r\n                    onChange={(e) => setIsBoqRequired(!isBoqRequired)}\r\n                    value={isBoqRequired}\r\n                    checked={isBoqRequired}\r\n                    className=\"col-md-9\"\r\n                    id=\"custom-switch-3\"\r\n                    type=\"switch\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Upload Supporting Documents</Form.Label>\r\n                  <br />\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={onChangeFiles}\r\n                    size=\"lg\"\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Assign Subcontractor\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity={variant} sx={{ width: \"100%\" }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(SubconAllocationBody);\r\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Alert","React","props","ref","elevation","variant","selectedMobitelOfficer","selectedSubcon","withRouter","console","log","location","data","useState","users","setUsers","subconUsers","setSubconUsers","companies","setCompanies","approvalPath","setApprovalPath","verificationOne","setVerificationOne","verificationTwo","setVerificationTwo","approval","setApproval","msg","setMsg","setVariant","projects","setProjects","selectedFiles","setSelectedFiles","isBoqRequired","setIsBoqRequired","axiosInstance","axios","baseURL","process","form","setForm","tasks","setTasks","errors","setErrors","open","setOpen","openDialog","setOpenDialog","setField","field","value","temp1","filter","obj","_id","assignedMobitelOfficer","temp2","assignedSubcon","name","companyName","useEffect","get","headers","token","JSON","parse","localStorage","getItem","accessToken","then","res","company","companys","taskAssignedDiv","catch","err","smsFetch","mobileNo","Body","username","password","from","to","toString","text","length","mesageType","requestOptions","method","body","stringify","mode","fetch","handleClose","event","reason","className","onSubmit","e","preventDefault","newErrors","plannedTaskStartDate","targetTaskComDate","workScope","verificationOneId","approvalId","Date","getTime","findFormErrors","Object","keys","uploadfiles","FormData","x","append","taskApprovalPath","approvalLevel","assignedOfficer","verificationTwoId","element","taskObject","taskStatus","boqprojectrequirement","post","res1","files","taskHistory","comment","forEach","ele","setTimeout","approvalType","history","push","pathname","error","enctype","striped","bordered","hover","size","map","item","taskRef","siteID","siteName","as","Col","onChange","target","type","isInvalid","defaultValue","i","opt","mobitelUsers","rows","placeholder","onClick","workbook","XLSX","selectedProjects","Set","projectID","j","worksheetData","properties","unshift","ws","subProject","checked","id","multiple","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","display","module","exports","self","window","_excluded","Table","_ref","bsPrefix","borderless","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}