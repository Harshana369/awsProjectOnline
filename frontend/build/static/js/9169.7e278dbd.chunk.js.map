{"version":3,"file":"static/js/9169.7e278dbd.chunk.js","mappings":"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","sources":["components/CommenceNewSpecificTaskBody.jsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React, {useState, useEffect, useCallback }  from 'react'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n//import { Button } from '@mui/material';\nimport Button from '@material-ui/core/Button'\nimport { Form, Row, Col} from 'react-bootstrap';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport XLSX from 'xlsx'\nimport { saveAs } from 'file-saver'\nimport { DataGrid, GridToolbar} from '@mui/x-data-grid';\nimport Dialog from '@mui/material/Dialog';\nimport Box from '@mui/material/Box';\nimport DialogContent from '@mui/material/DialogContent';\nimport CircularProgress from '@mui/material/CircularProgress'\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n\n\nfunction CommenceNewSpecificTaskBody(props) {\n\n    let [users, setUsers] = useState([]);\n    let [companies, setCompanies] = useState([]);\n    let [severity, setSeverity] = useState(\"\");\n    let [alart, setAlart] = useState(\"\");\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_BACKEND_URL,\n    })\n    \n    let [form, setForm] = useState({})\n    let [errors, setErrors] = useState({})\n    let [open, setOpen] = useState(false);\n    let [openDialog, setOpenDialog] = useState(false);\n\n    let setField = (field, value) => {\n    setForm({\n            ...form,\n            [field]: value\n        })\n        if ( !!errors[field] ) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n    \n    const findFormErrors = () => {\n        const { taskassignedSubconOfficer, taskassignedMobileNo, taskCommencedComment} = form\n        const newErrors = {}\n        // name errors\n        if ( !taskassignedSubconOfficer || taskassignedSubconOfficer === '' ) newErrors.taskassignedSubconOfficer = 'cannot be blank!'\n        if ( !taskassignedMobileNo || taskassignedMobileNo === '' ) newErrors.taskassignedMobileNo = 'cannot be blank!'\n        if ( !taskCommencedComment || taskCommencedComment === '' ) newErrors.taskCommencedComment = 'cannot be blank!'\n\n\n        return newErrors\n    }\n\n    \n    useEffect(() => {\n        // console.log(props.location.data.row.assignedSubcon)\n        setUsers([{name:props.location.data.row.assignedMobitelOfficer.name}])\n        setCompanies([{companyName:props.location.data.row.assignedSubcon.companyName}])\n        setForm({\n                'taskRef':props.location.data.row.taskRef,\n                'siteID':props.location.data.row.siteID,\n                'siteName':props.location.data.row.siteName,\n                'plannedTaskStartDate':props.location.data.row.plannedTaskStartDate.split('T')[0],\n                'targetTaskComDate':props.location.data.row.targetTaskComDate.split('T')[0],\n                'taskAssignedDiv':props.location.data.row.taskAssignedDiv,\n                'assignedMobitelOfficer': props.location.data.row.assignedMobitelOfficer.name,\n                'workScope':props.location.data.row.workScope,\n                'assignedSubcon': props.location.data.row.assignedSubcon.companyName,\n                'taskassignedSubconOfficer': props.location.data.row.taskassignedSubconOfficer,\n                'taskassignedMobileNo': props.location.data.row.taskassignedMobileNo\n            })\n\n    } , [ ] )\n\n    const downloadHandover = (e)=>{\n        //Create Downloadable excel file\n        var workbook = XLSX.utils.book_new();\n        var aoa_projects = []\n\n        //get selected projects\n        //console.log(props.location.data)\n\n        var worksheetData = []\n\n        worksheetData.push(props.location.data.row.properties)\n        worksheetData.unshift(props.location.data.row.headerProperties)\n        //console.log(worksheetData)\n        var ws = XLSX.utils.aoa_to_sheet(worksheetData);\n        XLSX.utils.book_append_sheet(workbook, ws, \"HO Details\");\n        \n        XLSX.writeFile(workbook, props.location.data.row.siteID+\"_Handover details.xlsx\")\n        // console.log(workbook)\n\n    }\n\n        //File download table\n        const columns = [\n            { field: 'id', headerName: 'File Name', width: 350 },\n            { field: \"Download File\", width:200,\n                renderCell: (cellValues) => {\n                    return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(event) => {\n                            downloadFiles(event, cellValues);\n                        }}\n                    >\n                        Click to Download\n                    </Button>\n                    );\n                }\n            }\n    \n            ];\n    \n        async function downloadFiles(event, cellValues) {\n            // console.log(cellValues.row.id)\n            const { data } = await getFiles(cellValues.row.id)\n            const blob = new Blob([data])\n            saveAs(blob, cellValues.row.id)\n          }\n          \n        const getFiles=(e)=> {\n        // console.log(e)\n        return axiosInstance.get('projonline/file/'+e, {\n            headers: {\n            token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken,\n            'Content-Type': 'multipart/form-data'\n            },\n            responseType: 'arraybuffer',\n            withCredentials: true\n        })\n        }\n\n        const smsFetch = async (mobileNo) => {\n            //console.log(users.filter((obj) => (obj._id === form.assignedMobitelOfficer))[0].mobileNo)\n            const url = \"https://msmsenterpriseapi.mobitel.lk/EnterpriseSMSV3/esmsproxyURL.php\"\n            const Body ={\n                \"username\" : \"smsdigisvc_sci\", \n                \"password\" : \"Sci@#25\", \n                \"from\": \"Mobitel-PMS\", \n                \"to\": \"0\"+mobileNo, \n                \"text\": \"Task ID:\"+form.taskRef+\" task is commenced now and assigned to you.\",\n                \"mesageType\":0\n            }\n            //console.log(JSON.parse(localStorage.getItem(\"user\")))\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify(Body),\n                mode: 'no-cors'\n            };\n            try{\n                const response = await fetch(url,requestOptions);\n                // console.log(response)\n            }catch(err){\n                console.log(err)\n            }\n            \n    \n        };\n\n    const onAccept=(e)=> {\n        e.preventDefault()\n\n        const newErrors = findFormErrors()\n        // Conditional logic:\n        if ( Object.keys(newErrors).length > 0 ) {\n            // We got errors!\n            setErrors(newErrors)\n        } else {\n            const taskObject = {\n                taskassignedSubconOfficer: form.taskassignedSubconOfficer,\n                taskassignedMobileNo: form.taskassignedMobileNo,\n                taskStatus: 'Task commenced'\n            };\n\n            // console.log(form.assignedMobitelOfficer)\n\n            axiosInstance.put('projonline/update/'+props.location.data.row._id, {taskObject,taskHistory:{taskStatus: 'Task commenced', comment: form.taskCommencedComment}},{headers:{token:\"Bearer \"+ JSON.parse(localStorage.getItem(\"user\")).accessToken}})\n                .then((res) => {\n                    // console.log(res.data)\n\n                    setOpenDialog(true)\n                    smsFetch(form.taskassignedMobileNo)\n                    setTimeout(() => {\n                        setAlart(res.data.alart)\n                        setSeverity(res.data.severity)\n                        setOpen(true)\n                    }, 2000)\n                    \n                    setTimeout(() => {\n                        setOpenDialog(false)\n                        setOpen(false)\n                        props.history.push({pathname:'/commenceNewTasks'})\n                    }, 5000)\n\n                }).catch((error) => {\n                    console.log(error)\n                });\n            }\n\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    \n    \n\n    return (\n        <div>\n            \n                        {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <div className=\"content-header\">\n            <section className=\"content-header\">\n                    <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                        <h1>Commence Task ID: {form.taskRef} </h1>\n                        </div>\n                    </div>\n                    </div>{/* /.container-fluid */}\n                </section>\n            </div>\n            {/* /.content-header */}\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                <Form >\n                    \n                    <Row>\n                        <Form.Group as={Col} >\n                            <Form.Label>Site ID</Form.Label>\n                            <Form.Control disabled value = {form.siteID} className=\"col-md-9\" type=\"text\" placeholder=\"Enter site ID\" isInvalid={ !!errors.siteID }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.siteID }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                            <Form.Label>Site Name</Form.Label>\n                            <Form.Control  disabled value = {form.siteName} type=\"text\" placeholder=\"Enter site Name\" isInvalid={ !!errors.siteName }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.siteName }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"\">\n                        </Form.Group>\n\n                    </Row>\n                    \n\n                    <Row className=\"mb-3\">\n                        <Form.Group as={Col} >\n                            <Form.Label>Planned Work Commencement Date</Form.Label>\n                            <Form.Control disabled value = {form.plannedTaskStartDate}  className=\"col-md-9\" type=\"date\" isInvalid={ !!errors.plannedTaskStartDate }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.plannedTaskStartDate }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                        <Form.Label>Planned Work Completion Date</Form.Label>\n                        <Form.Control disabled value = {form.targetTaskComDate} className=\"col-md-9\" type=\"date\" isInvalid={ !!errors.targetTaskComDate }/>\n                        <Form.Control.Feedback type='invalid'>\n                                { errors.targetTaskComDate }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                        \n                        </Form.Group>\n                    </Row>\n                    <Row>\n                        <Form.Group as={Col} >\n                            <Form.Label>Task Assigned Division</Form.Label>\n                            <Form.Control disabled value = {form.taskAssignedDiv} as=\"select\" defaultValue=\"Choose...\" isInvalid={ !!errors.taskAssignedDiv }>\n                                <option>Choose...</option>\n                                <option>Project_Radio</option>\n                                <option>Project_Core</option>\n                                <option>Project_TX</option>\n                                <option>Project_IBS</option>\n                                <option>Project_WiFi</option>\n                            </Form.Control>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.taskAssignedDiv }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                            <Form.Label>Assigned Mobitel Officer</Form.Label>\n                            <Form.Control disabled as=\"select\" value = {form.assignedMobitelOfficer} defaultValue=\"Choose...\" isInvalid={ !!errors.assignedMobitelOfficer }>\n                                <option>Choose...</option>\n                                {users.map(opt => (\n                                    <option value={opt._id}>{opt.name}</option>\n                                ))}\n                            </Form.Control>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.assignedMobitelOfficer }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n\n                        </Form.Group>\n\n                    </Row>\n                    \n                    <Row>\n                        <Form.Group as={Col} >\n                            <Form.Label>High level work scope</Form.Label>\n                            <Form.Control disabled value={form.workScope}  as=\"textarea\" rows={2}  placeholder=\"\" isInvalid={ !!errors.workScope } />\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.workScope }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                    </Row>\n                    \n\n\n                    <Row className=\"mb-3\">\n\n                    <Form.Group as={Col} >\n                        <Form.Label>Assigned subcontractor</Form.Label>\n                        <Form.Control disabled value={form.assignedSubcon} as=\"select\" defaultValue=\"Choose...\" isInvalid={ !!errors.assignedSubcon } >\n                            <option>Choose...</option>\n                            {companies.map(opt => (\n                                    <option value={opt._id}>{opt.companyName}</option>\n                            ))}\n                        </Form.Control>\n                        <Form.Control.Feedback type='invalid'>\n                                { errors.assignedSubcon }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                        <Form.Label>Handover Details</Form.Label>\n                            <br />\n                                <Button onClick={downloadHandover} color=\"primary\" variant=\"contained\">\n                                    Click to Download\n                                </Button>\n                        \n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                        </Form.Group>\n                    </Row>\n\n                    <Row>\n                        <Form.Group as={Col} >\n                        <Form.Label>Download other supporting docs</Form.Label>\n                        <div style={{ height: 200, width: '50%' }}>\n                            <DataGrid\n                                //getRowId={(file)=>file.fileName}\n                                rows={props.location.data.row.files.map(ele=>{return{\"id\":ele}})}\n                                columns={columns}\n                                pageSize={3}\n                                rowsPerPageOptions={[3]}\n                                rowHeight={30}\n                                headerHeight= {40}\n                            />\n                            \n                        </div>\n                        </Form.Group>\n\n                    </Row>\n\n                    <Row>\n                        <Form.Group as={Col} >\n                            <Form.Label>Task Assigned Subcon Officer</Form.Label>\n                            <Form.Control onChange={ e => setField('taskassignedSubconOfficer', e.target.value) } value = {form.taskassignedSubconOfficer} className=\"col-md-9\" type=\"text\" placeholder=\"Enter name\" isInvalid={ !!errors.taskassignedSubconOfficer }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.taskassignedSubconOfficer }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                            <Form.Label>Mobile Number</Form.Label>\n                            <Form.Control  onChange={ e => setField('taskassignedMobileNo', e.target.value) } className=\"col-md-9\" value = {form.taskassignedMobileNo} type=\"tel\" maxLength = \"9\" placeholder=\"Enter mobile number\" isInvalid={ !!errors.taskassignedMobileNo }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.taskassignedMobileNo }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} >\n                        </Form.Group>\n\n                    </Row>\n                    <Row>\n\n                        <Form.Group as={Col} >\n                            <Form.Label>Comments</Form.Label>\n                            <Form.Control  onChange={ e => setField('taskCommencedComment', e.target.value) }  as=\"textarea\" rows={2} value = {form.taskCommencedComment}  placeholder=\"Enter your comments\" isInvalid={ !!errors.taskCommencedComment }/>\n                            <Form.Control.Feedback type='invalid'>\n                                { errors.taskCommencedComment }\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                    </Row>\n                    \n                    <Button color=\"primary\" variant=\"contained\" onClick={onAccept}>\n                            Task commenced\n                    </Button>\n                       \n                    \n                </Form>\n                </div>{/* /.container-fluid */}\n            </section>\n            {/* /.content */}\n            \n            \n            </div>\n\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n                <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }} >\n                    {alart}\n                </Alert>\n            </Snackbar>\n            <Dialog\n                open={openDialog}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <Box sx={{ display: 'flex' }}>\n                        <CircularProgress />\n                    </Box>\n\n                    \n                </DialogContent>\n            </Dialog>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(CommenceNewSpecificTaskBody)","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["Alert","React","props","ref","elevation","variant","withRouter","useState","users","setUsers","companies","setCompanies","severity","setSeverity","alart","setAlart","axiosInstance","axios","baseURL","process","form","setForm","errors","setErrors","open","setOpen","openDialog","setOpenDialog","setField","field","value","useEffect","name","location","data","row","assignedMobitelOfficer","companyName","assignedSubcon","taskRef","siteID","siteName","plannedTaskStartDate","split","targetTaskComDate","taskAssignedDiv","workScope","taskassignedSubconOfficer","taskassignedMobileNo","columns","headerName","width","renderCell","cellValues","color","onClick","event","downloadFiles","getFiles","id","blob","Blob","saveAs","e","get","headers","token","JSON","parse","localStorage","getItem","accessToken","responseType","withCredentials","smsFetch","mobileNo","Body","requestOptions","method","body","stringify","mode","fetch","console","log","handleClose","reason","className","as","Col","disabled","type","placeholder","isInvalid","controlId","defaultValue","map","opt","_id","rows","workbook","XLSX","worksheetData","push","properties","unshift","headerProperties","ws","style","height","files","ele","pageSize","rowsPerPageOptions","rowHeight","headerHeight","onChange","target","maxLength","taskCommencedComment","preventDefault","newErrors","findFormErrors","Object","keys","length","taskObject","taskStatus","put","taskHistory","comment","then","res","setTimeout","history","pathname","catch","error","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","display","b","a","autoBom","warn","test","c","d","XMLHttpRequest","onload","g","response","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}